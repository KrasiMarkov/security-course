{"abi":[{"type":"function","name":"accesses","inputs":[{"name":"target","type":"address","internalType":"address"}],"outputs":[{"name":"readSlots","type":"bytes32[]","internalType":"bytes32[]"},{"name":"writeSlots","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"addr","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"keyAddr","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertFalse","inputs":[{"name":"condition","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertFalse","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertTrue","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertTrue","inputs":[{"name":"condition","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assume","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"breakpoint","inputs":[{"name":"char","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"breakpoint","inputs":[{"name":"char","type":"string","internalType":"string"},{"name":"value","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[{"name":"signer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"closeFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"computeCreate2Address","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCodeHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"computeCreate2Address","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCodeHash","type":"bytes32","internalType":"bytes32"},{"name":"deployer","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"computeCreateAddress","inputs":[{"name":"deployer","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"copyFile","inputs":[{"name":"from","type":"string","internalType":"string"},{"name":"to","type":"string","internalType":"string"}],"outputs":[{"name":"copied","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"createDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"recursive","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"walletLabel","type":"string","internalType":"string"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"walletLabel","type":"string","internalType":"string"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"},{"name":"language","type":"string","internalType":"string"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"},{"name":"language","type":"string","internalType":"string"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"ensNamehash","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"envAddress","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"envAddress","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"envBool","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envBool","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"envBytes","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes32","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes32","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"envExists","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envInt","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"int256[]","internalType":"int256[]"}],"stateMutability":"view"},{"type":"function","name":"envInt","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"value","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"int256[]","internalType":"int256[]"}],"outputs":[{"name":"value","type":"int256[]","internalType":"int256[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bool","internalType":"bool"}],"outputs":[{"name":"value","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"address","internalType":"address"}],"outputs":[{"name":"value","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"value","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"value","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"value","type":"string[]","internalType":"string[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"int256","internalType":"int256"}],"outputs":[{"name":"value","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"value","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"value","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"envString","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string[]","internalType":"string[]"}],"stateMutability":"view"},{"type":"function","name":"envString","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"envUint","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"envUint","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"eth_getLogs","inputs":[{"name":"fromBlock","type":"uint256","internalType":"uint256"},{"name":"toBlock","type":"uint256","internalType":"uint256"},{"name":"target","type":"address","internalType":"address"},{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"logs","type":"tuple[]","internalType":"struct VmSafe.EthGetLogs[]","components":[{"name":"emitter","type":"address","internalType":"address"},{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"},{"name":"blockNumber","type":"uint64","internalType":"uint64"},{"name":"transactionHash","type":"bytes32","internalType":"bytes32"},{"name":"transactionIndex","type":"uint64","internalType":"uint64"},{"name":"logIndex","type":"uint256","internalType":"uint256"},{"name":"removed","type":"bool","internalType":"bool"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"exists","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"ffi","inputs":[{"name":"commandInput","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"result","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"fsMetadata","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"metadata","type":"tuple","internalType":"struct VmSafe.FsMetadata","components":[{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"},{"name":"length","type":"uint256","internalType":"uint256"},{"name":"readOnly","type":"bool","internalType":"bool"},{"name":"modified","type":"uint256","internalType":"uint256"},{"name":"accessed","type":"uint256","internalType":"uint256"},{"name":"created","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"getBlobBaseFee","inputs":[],"outputs":[{"name":"blobBaseFee","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlockNumber","inputs":[],"outputs":[{"name":"height","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlockTimestamp","inputs":[],"outputs":[{"name":"timestamp","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"creationBytecode","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getDeployedCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"runtimeBytecode","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getLabel","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"currentLabel","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getMappingKeyAndParentOf","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"elementSlot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"found","type":"bool","internalType":"bool"},{"name":"key","type":"bytes32","internalType":"bytes32"},{"name":"parent","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"getMappingLength","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"mappingSlot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"length","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"getMappingSlotAt","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"mappingSlot","type":"bytes32","internalType":"bytes32"},{"name":"idx","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"getNonce","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"nonce","type":"uint64","internalType":"uint64"}],"stateMutability":"view"},{"type":"function","name":"getNonce","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"nonce","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"getRecordedLogs","inputs":[],"outputs":[{"name":"logs","type":"tuple[]","internalType":"struct VmSafe.Log[]","components":[{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"emitter","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"indexOf","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"isContext","inputs":[{"name":"context","type":"uint8","internalType":"enum VmSafe.ForgeContext"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isDir","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"isFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"keyExists","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExistsJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExistsToml","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"label","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newLabel","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"lastCallGas","inputs":[],"outputs":[{"name":"gas","type":"tuple","internalType":"struct VmSafe.Gas","components":[{"name":"gasLimit","type":"uint64","internalType":"uint64"},{"name":"gasTotalUsed","type":"uint64","internalType":"uint64"},{"name":"gasMemoryUsed","type":"uint64","internalType":"uint64"},{"name":"gasRefunded","type":"int64","internalType":"int64"},{"name":"gasRemaining","type":"uint64","internalType":"uint64"}]}],"stateMutability":"view"},{"type":"function","name":"load","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"data","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"parseAddress","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseBool","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseBytes","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseBytes32","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseInt","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseJson","inputs":[{"name":"json","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonAddress","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonAddressArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBool","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBoolArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes32","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes32Array","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytesArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonInt","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonIntArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256[]","internalType":"int256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonKeys","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"keys","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonString","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonStringArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonUint","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonUintArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseToml","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseToml","inputs":[{"name":"toml","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlAddress","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlAddressArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBool","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBoolArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes32","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes32Array","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytesArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlInt","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlIntArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256[]","internalType":"int256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlKeys","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"keys","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlString","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlStringArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlUint","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlUintArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseUint","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"pauseGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"projectRoot","inputs":[],"outputs":[{"name":"path","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"prompt","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"input","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptAddress","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptSecret","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"input","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptUint","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"maxDepth","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"maxDepth","type":"uint64","internalType":"uint64"},{"name":"followLinks","type":"bool","internalType":"bool"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readFileBinary","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"readLine","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"line","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readLink","inputs":[{"name":"linkPath","type":"string","internalType":"string"}],"outputs":[{"name":"targetPath","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"record","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"recordLogs","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rememberKey","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"keyAddr","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"removeDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"recursive","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"removeFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"replace","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"from","type":"string","internalType":"string"},{"name":"to","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"resumeGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rpc","inputs":[{"name":"method","type":"string","internalType":"string"},{"name":"params","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"rpcUrl","inputs":[{"name":"rpcAlias","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"rpcUrlStructs","inputs":[],"outputs":[{"name":"urls","type":"tuple[]","internalType":"struct VmSafe.Rpc[]","components":[{"name":"key","type":"string","internalType":"string"},{"name":"url","type":"string","internalType":"string"}]}],"stateMutability":"view"},{"type":"function","name":"rpcUrls","inputs":[],"outputs":[{"name":"urls","type":"string[2][]","internalType":"string[2][]"}],"stateMutability":"view"},{"type":"function","name":"serializeAddress","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeAddress","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"address","internalType":"address"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBool","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBool","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bool","internalType":"bool"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes32","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes32","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeInt","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"int256","internalType":"int256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeInt","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"int256[]","internalType":"int256[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeJson","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeString","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeString","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUint","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUint","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUintToHex","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"setEnv","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sign","inputs":[{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"sign","inputs":[{"name":"signer","type":"address","internalType":"address"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"sign","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"sign","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signP256","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"sleep","inputs":[{"name":"duration","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"split","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"delimiter","type":"string","internalType":"string"}],"outputs":[{"name":"outputs","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"startBroadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBroadcast","inputs":[{"name":"signer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBroadcast","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startMappingRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startStateDiffRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopAndReturnStateDiff","inputs":[],"outputs":[{"name":"accountAccesses","type":"tuple[]","internalType":"struct VmSafe.AccountAccess[]","components":[{"name":"chainInfo","type":"tuple","internalType":"struct VmSafe.ChainInfo","components":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"chainId","type":"uint256","internalType":"uint256"}]},{"name":"kind","type":"uint8","internalType":"enum VmSafe.AccountAccessKind"},{"name":"account","type":"address","internalType":"address"},{"name":"accessor","type":"address","internalType":"address"},{"name":"initialized","type":"bool","internalType":"bool"},{"name":"oldBalance","type":"uint256","internalType":"uint256"},{"name":"newBalance","type":"uint256","internalType":"uint256"},{"name":"deployedCode","type":"bytes","internalType":"bytes"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"reverted","type":"bool","internalType":"bool"},{"name":"storageAccesses","type":"tuple[]","internalType":"struct VmSafe.StorageAccess[]","components":[{"name":"account","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"},{"name":"isWrite","type":"bool","internalType":"bool"},{"name":"previousValue","type":"bytes32","internalType":"bytes32"},{"name":"newValue","type":"bytes32","internalType":"bytes32"},{"name":"reverted","type":"bool","internalType":"bool"}]},{"name":"depth","type":"uint64","internalType":"uint64"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"stopBroadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopMappingRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"toBase64","inputs":[{"name":"data","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64URL","inputs":[{"name":"data","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64URL","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toLowercase","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"address","internalType":"address"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bool","internalType":"bool"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"int256","internalType":"int256"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toUppercase","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"trim","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"tryFfi","inputs":[{"name":"commandInput","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"result","type":"tuple","internalType":"struct VmSafe.FfiResult","components":[{"name":"exitCode","type":"int32","internalType":"int32"},{"name":"stdout","type":"bytes","internalType":"bytes"},{"name":"stderr","type":"bytes","internalType":"bytes"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"unixTime","inputs":[],"outputs":[{"name":"milliseconds","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"writeFile","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeFileBinary","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeLine","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeToml","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeToml","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"accesses(address)":"65bc9481","addr(uint256)":"ffa18649","assertApproxEqAbs(int256,int256,uint256)":"240f839d","assertApproxEqAbs(int256,int256,uint256,string)":"8289e621","assertApproxEqAbs(uint256,uint256,uint256)":"16d207c6","assertApproxEqAbs(uint256,uint256,uint256,string)":"f710b062","assertApproxEqAbsDecimal(int256,int256,uint256,uint256)":"3d5bc8bc","assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)":"6a5066d4","assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)":"045c55ce","assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)":"60429eb2","assertApproxEqRel(int256,int256,uint256)":"fea2d14f","assertApproxEqRel(int256,int256,uint256,string)":"ef277d72","assertApproxEqRel(uint256,uint256,uint256)":"8cf25ef4","assertApproxEqRel(uint256,uint256,uint256,string)":"1ecb7d33","assertApproxEqRelDecimal(int256,int256,uint256,uint256)":"abbf21cc","assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)":"fccc11c4","assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)":"21ed2977","assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)":"82d6c8fd","assertEq(address,address)":"515361f6","assertEq(address,address,string)":"2f2769d1","assertEq(address[],address[])":"3868ac34","assertEq(address[],address[],string)":"3e9173c5","assertEq(bool,bool)":"f7fe3477","assertEq(bool,bool,string)":"4db19e7e","assertEq(bool[],bool[])":"707df785","assertEq(bool[],bool[],string)":"e48a8f8d","assertEq(bytes,bytes)":"97624631","assertEq(bytes,bytes,string)":"e24fed00","assertEq(bytes32,bytes32)":"7c84c69b","assertEq(bytes32,bytes32,string)":"c1fa1ed0","assertEq(bytes32[],bytes32[])":"0cc9ee84","assertEq(bytes32[],bytes32[],string)":"e03e9177","assertEq(bytes[],bytes[])":"e5fb9b4a","assertEq(bytes[],bytes[],string)":"f413f0b6","assertEq(int256,int256)":"fe74f05b","assertEq(int256,int256,string)":"714a2f13","assertEq(int256[],int256[])":"711043ac","assertEq(int256[],int256[],string)":"191f1b30","assertEq(string,string)":"f320d963","assertEq(string,string,string)":"36f656d8","assertEq(string[],string[])":"cf1c049c","assertEq(string[],string[],string)":"eff6b27d","assertEq(uint256,uint256)":"98296c54","assertEq(uint256,uint256,string)":"88b44c85","assertEq(uint256[],uint256[])":"975d5a12","assertEq(uint256[],uint256[],string)":"5d18c73a","assertEqDecimal(int256,int256,uint256)":"48016c04","assertEqDecimal(int256,int256,uint256,string)":"7e77b0c5","assertEqDecimal(uint256,uint256,uint256)":"27af7d9c","assertEqDecimal(uint256,uint256,uint256,string)":"d0cbbdef","assertFalse(bool)":"a5982885","assertFalse(bool,string)":"7ba04809","assertGe(int256,int256)":"0a30b771","assertGe(int256,int256,string)":"a84328dd","assertGe(uint256,uint256)":"a8d4d1d9","assertGe(uint256,uint256,string)":"e25242c0","assertGeDecimal(int256,int256,uint256)":"dc28c0f1","assertGeDecimal(int256,int256,uint256,string)":"5df93c9b","assertGeDecimal(uint256,uint256,uint256)":"3d1fe08a","assertGeDecimal(uint256,uint256,uint256,string)":"8bff9133","assertGt(int256,int256)":"5a362d45","assertGt(int256,int256,string)":"f8d33b9b","assertGt(uint256,uint256)":"db07fcd2","assertGt(uint256,uint256,string)":"d9a3c4d2","assertGtDecimal(int256,int256,uint256)":"78611f0e","assertGtDecimal(int256,int256,uint256,string)":"04a5c7ab","assertGtDecimal(uint256,uint256,uint256)":"eccd2437","assertGtDecimal(uint256,uint256,uint256,string)":"64949a8d","assertLe(int256,int256)":"95fd154e","assertLe(int256,int256,string)":"4dfe692c","assertLe(uint256,uint256)":"8466f415","assertLe(uint256,uint256,string)":"d17d4b0d","assertLeDecimal(int256,int256,uint256)":"11d1364a","assertLeDecimal(int256,int256,uint256,string)":"aa5cf788","assertLeDecimal(uint256,uint256,uint256)":"c304aab7","assertLeDecimal(uint256,uint256,uint256,string)":"7fefbbe0","assertLt(int256,int256)":"3e914080","assertLt(int256,int256,string)":"9ff531e3","assertLt(uint256,uint256)":"b12fc005","assertLt(uint256,uint256,string)":"65d5c135","assertLtDecimal(int256,int256,uint256)":"dbe8d88b","assertLtDecimal(int256,int256,uint256,string)":"40f0b4e0","assertLtDecimal(uint256,uint256,uint256)":"2077337e","assertLtDecimal(uint256,uint256,uint256,string)":"a972d037","assertNotEq(address,address)":"b12e1694","assertNotEq(address,address,string)":"8775a591","assertNotEq(address[],address[])":"46d0b252","assertNotEq(address[],address[],string)":"72c7e0b5","assertNotEq(bool,bool)":"236e4d66","assertNotEq(bool,bool,string)":"1091a261","assertNotEq(bool[],bool[])":"286fafea","assertNotEq(bool[],bool[],string)":"62c6f9fb","assertNotEq(bytes,bytes)":"3cf78e28","assertNotEq(bytes,bytes,string)":"9507540e","assertNotEq(bytes32,bytes32)":"898e83fc","assertNotEq(bytes32,bytes32,string)":"b2332f51","assertNotEq(bytes32[],bytes32[])":"0603ea68","assertNotEq(bytes32[],bytes32[],string)":"b873634c","assertNotEq(bytes[],bytes[])":"edecd035","assertNotEq(bytes[],bytes[],string)":"1dcd1f68","assertNotEq(int256,int256)":"f4c004e3","assertNotEq(int256,int256,string)":"4724c5b9","assertNotEq(int256[],int256[])":"0b72f4ef","assertNotEq(int256[],int256[],string)":"d3977322","assertNotEq(string,string)":"6a8237b3","assertNotEq(string,string,string)":"78bdcea7","assertNotEq(string[],string[])":"bdfacbe8","assertNotEq(string[],string[],string)":"b67187f3","assertNotEq(uint256,uint256)":"b7909320","assertNotEq(uint256,uint256,string)":"98f9bdbd","assertNotEq(uint256[],uint256[])":"56f29cba","assertNotEq(uint256[],uint256[],string)":"9a7fbd8f","assertNotEqDecimal(int256,int256,uint256)":"14e75680","assertNotEqDecimal(int256,int256,uint256,string)":"33949f0b","assertNotEqDecimal(uint256,uint256,uint256)":"669efca7","assertNotEqDecimal(uint256,uint256,uint256,string)":"f5a55558","assertTrue(bool)":"0c9fd581","assertTrue(bool,string)":"a34edc03","assume(bool)":"4c63e562","breakpoint(string)":"f0259e92","breakpoint(string,bool)":"f7d39a8d","broadcast()":"afc98040","broadcast(address)":"e6962cdb","broadcast(uint256)":"f67a965b","closeFile(string)":"48c3241f","computeCreate2Address(bytes32,bytes32)":"890c283b","computeCreate2Address(bytes32,bytes32,address)":"d323826a","computeCreateAddress(address,uint256)":"74637a7a","copyFile(string,string)":"a54a87d8","createDir(string,bool)":"168b64d3","createWallet(string)":"7404f1d2","createWallet(uint256)":"7a675bb6","createWallet(uint256,string)":"ed7c5462","deriveKey(string,string,uint32)":"6bcb2c1b","deriveKey(string,string,uint32,string)":"29233b1f","deriveKey(string,uint32)":"6229498b","deriveKey(string,uint32,string)":"32c8176d","ensNamehash(string)":"8c374c65","envAddress(string)":"350d56bf","envAddress(string,string)":"ad31b9fa","envBool(string)":"7ed1ec7d","envBool(string,string)":"aaaddeaf","envBytes(string)":"4d7baf06","envBytes(string,string)":"ddc2651b","envBytes32(string)":"97949042","envBytes32(string,string)":"5af231c1","envExists(string)":"ce8365f9","envInt(string)":"892a0c61","envInt(string,string)":"42181150","envOr(string,address)":"561fe540","envOr(string,bool)":"4777f3cf","envOr(string,bytes)":"b3e47705","envOr(string,bytes32)":"b4a85892","envOr(string,int256)":"bbcb713e","envOr(string,string)":"d145736c","envOr(string,string,address[])":"c74e9deb","envOr(string,string,bool[])":"eb85e83b","envOr(string,string,bytes32[])":"2281f367","envOr(string,string,bytes[])":"64bc3e64","envOr(string,string,int256[])":"4700d74b","envOr(string,string,string[])":"859216bc","envOr(string,string,uint256[])":"74318528","envOr(string,uint256)":"5e97348f","envString(string)":"f877cb19","envString(string,string)":"14b02bc9","envUint(string)":"c1978d1f","envUint(string,string)":"f3dec099","eth_getLogs(uint256,uint256,address,bytes32[])":"35e1349b","exists(string)":"261a323e","ffi(string[])":"89160467","fsMetadata(string)":"af368a08","getBlobBaseFee()":"1f6d6ef7","getBlockNumber()":"42cbb15c","getBlockTimestamp()":"796b89b9","getCode(string)":"8d1cc925","getDeployedCode(string)":"3ebf73b4","getLabel(address)":"28a249b0","getMappingKeyAndParentOf(address,bytes32)":"876e24e6","getMappingLength(address,bytes32)":"2f2fd63f","getMappingSlotAt(address,bytes32,uint256)":"ebc73ab4","getNonce((address,uint256,uint256,uint256))":"a5748aad","getNonce(address)":"2d0335ab","getRecordedLogs()":"191553a4","indexOf(string,string)":"8a0807b7","isContext(uint8)":"64af255d","isDir(string)":"7d15d019","isFile(string)":"e0eb04d4","keyExists(string,string)":"528a683c","keyExistsJson(string,string)":"db4235f6","keyExistsToml(string,string)":"600903ad","label(address,string)":"c657c718","lastCallGas()":"2b589b28","load(address,bytes32)":"667f9d70","parseAddress(string)":"c6ce059d","parseBool(string)":"974ef924","parseBytes(string)":"8f5d232d","parseBytes32(string)":"087e6e81","parseInt(string)":"42346c5e","parseJson(string)":"6a82600a","parseJson(string,string)":"85940ef1","parseJsonAddress(string,string)":"1e19e657","parseJsonAddressArray(string,string)":"2fce7883","parseJsonBool(string,string)":"9f86dc91","parseJsonBoolArray(string,string)":"91f3b94f","parseJsonBytes(string,string)":"fd921be8","parseJsonBytes32(string,string)":"1777e59d","parseJsonBytes32Array(string,string)":"91c75bc3","parseJsonBytesArray(string,string)":"6631aa99","parseJsonInt(string,string)":"7b048ccd","parseJsonIntArray(string,string)":"9983c28a","parseJsonKeys(string,string)":"213e4198","parseJsonString(string,string)":"49c4fac8","parseJsonStringArray(string,string)":"498fdcf4","parseJsonUint(string,string)":"addde2b6","parseJsonUintArray(string,string)":"522074ab","parseToml(string)":"592151f0","parseToml(string,string)":"37736e08","parseTomlAddress(string,string)":"65e7c844","parseTomlAddressArray(string,string)":"65c428e7","parseTomlBool(string,string)":"d30dced6","parseTomlBoolArray(string,string)":"127cfe9a","parseTomlBytes(string,string)":"d77bfdb9","parseTomlBytes32(string,string)":"8e214810","parseTomlBytes32Array(string,string)":"3e716f81","parseTomlBytesArray(string,string)":"b197c247","parseTomlInt(string,string)":"c1350739","parseTomlIntArray(string,string)":"d3522ae6","parseTomlKeys(string,string)":"812a44b2","parseTomlString(string,string)":"8bb8dd43","parseTomlStringArray(string,string)":"9f629281","parseTomlUint(string,string)":"cc7b0487","parseTomlUintArray(string,string)":"b5df27c8","parseUint(string)":"fa91454d","pauseGasMetering()":"d1a5b36f","projectRoot()":"d930a0e6","prompt(string)":"47eaf474","promptAddress(string)":"62ee05f4","promptSecret(string)":"1e279d41","promptUint(string)":"652fd489","readDir(string)":"c4bc59e0","readDir(string,uint64)":"1497876c","readDir(string,uint64,bool)":"8102d70d","readFile(string)":"60f9bb11","readFileBinary(string)":"16ed7bc4","readLine(string)":"70f55728","readLink(string)":"9f5684a2","record()":"266cf109","recordLogs()":"41af2f52","rememberKey(uint256)":"22100064","removeDir(string,bool)":"45c62011","removeFile(string)":"f1afe04d","replace(string,string,string)":"e00ad03e","resumeGasMetering()":"2bcd50e0","rpc(string,string)":"1206c8a8","rpcUrl(string)":"975a6ce9","rpcUrlStructs()":"9d2ad72a","rpcUrls()":"a85a8418","serializeAddress(string,string,address)":"972c6062","serializeAddress(string,string,address[])":"1e356e1a","serializeBool(string,string,bool)":"ac22e971","serializeBool(string,string,bool[])":"92925aa1","serializeBytes(string,string,bytes)":"f21d52c7","serializeBytes(string,string,bytes[])":"9884b232","serializeBytes32(string,string,bytes32)":"2d812b44","serializeBytes32(string,string,bytes32[])":"201e43e2","serializeInt(string,string,int256)":"3f33db60","serializeInt(string,string,int256[])":"7676e127","serializeJson(string,string)":"9b3358b0","serializeString(string,string,string)":"88da6d35","serializeString(string,string,string[])":"561cd6f3","serializeUint(string,string,uint256)":"129e9002","serializeUint(string,string,uint256[])":"fee9a469","serializeUintToHex(string,string,uint256)":"ae5a2ae8","setEnv(string,string)":"3d5923ee","sign((address,uint256,uint256,uint256),bytes32)":"b25c5a25","sign(address,bytes32)":"8c1aa205","sign(bytes32)":"799cd333","sign(uint256,bytes32)":"e341eaa4","signP256(uint256,bytes32)":"83211b40","sleep(uint256)":"fa9d8713","split(string,string)":"8bb75533","startBroadcast()":"7fb5297f","startBroadcast(address)":"7fec2a8d","startBroadcast(uint256)":"ce817d47","startMappingRecording()":"3e9705c0","startStateDiffRecording()":"cf22e3c9","stopAndReturnStateDiff()":"aa5cf90e","stopBroadcast()":"76eadd36","stopMappingRecording()":"0d4aae9b","toBase64(bytes)":"a5cbfe65","toBase64(string)":"3f8be2c8","toBase64URL(bytes)":"c8bd0e4a","toBase64URL(string)":"ae3165b3","toLowercase(string)":"50bb0884","toString(address)":"56ca623e","toString(bool)":"71dce7da","toString(bytes)":"71aad10d","toString(bytes32)":"b11a19e8","toString(int256)":"a322c40e","toString(uint256)":"6900a3ae","toUppercase(string)":"074ae3d7","trim(string)":"b2dad155","tryFfi(string[])":"f45c1ce7","unixTime()":"625387dc","writeFile(string,string)":"897e0a97","writeFileBinary(string,bytes)":"1f21fc80","writeJson(string,string)":"e23cd19f","writeJson(string,string,string)":"35d6ad46","writeLine(string,string)":"619d897f","writeToml(string,string)":"c0865ba7","writeToml(string,string,string)":"51ac6a33"},"rawMetadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"accesses\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"readSlots\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"writeSlots\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"addr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assume\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"closeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"computeCreateAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"copyFile\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"copied\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"createDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"ensNamehash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"defaultValue\",\"type\":\"bytes32[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"defaultValue\",\"type\":\"int256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"defaultValue\",\"type\":\"bool\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"defaultValue\",\"type\":\"address\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"defaultValue\",\"type\":\"uint256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"defaultValue\",\"type\":\"bytes[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"defaultValue\",\"type\":\"uint256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"defaultValue\",\"type\":\"string[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"defaultValue\",\"type\":\"bytes\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"defaultValue\",\"type\":\"bytes32\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"defaultValue\",\"type\":\"int256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"defaultValue\",\"type\":\"address[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"defaultValue\",\"type\":\"string\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"defaultValue\",\"type\":\"bool[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fromBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"}],\"name\":\"eth_getLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"transactionHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"transactionIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"logIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"removed\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.EthGetLogs[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"ffi\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"fsMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"readOnly\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"modified\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accessed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"created\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.FsMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlobBaseFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blobBaseFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"height\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"creationBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getDeployedCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"runtimeBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getLabel\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"currentLabel\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"elementSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingKeyAndParentOf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"found\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"parent\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"getMappingSlotAt\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRecordedLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.Log[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"indexOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum VmSafe.ForgeContext\",\"name\":\"context\",\"type\":\"uint8\"}],\"name\":\"isContext\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isDir\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isFile\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsJson\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsToml\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"newLabel\",\"type\":\"string\"}],\"name\":\"label\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastCallGas\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"gasLimit\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasTotalUsed\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasMemoryUsed\",\"type\":\"uint64\"},{\"internalType\":\"int64\",\"name\":\"gasRefunded\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"gasRemaining\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.Gas\",\"name\":\"gas\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"load\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"parsedValue\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"parsedValue\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"parsedValue\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"parsedValue\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"parsedValue\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"parsedValue\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectRoot\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"prompt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptSecret\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"followLinks\",\"type\":\"bool\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFile\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFileBinary\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readLine\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"line\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"linkPath\",\"type\":\"string\"}],\"name\":\"readLink\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"targetPath\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"record\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recordLogs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"rememberKey\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"removeDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"removeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"replace\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resumeGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"params\",\"type\":\"string\"}],\"name\":\"rpc\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"rpcAlias\",\"type\":\"string\"}],\"name\":\"rpcUrl\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrlStructs\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"}],\"internalType\":\"struct VmSafe.Rpc[]\",\"name\":\"urls\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrls\",\"outputs\":[{\"internalType\":\"string[2][]\",\"name\":\"urls\",\"type\":\"string[2][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"values\",\"type\":\"bool[]\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"values\",\"type\":\"bytes[]\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"values\",\"type\":\"bytes32[]\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"values\",\"type\":\"int256[]\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeJson\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"values\",\"type\":\"string[]\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUintToHex\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"setEnv\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signP256\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"sleep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delimiter\",\"type\":\"string\"}],\"name\":\"split\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"outputs\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startStateDiffRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopAndReturnStateDiff\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.ChainInfo\",\"name\":\"chainInfo\",\"type\":\"tuple\"},{\"internalType\":\"enum VmSafe.AccountAccessKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"accessor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"oldBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"deployedCode\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isWrite\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"previousValue\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"newValue\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.StorageAccess[]\",\"name\":\"storageAccesses\",\"type\":\"tuple[]\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.AccountAccess[]\",\"name\":\"accountAccesses\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toLowercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toUppercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"trim\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"tryFfi\",\"outputs\":[{\"components\":[{\"internalType\":\"int32\",\"name\":\"exitCode\",\"type\":\"int32\"},{\"internalType\":\"bytes\",\"name\":\"stdout\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"stderr\",\"type\":\"bytes\"}],\"internalType\":\"struct VmSafe.FfiResult\",\"name\":\"result\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unixTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"milliseconds\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"writeFileBinary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeLine\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accesses(address)\":{\"notice\":\"Gets all accessed reads and write slot from a `vm.record` session, for a given address.\"},\"addr(uint256)\":{\"notice\":\"Gets the address for a given private key.\"},\"assertApproxEqAbs(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbs(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRel(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRel(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEq(address,address)\":{\"notice\":\"Asserts that two `address` values are equal.\"},\"assertEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are equal.\"},\"assertEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are equal.\"},\"assertEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are equal.\"},\"assertEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are equal.\"},\"assertEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are equal.\"},\"assertEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal.\"},\"assertEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal.\"},\"assertEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are equal.\"},\"assertEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are equal.\"},\"assertEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(string,string)\":{\"notice\":\"Asserts that two `string` values are equal.\"},\"assertEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are equal.\"},\"assertEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal.\"},\"assertEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256 values are equal.\"},\"assertEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertFalse(bool)\":{\"notice\":\"Asserts that the given condition is false.\"},\"assertFalse(bool,string)\":{\"notice\":\"Asserts that the given condition is false and includes error message into revert string on failure.\"},\"assertGe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second.\"},\"assertGt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second.\"},\"assertGt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second.\"},\"assertLe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second.\"},\"assertLe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second.\"},\"assertLt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second.\"},\"assertLt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEq(address,address)\":{\"notice\":\"Asserts that two `address` values are not equal.\"},\"assertNotEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are not equal.\"},\"assertNotEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are not equal.\"},\"assertNotEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal.\"},\"assertNotEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are not equal.\"},\"assertNotEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are not equal.\"},\"assertNotEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal.\"},\"assertNotEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal.\"},\"assertNotEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are not equal.\"},\"assertNotEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal.\"},\"assertNotEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string,string)\":{\"notice\":\"Asserts that two `string` values are not equal.\"},\"assertNotEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are not equal.\"},\"assertNotEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal.\"},\"assertNotEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal.\"},\"assertNotEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertTrue(bool)\":{\"notice\":\"Asserts that the given condition is true.\"},\"assertTrue(bool,string)\":{\"notice\":\"Asserts that the given condition is true and includes error message into revert string on failure.\"},\"assume(bool)\":{\"notice\":\"If the condition is false, discard this run's fuzz inputs and generate new ones.\"},\"breakpoint(string)\":{\"notice\":\"Writes a breakpoint to jump to in the debugger.\"},\"breakpoint(string,bool)\":{\"notice\":\"Writes a conditional breakpoint to jump to in the debugger.\"},\"broadcast()\":{\"notice\":\"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"broadcast(address)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain.\"},\"broadcast(uint256)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain.\"},\"closeFile(string)\":{\"notice\":\"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root.\"},\"computeCreate2Address(bytes32,bytes32)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer.\"},\"computeCreate2Address(bytes32,bytes32,address)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer.\"},\"computeCreateAddress(address,uint256)\":{\"notice\":\"Compute the address a contract will be deployed at for a given deployer address and nonce.\"},\"copyFile(string,string)\":{\"notice\":\"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root.\"},\"createDir(string,bool)\":{\"notice\":\"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root.\"},\"createWallet(string)\":{\"notice\":\"Derives a private key from the name, labels the account with that name, and returns the wallet.\"},\"createWallet(uint256)\":{\"notice\":\"Generates a wallet from the private key and returns the wallet.\"},\"createWallet(uint256,string)\":{\"notice\":\"Generates a wallet from the private key, labels the account with that name, and returns the wallet.\"},\"deriveKey(string,string,uint32)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) at `{derivationPath}{index}`.\"},\"deriveKey(string,string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at `{derivationPath}{index}`.\"},\"deriveKey(string,uint32)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"deriveKey(string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"ensNamehash(string)\":{\"notice\":\"Returns ENS namehash for provided string.\"},\"envAddress(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed.\"},\"envAddress(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envExists(string)\":{\"notice\":\"Gets the environment variable `name` and returns true if it exists, else returns false.\"},\"envInt(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed.\"},\"envInt(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envOr(string,address)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bool)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes32)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,int256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,address[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bool[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes32[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,int256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,string[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,uint256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,uint256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envString(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed.\"},\"envString(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"eth_getLogs(uint256,uint256,address,bytes32[])\":{\"notice\":\"Gets all the logs according to specified filter.\"},\"exists(string)\":{\"notice\":\"Returns true if the given path points to an existing entity, else returns false.\"},\"ffi(string[])\":{\"notice\":\"Performs a foreign function call via the terminal.\"},\"fsMetadata(string)\":{\"notice\":\"Given a path, query the file system to get information about a file, directory, etc.\"},\"getBlobBaseFee()\":{\"notice\":\"Gets the current `block.blobbasefee`. You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlockNumber()\":{\"notice\":\"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlockTimestamp()\":{\"notice\":\"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getCode(string)\":{\"notice\":\"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getDeployedCode(string)\":{\"notice\":\"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getLabel(address)\":{\"notice\":\"Gets the label for the specified address.\"},\"getMappingKeyAndParentOf(address,bytes32)\":{\"notice\":\"Gets the map key and parent of a mapping at a given slot, for a given address.\"},\"getMappingLength(address,bytes32)\":{\"notice\":\"Gets the number of elements in the mapping at the given slot, for a given address.\"},\"getMappingSlotAt(address,bytes32,uint256)\":{\"notice\":\"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping).\"},\"getNonce((address,uint256,uint256,uint256))\":{\"notice\":\"Get a `Wallet`'s nonce.\"},\"getNonce(address)\":{\"notice\":\"Gets the nonce of an account.\"},\"getRecordedLogs()\":{\"notice\":\"Gets all the recorded logs.\"},\"indexOf(string,string)\":{\"notice\":\"Returns the index of the first occurrence of a `key` in an `input` string. Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found. Returns 0 in case of an empty `key`.\"},\"isContext(uint8)\":{\"notice\":\"Returns true if `forge` command was executed in given context.\"},\"isDir(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a directory, else returns false.\"},\"isFile(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a regular file, else returns false.\"},\"keyExists(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions.\"},\"keyExistsJson(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object.\"},\"keyExistsToml(string,string)\":{\"notice\":\"Checks if `key` exists in a TOML table.\"},\"label(address,string)\":{\"notice\":\"Labels an address in call traces.\"},\"lastCallGas()\":{\"notice\":\"Gets the gas used in the last call.\"},\"load(address,bytes32)\":{\"notice\":\"Loads a storage slot from an address.\"},\"parseAddress(string)\":{\"notice\":\"Parses the given `string` into an `address`.\"},\"parseBool(string)\":{\"notice\":\"Parses the given `string` into a `bool`.\"},\"parseBytes(string)\":{\"notice\":\"Parses the given `string` into `bytes`.\"},\"parseBytes32(string)\":{\"notice\":\"Parses the given `string` into a `bytes32`.\"},\"parseInt(string)\":{\"notice\":\"Parses the given `string` into a `int256`.\"},\"parseJson(string)\":{\"notice\":\"ABI-encodes a JSON object.\"},\"parseJson(string,string)\":{\"notice\":\"ABI-encodes a JSON object at `key`.\"},\"parseJsonAddress(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address`.\"},\"parseJsonAddressArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address[]`.\"},\"parseJsonBool(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool`.\"},\"parseJsonBoolArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool[]`.\"},\"parseJsonBytes(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes`.\"},\"parseJsonBytes32(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32`.\"},\"parseJsonBytes32Array(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32[]`.\"},\"parseJsonBytesArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes[]`.\"},\"parseJsonInt(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256`.\"},\"parseJsonIntArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256[]`.\"},\"parseJsonKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a JSON object.\"},\"parseJsonString(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string`.\"},\"parseJsonStringArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string[]`.\"},\"parseJsonUint(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256`.\"},\"parseJsonUintArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256[]`.\"},\"parseToml(string)\":{\"notice\":\"ABI-encodes a TOML table.\"},\"parseToml(string,string)\":{\"notice\":\"ABI-encodes a TOML table at `key`.\"},\"parseTomlAddress(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address`.\"},\"parseTomlAddressArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address[]`.\"},\"parseTomlBool(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool`.\"},\"parseTomlBoolArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool[]`.\"},\"parseTomlBytes(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes`.\"},\"parseTomlBytes32(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32`.\"},\"parseTomlBytes32Array(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32[]`.\"},\"parseTomlBytesArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes[]`.\"},\"parseTomlInt(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256`.\"},\"parseTomlIntArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256[]`.\"},\"parseTomlKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a TOML table.\"},\"parseTomlString(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string`.\"},\"parseTomlStringArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string[]`.\"},\"parseTomlUint(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256`.\"},\"parseTomlUintArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256[]`.\"},\"parseUint(string)\":{\"notice\":\"Parses the given `string` into a `uint256`.\"},\"pauseGasMetering()\":{\"notice\":\"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused.\"},\"projectRoot()\":{\"notice\":\"Get the path of the current project root.\"},\"prompt(string)\":{\"notice\":\"Prompts the user for a string value in the terminal.\"},\"promptAddress(string)\":{\"notice\":\"Prompts the user for an address in the terminal.\"},\"promptSecret(string)\":{\"notice\":\"Prompts the user for a hidden string value in the terminal.\"},\"promptUint(string)\":{\"notice\":\"Prompts the user for uint256 in the terminal.\"},\"readDir(string)\":{\"notice\":\"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true.\"},\"readDir(string,uint64)\":{\"notice\":\"See `readDir(string)`.\"},\"readDir(string,uint64,bool)\":{\"notice\":\"See `readDir(string)`.\"},\"readFile(string)\":{\"notice\":\"Reads the entire content of file to string. `path` is relative to the project root.\"},\"readFileBinary(string)\":{\"notice\":\"Reads the entire content of file as binary. `path` is relative to the project root.\"},\"readLine(string)\":{\"notice\":\"Reads next line of file to string.\"},\"readLink(string)\":{\"notice\":\"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist.\"},\"record()\":{\"notice\":\"Records all storage reads and writes.\"},\"recordLogs()\":{\"notice\":\"Record all the transaction logs.\"},\"rememberKey(uint256)\":{\"notice\":\"Adds a private key to the local forge wallet and returns the address.\"},\"removeDir(string,bool)\":{\"notice\":\"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root.\"},\"removeFile(string)\":{\"notice\":\"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root.\"},\"replace(string,string,string)\":{\"notice\":\"Replaces occurrences of `from` in the given `string` with `to`.\"},\"resumeGasMetering()\":{\"notice\":\"Resumes gas metering (i.e. gas usage is counted again). Noop if already on.\"},\"rpc(string,string)\":{\"notice\":\"Performs an Ethereum JSON-RPC request to the current fork URL.\"},\"rpcUrl(string)\":{\"notice\":\"Returns the RPC url for the given alias.\"},\"rpcUrlStructs()\":{\"notice\":\"Returns all rpc urls and their aliases as structs.\"},\"rpcUrls()\":{\"notice\":\"Returns all rpc urls and their aliases `[alias, url][]`.\"},\"serializeAddress(string,string,address)\":{\"notice\":\"See `serializeJson`.\"},\"serializeAddress(string,string,address[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeJson(string,string)\":{\"notice\":\"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment.\"},\"serializeString(string,string,string)\":{\"notice\":\"See `serializeJson`.\"},\"serializeString(string,string,string[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUintToHex(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"setEnv(string,string)\":{\"notice\":\"Sets environment variables.\"},\"sign((address,uint256,uint256,uint256),bytes32)\":{\"notice\":\"Signs data with a `Wallet`.\"},\"sign(address,bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Raises error if none of the signers passed into the script have provided address.\"},\"sign(bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script.\"},\"sign(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256k1 curve.\"},\"signP256(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256r1 curve.\"},\"sleep(uint256)\":{\"notice\":\"Suspends execution of the main thread for `duration` milliseconds.\"},\"split(string,string)\":{\"notice\":\"Splits the given `string` into an array of strings divided by the `delimiter`.\"},\"startBroadcast()\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"startBroadcast(address)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain.\"},\"startBroadcast(uint256)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain.\"},\"startMappingRecording()\":{\"notice\":\"Starts recording all map SSTOREs for later retrieval.\"},\"startStateDiffRecording()\":{\"notice\":\"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls\"},\"stopAndReturnStateDiff()\":{\"notice\":\"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session.\"},\"stopBroadcast()\":{\"notice\":\"Stops collecting onchain transactions.\"},\"stopMappingRecording()\":{\"notice\":\"Stops recording all map SSTOREs for later retrieval and clears the recorded data.\"},\"toBase64(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64 string.\"},\"toBase64(string)\":{\"notice\":\"Encodes a `string` value to a base64 string.\"},\"toBase64URL(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64url string.\"},\"toBase64URL(string)\":{\"notice\":\"Encodes a `string` value to a base64url string.\"},\"toLowercase(string)\":{\"notice\":\"Converts the given `string` value to Lowercase.\"},\"toString(address)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bool)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes32)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(int256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(uint256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toUppercase(string)\":{\"notice\":\"Converts the given `string` value to Uppercase.\"},\"trim(string)\":{\"notice\":\"Trims leading and trailing whitespace from the given `string` value.\"},\"tryFfi(string[])\":{\"notice\":\"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr.\"},\"unixTime()\":{\"notice\":\"Returns the time since unix epoch in milliseconds.\"},\"writeFile(string,string)\":{\"notice\":\"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeFileBinary(string,bytes)\":{\"notice\":\"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeJson(string,string)\":{\"notice\":\"Write a serialized JSON object to a file. If the file exists, it will be overwritten.\"},\"writeJson(string,string,string)\":{\"notice\":\"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing.\"},\"writeLine(string,string)\":{\"notice\":\"Writes line to file, creating a file if it does not exist. `path` is relative to the project root.\"},\"writeToml(string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML to a file.\"},\"writeToml(string,string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing.\"}},\"notice\":\"The `VmSafe` interface does not allow manipulation of the EVM state or other actions that may result in Script simulations differing from on-chain execution. It is recommended to only use these cheats in scripts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/Vm.sol\":\"VmSafe\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":base64/=lib/base64/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xf92ea94fe38f8370a8dc5f591ebfb4958869e18d877469ce422162cc88c8b063\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://620b5d4b2ff24d66120ce9dbb72fbde7276f2e8b3bb93f626874183aee01e307\",\"dweb:/ipfs/Qmcyc8co7vCiJ7gUd3jj5Hc1rRPihjt3WSKs5ut6eiU1Ze\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.7.6+commit.7338295f"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"accesses","outputs":[{"internalType":"bytes32[]","name":"readSlots","type":"bytes32[]"},{"internalType":"bytes32[]","name":"writeSlots","type":"bytes32[]"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"pure","type":"function","name":"addr","outputs":[{"internalType":"address","name":"keyAddr","type":"address"}]},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertFalse"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertFalse"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertTrue"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertTrue"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assume"},{"inputs":[{"internalType":"string","name":"char","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"breakpoint"},{"inputs":[{"internalType":"string","name":"char","type":"string"},{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"breakpoint"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"closeFile"},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"initCodeHash","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"computeCreate2Address","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"initCodeHash","type":"bytes32"},{"internalType":"address","name":"deployer","type":"address"}],"stateMutability":"pure","type":"function","name":"computeCreate2Address","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"deployer","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"pure","type":"function","name":"computeCreateAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"copyFile","outputs":[{"internalType":"uint64","name":"copied","type":"uint64"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bool","name":"recursive","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"createDir"},{"inputs":[{"internalType":"string","name":"walletLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"string","name":"walletLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"},{"internalType":"string","name":"language","type":"string"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"},{"internalType":"string","name":"language","type":"string"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"pure","type":"function","name":"ensNamehash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envAddress","outputs":[{"internalType":"address","name":"value","type":"address"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envAddress","outputs":[{"internalType":"address[]","name":"value","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBool","outputs":[{"internalType":"bool","name":"value","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBool","outputs":[{"internalType":"bool[]","name":"value","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes","outputs":[{"internalType":"bytes","name":"value","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes","outputs":[{"internalType":"bytes[]","name":"value","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes32","outputs":[{"internalType":"bytes32[]","name":"value","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes32","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envExists","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envInt","outputs":[{"internalType":"int256[]","name":"value","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envInt","outputs":[{"internalType":"int256","name":"value","type":"int256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bytes32[]","name":"defaultValue","type":"bytes32[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes32[]","name":"value","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"int256[]","name":"defaultValue","type":"int256[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"int256[]","name":"value","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bool","name":"defaultValue","type":"bool"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bool","name":"value","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"address","name":"defaultValue","type":"address"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"address","name":"value","type":"address"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"defaultValue","type":"uint256"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bytes[]","name":"defaultValue","type":"bytes[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes[]","name":"value","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"uint256[]","name":"defaultValue","type":"uint256[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"uint256[]","name":"value","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"string[]","name":"defaultValue","type":"string[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"string[]","name":"value","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes","name":"defaultValue","type":"bytes"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes","name":"value","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes32","name":"defaultValue","type":"bytes32"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"int256","name":"defaultValue","type":"int256"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"int256","name":"value","type":"int256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"address[]","name":"defaultValue","type":"address[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"address[]","name":"value","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"defaultValue","type":"string"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"string","name":"value","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bool[]","name":"defaultValue","type":"bool[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bool[]","name":"value","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envString","outputs":[{"internalType":"string[]","name":"value","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envString","outputs":[{"internalType":"string","name":"value","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envUint","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envUint","outputs":[{"internalType":"uint256[]","name":"value","type":"uint256[]"}]},{"inputs":[{"internalType":"uint256","name":"fromBlock","type":"uint256"},{"internalType":"uint256","name":"toBlock","type":"uint256"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"eth_getLogs","outputs":[{"internalType":"struct VmSafe.EthGetLogs[]","name":"logs","type":"tuple[]","components":[{"internalType":"address","name":"emitter","type":"address"},{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"internalType":"uint64","name":"blockNumber","type":"uint64"},{"internalType":"bytes32","name":"transactionHash","type":"bytes32"},{"internalType":"uint64","name":"transactionIndex","type":"uint64"},{"internalType":"uint256","name":"logIndex","type":"uint256"},{"internalType":"bool","name":"removed","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"exists","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string[]","name":"commandInput","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"ffi","outputs":[{"internalType":"bytes","name":"result","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"fsMetadata","outputs":[{"internalType":"struct VmSafe.FsMetadata","name":"metadata","type":"tuple","components":[{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"},{"internalType":"uint256","name":"length","type":"uint256"},{"internalType":"bool","name":"readOnly","type":"bool"},{"internalType":"uint256","name":"modified","type":"uint256"},{"internalType":"uint256","name":"accessed","type":"uint256"},{"internalType":"uint256","name":"created","type":"uint256"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlobBaseFee","outputs":[{"internalType":"uint256","name":"blobBaseFee","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockNumber","outputs":[{"internalType":"uint256","name":"height","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockTimestamp","outputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"view","type":"function","name":"getCode","outputs":[{"internalType":"bytes","name":"creationBytecode","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"view","type":"function","name":"getDeployedCode","outputs":[{"internalType":"bytes","name":"runtimeBytecode","type":"bytes"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getLabel","outputs":[{"internalType":"string","name":"currentLabel","type":"string"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"elementSlot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"getMappingKeyAndParentOf","outputs":[{"internalType":"bool","name":"found","type":"bool"},{"internalType":"bytes32","name":"key","type":"bytes32"},{"internalType":"bytes32","name":"parent","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"mappingSlot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"getMappingLength","outputs":[{"internalType":"uint256","name":"length","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"mappingSlot","type":"bytes32"},{"internalType":"uint256","name":"idx","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"getMappingSlotAt","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}],"stateMutability":"nonpayable","type":"function","name":"getNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"getRecordedLogs","outputs":[{"internalType":"struct VmSafe.Log[]","name":"logs","type":"tuple[]","components":[{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"address","name":"emitter","type":"address"}]}]},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"indexOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"enum VmSafe.ForgeContext","name":"context","type":"uint8"}],"stateMutability":"view","type":"function","name":"isContext","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"isDir","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"isFile","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExists","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExistsJson","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExistsToml","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"string","name":"newLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"label"},{"inputs":[],"stateMutability":"view","type":"function","name":"lastCallGas","outputs":[{"internalType":"struct VmSafe.Gas","name":"gas","type":"tuple","components":[{"internalType":"uint64","name":"gasLimit","type":"uint64"},{"internalType":"uint64","name":"gasTotalUsed","type":"uint64"},{"internalType":"uint64","name":"gasMemoryUsed","type":"uint64"},{"internalType":"int64","name":"gasRefunded","type":"int64"},{"internalType":"uint64","name":"gasRemaining","type":"uint64"}]}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"}],"stateMutability":"view","type":"function","name":"load","outputs":[{"internalType":"bytes32","name":"data","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseAddress","outputs":[{"internalType":"address","name":"parsedValue","type":"address"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBool","outputs":[{"internalType":"bool","name":"parsedValue","type":"bool"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBytes","outputs":[{"internalType":"bytes","name":"parsedValue","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBytes32","outputs":[{"internalType":"bytes32","name":"parsedValue","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseInt","outputs":[{"internalType":"int256","name":"parsedValue","type":"int256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJson","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJson","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytesArray","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonKeys","outputs":[{"internalType":"string[]","name":"keys","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonStringArray","outputs":[{"internalType":"string[]","name":"","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseToml","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"}],"stateMutability":"pure","type":"function","name":"parseToml","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytesArray","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlKeys","outputs":[{"internalType":"string[]","name":"keys","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlStringArray","outputs":[{"internalType":"string[]","name":"","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseUint","outputs":[{"internalType":"uint256","name":"parsedValue","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"pauseGasMetering"},{"inputs":[],"stateMutability":"view","type":"function","name":"projectRoot","outputs":[{"internalType":"string","name":"path","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"prompt","outputs":[{"internalType":"string","name":"input","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptSecret","outputs":[{"internalType":"string","name":"input","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"maxDepth","type":"uint64"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"maxDepth","type":"uint64"},{"internalType":"bool","name":"followLinks","type":"bool"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readFile","outputs":[{"internalType":"string","name":"data","type":"string"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readFileBinary","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readLine","outputs":[{"internalType":"string","name":"line","type":"string"}]},{"inputs":[{"internalType":"string","name":"linkPath","type":"string"}],"stateMutability":"view","type":"function","name":"readLink","outputs":[{"internalType":"string","name":"targetPath","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"record"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"recordLogs"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rememberKey","outputs":[{"internalType":"address","name":"keyAddr","type":"address"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bool","name":"recursive","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"removeDir"},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"removeFile"},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"}],"stateMutability":"pure","type":"function","name":"replace","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"resumeGasMetering"},{"inputs":[{"internalType":"string","name":"method","type":"string"},{"internalType":"string","name":"params","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"rpc","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"rpcAlias","type":"string"}],"stateMutability":"view","type":"function","name":"rpcUrl","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rpcUrlStructs","outputs":[{"internalType":"struct VmSafe.Rpc[]","name":"urls","type":"tuple[]","components":[{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"url","type":"string"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rpcUrls","outputs":[{"internalType":"string[2][]","name":"urls","type":"string[2][]"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"address[]","name":"values","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeAddress","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"address","name":"value","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"serializeAddress","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bool[]","name":"values","type":"bool[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBool","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"serializeBool","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes[]","name":"values","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes32[]","name":"values","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes32","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes32","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"int256","name":"value","type":"int256"}],"stateMutability":"nonpayable","type":"function","name":"serializeInt","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"int256[]","name":"values","type":"int256[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeInt","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"serializeJson","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string[]","name":"values","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeString","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"serializeString","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"serializeUint","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeUint","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"serializeUintToHex","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"setEnv"},{"inputs":[{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signP256","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"duration","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"sleep"},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"delimiter","type":"string"}],"stateMutability":"pure","type":"function","name":"split","outputs":[{"internalType":"string[]","name":"outputs","type":"string[]"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startMappingRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startStateDiffRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopAndReturnStateDiff","outputs":[{"internalType":"struct VmSafe.AccountAccess[]","name":"accountAccesses","type":"tuple[]","components":[{"internalType":"struct VmSafe.ChainInfo","name":"chainInfo","type":"tuple","components":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"uint256","name":"chainId","type":"uint256"}]},{"internalType":"enum VmSafe.AccountAccessKind","name":"kind","type":"uint8"},{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"accessor","type":"address"},{"internalType":"bool","name":"initialized","type":"bool"},{"internalType":"uint256","name":"oldBalance","type":"uint256"},{"internalType":"uint256","name":"newBalance","type":"uint256"},{"internalType":"bytes","name":"deployedCode","type":"bytes"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bool","name":"reverted","type":"bool"},{"internalType":"struct VmSafe.StorageAccess[]","name":"storageAccesses","type":"tuple[]","components":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"},{"internalType":"bool","name":"isWrite","type":"bool"},{"internalType":"bytes32","name":"previousValue","type":"bytes32"},{"internalType":"bytes32","name":"newValue","type":"bytes32"},{"internalType":"bool","name":"reverted","type":"bool"}]},{"internalType":"uint64","name":"depth","type":"uint64"}]}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopBroadcast"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopMappingRecording"},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"stateMutability":"pure","type":"function","name":"toBase64","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toBase64","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"stateMutability":"pure","type":"function","name":"toBase64URL","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toBase64URL","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"toLowercase","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"address","name":"value","type":"address"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"toUppercase","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"trim","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"string[]","name":"commandInput","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"tryFfi","outputs":[{"internalType":"struct VmSafe.FfiResult","name":"result","type":"tuple","components":[{"internalType":"int32","name":"exitCode","type":"int32"},{"internalType":"bytes","name":"stdout","type":"bytes"},{"internalType":"bytes","name":"stderr","type":"bytes"}]}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"unixTime","outputs":[{"internalType":"uint256","name":"milliseconds","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeFile"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"writeFileBinary"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"valueKey","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeJson"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeJson"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeLine"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"valueKey","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeToml"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeToml"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{"accesses(address)":{"notice":"Gets all accessed reads and write slot from a `vm.record` session, for a given address."},"addr(uint256)":{"notice":"Gets the address for a given private key."},"assertApproxEqAbs(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`."},"assertApproxEqAbs(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure."},"assertApproxEqAbs(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`."},"assertApproxEqAbs(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure."},"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message."},"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message."},"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqRel(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"assertApproxEqRel(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure."},"assertApproxEqRel(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"assertApproxEqRel(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure."},"assertApproxEqRelDecimal(int256,int256,uint256,uint256)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message."},"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message."},"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertEq(address,address)":{"notice":"Asserts that two `address` values are equal."},"assertEq(address,address,string)":{"notice":"Asserts that two `address` values are equal and includes error message into revert string on failure."},"assertEq(address[],address[])":{"notice":"Asserts that two arrays of `address` values are equal."},"assertEq(address[],address[],string)":{"notice":"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure."},"assertEq(bool,bool)":{"notice":"Asserts that two `bool` values are equal."},"assertEq(bool,bool,string)":{"notice":"Asserts that two `bool` values are equal and includes error message into revert string on failure."},"assertEq(bool[],bool[])":{"notice":"Asserts that two arrays of `bool` values are equal."},"assertEq(bool[],bool[],string)":{"notice":"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure."},"assertEq(bytes,bytes)":{"notice":"Asserts that two `bytes` values are equal."},"assertEq(bytes,bytes,string)":{"notice":"Asserts that two `bytes` values are equal and includes error message into revert string on failure."},"assertEq(bytes32,bytes32)":{"notice":"Asserts that two `bytes32` values are equal."},"assertEq(bytes32,bytes32,string)":{"notice":"Asserts that two `bytes32` values are equal and includes error message into revert string on failure."},"assertEq(bytes32[],bytes32[])":{"notice":"Asserts that two arrays of `bytes32` values are equal."},"assertEq(bytes32[],bytes32[],string)":{"notice":"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure."},"assertEq(bytes[],bytes[])":{"notice":"Asserts that two arrays of `bytes` values are equal."},"assertEq(bytes[],bytes[],string)":{"notice":"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure."},"assertEq(int256,int256)":{"notice":"Asserts that two `int256` values are equal."},"assertEq(int256,int256,string)":{"notice":"Asserts that two `int256` values are equal and includes error message into revert string on failure."},"assertEq(int256[],int256[])":{"notice":"Asserts that two arrays of `int256` values are equal."},"assertEq(int256[],int256[],string)":{"notice":"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure."},"assertEq(string,string)":{"notice":"Asserts that two `string` values are equal."},"assertEq(string,string,string)":{"notice":"Asserts that two `string` values are equal and includes error message into revert string on failure."},"assertEq(string[],string[])":{"notice":"Asserts that two arrays of `string` values are equal."},"assertEq(string[],string[],string)":{"notice":"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure."},"assertEq(uint256,uint256)":{"notice":"Asserts that two `uint256` values are equal."},"assertEq(uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are equal and includes error message into revert string on failure."},"assertEq(uint256[],uint256[])":{"notice":"Asserts that two arrays of `uint256 values are equal."},"assertEq(uint256[],uint256[],string)":{"notice":"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure."},"assertEqDecimal(int256,int256,uint256)":{"notice":"Asserts that two `int256` values are equal, formatting them with decimals in failure message."},"assertEqDecimal(int256,int256,uint256,string)":{"notice":"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertEqDecimal(uint256,uint256,uint256)":{"notice":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message."},"assertEqDecimal(uint256,uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertFalse(bool)":{"notice":"Asserts that the given condition is false."},"assertFalse(bool,string)":{"notice":"Asserts that the given condition is false and includes error message into revert string on failure."},"assertGe(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second."},"assertGe(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure."},"assertGe(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second."},"assertGe(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure."},"assertGeDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message."},"assertGeDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGeDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message."},"assertGeDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGt(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be greater than second."},"assertGt(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure."},"assertGt(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second."},"assertGt(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure."},"assertGtDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message."},"assertGtDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGtDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message."},"assertGtDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLe(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second."},"assertLe(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure."},"assertLe(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second."},"assertLe(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure."},"assertLeDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message."},"assertLeDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLeDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message."},"assertLeDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLt(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be less than second."},"assertLt(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure."},"assertLt(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than second."},"assertLt(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure."},"assertLtDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message."},"assertLtDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLtDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message."},"assertLtDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertNotEq(address,address)":{"notice":"Asserts that two `address` values are not equal."},"assertNotEq(address,address,string)":{"notice":"Asserts that two `address` values are not equal and includes error message into revert string on failure."},"assertNotEq(address[],address[])":{"notice":"Asserts that two arrays of `address` values are not equal."},"assertNotEq(address[],address[],string)":{"notice":"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure."},"assertNotEq(bool,bool)":{"notice":"Asserts that two `bool` values are not equal."},"assertNotEq(bool,bool,string)":{"notice":"Asserts that two `bool` values are not equal and includes error message into revert string on failure."},"assertNotEq(bool[],bool[])":{"notice":"Asserts that two arrays of `bool` values are not equal."},"assertNotEq(bool[],bool[],string)":{"notice":"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes,bytes)":{"notice":"Asserts that two `bytes` values are not equal."},"assertNotEq(bytes,bytes,string)":{"notice":"Asserts that two `bytes` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes32,bytes32)":{"notice":"Asserts that two `bytes32` values are not equal."},"assertNotEq(bytes32,bytes32,string)":{"notice":"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes32[],bytes32[])":{"notice":"Asserts that two arrays of `bytes32` values are not equal."},"assertNotEq(bytes32[],bytes32[],string)":{"notice":"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes[],bytes[])":{"notice":"Asserts that two arrays of `bytes` values are not equal."},"assertNotEq(bytes[],bytes[],string)":{"notice":"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure."},"assertNotEq(int256,int256)":{"notice":"Asserts that two `int256` values are not equal."},"assertNotEq(int256,int256,string)":{"notice":"Asserts that two `int256` values are not equal and includes error message into revert string on failure."},"assertNotEq(int256[],int256[])":{"notice":"Asserts that two arrays of `int256` values are not equal."},"assertNotEq(int256[],int256[],string)":{"notice":"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure."},"assertNotEq(string,string)":{"notice":"Asserts that two `string` values are not equal."},"assertNotEq(string,string,string)":{"notice":"Asserts that two `string` values are not equal and includes error message into revert string on failure."},"assertNotEq(string[],string[])":{"notice":"Asserts that two arrays of `string` values are not equal."},"assertNotEq(string[],string[],string)":{"notice":"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure."},"assertNotEq(uint256,uint256)":{"notice":"Asserts that two `uint256` values are not equal."},"assertNotEq(uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are not equal and includes error message into revert string on failure."},"assertNotEq(uint256[],uint256[])":{"notice":"Asserts that two arrays of `uint256` values are not equal."},"assertNotEq(uint256[],uint256[],string)":{"notice":"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure."},"assertNotEqDecimal(int256,int256,uint256)":{"notice":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message."},"assertNotEqDecimal(int256,int256,uint256,string)":{"notice":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertNotEqDecimal(uint256,uint256,uint256)":{"notice":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message."},"assertNotEqDecimal(uint256,uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertTrue(bool)":{"notice":"Asserts that the given condition is true."},"assertTrue(bool,string)":{"notice":"Asserts that the given condition is true and includes error message into revert string on failure."},"assume(bool)":{"notice":"If the condition is false, discard this run's fuzz inputs and generate new ones."},"breakpoint(string)":{"notice":"Writes a breakpoint to jump to in the debugger."},"breakpoint(string,bool)":{"notice":"Writes a conditional breakpoint to jump to in the debugger."},"broadcast()":{"notice":"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"broadcast(address)":{"notice":"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain."},"broadcast(uint256)":{"notice":"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain."},"closeFile(string)":{"notice":"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root."},"computeCreate2Address(bytes32,bytes32)":{"notice":"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer."},"computeCreate2Address(bytes32,bytes32,address)":{"notice":"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer."},"computeCreateAddress(address,uint256)":{"notice":"Compute the address a contract will be deployed at for a given deployer address and nonce."},"copyFile(string,string)":{"notice":"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root."},"createDir(string,bool)":{"notice":"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root."},"createWallet(string)":{"notice":"Derives a private key from the name, labels the account with that name, and returns the wallet."},"createWallet(uint256)":{"notice":"Generates a wallet from the private key and returns the wallet."},"createWallet(uint256,string)":{"notice":"Generates a wallet from the private key, labels the account with that name, and returns the wallet."},"deriveKey(string,string,uint32)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) at `{derivationPath}{index}`."},"deriveKey(string,string,uint32,string)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at `{derivationPath}{index}`."},"deriveKey(string,uint32)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) at the derivation path `m/44'/60'/0'/0/{index}`."},"deriveKey(string,uint32,string)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`."},"ensNamehash(string)":{"notice":"Returns ENS namehash for provided string."},"envAddress(string)":{"notice":"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed."},"envAddress(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBool(string)":{"notice":"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed."},"envBool(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBytes(string)":{"notice":"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed."},"envBytes(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBytes32(string)":{"notice":"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed."},"envBytes32(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envExists(string)":{"notice":"Gets the environment variable `name` and returns true if it exists, else returns false."},"envInt(string)":{"notice":"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed."},"envInt(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envOr(string,address)":{"notice":"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bool)":{"notice":"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bytes)":{"notice":"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bytes32)":{"notice":"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,int256)":{"notice":"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string)":{"notice":"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,address[])":{"notice":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bool[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bytes32[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bytes[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,int256[])":{"notice":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,string[])":{"notice":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,uint256[])":{"notice":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,uint256)":{"notice":"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envString(string)":{"notice":"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed."},"envString(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envUint(string)":{"notice":"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed."},"envUint(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"eth_getLogs(uint256,uint256,address,bytes32[])":{"notice":"Gets all the logs according to specified filter."},"exists(string)":{"notice":"Returns true if the given path points to an existing entity, else returns false."},"ffi(string[])":{"notice":"Performs a foreign function call via the terminal."},"fsMetadata(string)":{"notice":"Given a path, query the file system to get information about a file, directory, etc."},"getBlobBaseFee()":{"notice":"Gets the current `block.blobbasefee`. You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBlockNumber()":{"notice":"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBlockTimestamp()":{"notice":"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getCode(string)":{"notice":"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"getDeployedCode(string)":{"notice":"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"getLabel(address)":{"notice":"Gets the label for the specified address."},"getMappingKeyAndParentOf(address,bytes32)":{"notice":"Gets the map key and parent of a mapping at a given slot, for a given address."},"getMappingLength(address,bytes32)":{"notice":"Gets the number of elements in the mapping at the given slot, for a given address."},"getMappingSlotAt(address,bytes32,uint256)":{"notice":"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping)."},"getNonce((address,uint256,uint256,uint256))":{"notice":"Get a `Wallet`'s nonce."},"getNonce(address)":{"notice":"Gets the nonce of an account."},"getRecordedLogs()":{"notice":"Gets all the recorded logs."},"indexOf(string,string)":{"notice":"Returns the index of the first occurrence of a `key` in an `input` string. Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found. Returns 0 in case of an empty `key`."},"isContext(uint8)":{"notice":"Returns true if `forge` command was executed in given context."},"isDir(string)":{"notice":"Returns true if the path exists on disk and is pointing at a directory, else returns false."},"isFile(string)":{"notice":"Returns true if the path exists on disk and is pointing at a regular file, else returns false."},"keyExists(string,string)":{"notice":"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions."},"keyExistsJson(string,string)":{"notice":"Checks if `key` exists in a JSON object."},"keyExistsToml(string,string)":{"notice":"Checks if `key` exists in a TOML table."},"label(address,string)":{"notice":"Labels an address in call traces."},"lastCallGas()":{"notice":"Gets the gas used in the last call."},"load(address,bytes32)":{"notice":"Loads a storage slot from an address."},"parseAddress(string)":{"notice":"Parses the given `string` into an `address`."},"parseBool(string)":{"notice":"Parses the given `string` into a `bool`."},"parseBytes(string)":{"notice":"Parses the given `string` into `bytes`."},"parseBytes32(string)":{"notice":"Parses the given `string` into a `bytes32`."},"parseInt(string)":{"notice":"Parses the given `string` into a `int256`."},"parseJson(string)":{"notice":"ABI-encodes a JSON object."},"parseJson(string,string)":{"notice":"ABI-encodes a JSON object at `key`."},"parseJsonAddress(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `address`."},"parseJsonAddressArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `address[]`."},"parseJsonBool(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bool`."},"parseJsonBoolArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bool[]`."},"parseJsonBytes(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes`."},"parseJsonBytes32(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes32`."},"parseJsonBytes32Array(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes32[]`."},"parseJsonBytesArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes[]`."},"parseJsonInt(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `int256`."},"parseJsonIntArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `int256[]`."},"parseJsonKeys(string,string)":{"notice":"Returns an array of all the keys in a JSON object."},"parseJsonString(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `string`."},"parseJsonStringArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `string[]`."},"parseJsonUint(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `uint256`."},"parseJsonUintArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `uint256[]`."},"parseToml(string)":{"notice":"ABI-encodes a TOML table."},"parseToml(string,string)":{"notice":"ABI-encodes a TOML table at `key`."},"parseTomlAddress(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `address`."},"parseTomlAddressArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `address[]`."},"parseTomlBool(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bool`."},"parseTomlBoolArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bool[]`."},"parseTomlBytes(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes`."},"parseTomlBytes32(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes32`."},"parseTomlBytes32Array(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes32[]`."},"parseTomlBytesArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes[]`."},"parseTomlInt(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `int256`."},"parseTomlIntArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `int256[]`."},"parseTomlKeys(string,string)":{"notice":"Returns an array of all the keys in a TOML table."},"parseTomlString(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `string`."},"parseTomlStringArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `string[]`."},"parseTomlUint(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `uint256`."},"parseTomlUintArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `uint256[]`."},"parseUint(string)":{"notice":"Parses the given `string` into a `uint256`."},"pauseGasMetering()":{"notice":"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused."},"projectRoot()":{"notice":"Get the path of the current project root."},"prompt(string)":{"notice":"Prompts the user for a string value in the terminal."},"promptAddress(string)":{"notice":"Prompts the user for an address in the terminal."},"promptSecret(string)":{"notice":"Prompts the user for a hidden string value in the terminal."},"promptUint(string)":{"notice":"Prompts the user for uint256 in the terminal."},"readDir(string)":{"notice":"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true."},"readDir(string,uint64)":{"notice":"See `readDir(string)`."},"readDir(string,uint64,bool)":{"notice":"See `readDir(string)`."},"readFile(string)":{"notice":"Reads the entire content of file to string. `path` is relative to the project root."},"readFileBinary(string)":{"notice":"Reads the entire content of file as binary. `path` is relative to the project root."},"readLine(string)":{"notice":"Reads next line of file to string."},"readLink(string)":{"notice":"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist."},"record()":{"notice":"Records all storage reads and writes."},"recordLogs()":{"notice":"Record all the transaction logs."},"rememberKey(uint256)":{"notice":"Adds a private key to the local forge wallet and returns the address."},"removeDir(string,bool)":{"notice":"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root."},"removeFile(string)":{"notice":"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root."},"replace(string,string,string)":{"notice":"Replaces occurrences of `from` in the given `string` with `to`."},"resumeGasMetering()":{"notice":"Resumes gas metering (i.e. gas usage is counted again). Noop if already on."},"rpc(string,string)":{"notice":"Performs an Ethereum JSON-RPC request to the current fork URL."},"rpcUrl(string)":{"notice":"Returns the RPC url for the given alias."},"rpcUrlStructs()":{"notice":"Returns all rpc urls and their aliases as structs."},"rpcUrls()":{"notice":"Returns all rpc urls and their aliases `[alias, url][]`."},"serializeAddress(string,string,address)":{"notice":"See `serializeJson`."},"serializeAddress(string,string,address[])":{"notice":"See `serializeJson`."},"serializeBool(string,string,bool)":{"notice":"See `serializeJson`."},"serializeBool(string,string,bool[])":{"notice":"See `serializeJson`."},"serializeBytes(string,string,bytes)":{"notice":"See `serializeJson`."},"serializeBytes(string,string,bytes[])":{"notice":"See `serializeJson`."},"serializeBytes32(string,string,bytes32)":{"notice":"See `serializeJson`."},"serializeBytes32(string,string,bytes32[])":{"notice":"See `serializeJson`."},"serializeInt(string,string,int256)":{"notice":"See `serializeJson`."},"serializeInt(string,string,int256[])":{"notice":"See `serializeJson`."},"serializeJson(string,string)":{"notice":"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment."},"serializeString(string,string,string)":{"notice":"See `serializeJson`."},"serializeString(string,string,string[])":{"notice":"See `serializeJson`."},"serializeUint(string,string,uint256)":{"notice":"See `serializeJson`."},"serializeUint(string,string,uint256[])":{"notice":"See `serializeJson`."},"serializeUintToHex(string,string,uint256)":{"notice":"See `serializeJson`."},"setEnv(string,string)":{"notice":"Sets environment variables."},"sign((address,uint256,uint256,uint256),bytes32)":{"notice":"Signs data with a `Wallet`."},"sign(address,bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. Raises error if none of the signers passed into the script have provided address."},"sign(bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script."},"sign(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256k1 curve."},"signP256(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256r1 curve."},"sleep(uint256)":{"notice":"Suspends execution of the main thread for `duration` milliseconds."},"split(string,string)":{"notice":"Splits the given `string` into an array of strings divided by the `delimiter`."},"startBroadcast()":{"notice":"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"startBroadcast(address)":{"notice":"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain."},"startBroadcast(uint256)":{"notice":"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain."},"startMappingRecording()":{"notice":"Starts recording all map SSTOREs for later retrieval."},"startStateDiffRecording()":{"notice":"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls"},"stopAndReturnStateDiff()":{"notice":"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session."},"stopBroadcast()":{"notice":"Stops collecting onchain transactions."},"stopMappingRecording()":{"notice":"Stops recording all map SSTOREs for later retrieval and clears the recorded data."},"toBase64(bytes)":{"notice":"Encodes a `bytes` value to a base64 string."},"toBase64(string)":{"notice":"Encodes a `string` value to a base64 string."},"toBase64URL(bytes)":{"notice":"Encodes a `bytes` value to a base64url string."},"toBase64URL(string)":{"notice":"Encodes a `string` value to a base64url string."},"toLowercase(string)":{"notice":"Converts the given `string` value to Lowercase."},"toString(address)":{"notice":"Converts the given value to a `string`."},"toString(bool)":{"notice":"Converts the given value to a `string`."},"toString(bytes)":{"notice":"Converts the given value to a `string`."},"toString(bytes32)":{"notice":"Converts the given value to a `string`."},"toString(int256)":{"notice":"Converts the given value to a `string`."},"toString(uint256)":{"notice":"Converts the given value to a `string`."},"toUppercase(string)":{"notice":"Converts the given `string` value to Uppercase."},"trim(string)":{"notice":"Trims leading and trailing whitespace from the given `string` value."},"tryFfi(string[])":{"notice":"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr."},"unixTime()":{"notice":"Returns the time since unix epoch in milliseconds."},"writeFile(string,string)":{"notice":"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root."},"writeFileBinary(string,bytes)":{"notice":"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root."},"writeJson(string,string)":{"notice":"Write a serialized JSON object to a file. If the file exists, it will be overwritten."},"writeJson(string,string,string)":{"notice":"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing."},"writeLine(string,string)":{"notice":"Writes line to file, creating a file if it does not exist. `path` is relative to the project root."},"writeToml(string,string)":{"notice":"Takes serialized JSON, converts to TOML and write a serialized TOML to a file."},"writeToml(string,string,string)":{"notice":"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing."}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","base64/=lib/base64/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/forge-std/src/Vm.sol":"VmSafe"},"evmVersion":"istanbul","libraries":{}},"sources":{"lib/forge-std/src/Vm.sol":{"keccak256":"0xf92ea94fe38f8370a8dc5f591ebfb4958869e18d877469ce422162cc88c8b063","urls":["bzz-raw://620b5d4b2ff24d66120ce9dbb72fbde7276f2e8b3bb93f626874183aee01e307","dweb:/ipfs/Qmcyc8co7vCiJ7gUd3jj5Hc1rRPihjt3WSKs5ut6eiU1Ze"],"license":"MIT OR Apache-2.0"}},"version":1},"ast":{"absolutePath":"lib/forge-std/src/Vm.sol","id":15799,"exportedSymbols":{"Vm":[15798],"VmSafe":[15198]},"nodeType":"SourceUnit","src":"117:90686:15","nodes":[{"id":12021,"nodeType":"PragmaDirective","src":"117:31:15","nodes":[],"literals":["solidity",">=","0.6",".2","<","0.9",".0"]},{"id":12022,"nodeType":"PragmaDirective","src":"149:33:15","nodes":[],"literals":["experimental","ABIEncoderV2"]},{"id":15198,"nodeType":"ContractDefinition","src":"409:75834:15","nodes":[{"id":12029,"nodeType":"EnumDefinition","src":"529:533:15","nodes":[],"canonicalName":"VmSafe.CallerMode","members":[{"id":12024,"name":"None","nodeType":"EnumValue","src":"610:4:15"},{"id":12025,"name":"Broadcast","nodeType":"EnumValue","src":"714:9:15"},{"id":12026,"name":"RecurrentBroadcast","nodeType":"EnumValue","src":"829:18:15"},{"id":12027,"name":"Prank","nodeType":"EnumValue","src":"939:5:15"},{"id":12028,"name":"RecurrentPrank","nodeType":"EnumValue","src":"1042:14:15"}],"name":"CallerMode"},{"id":12041,"nodeType":"EnumDefinition","src":"1118:791:15","nodes":[],"canonicalName":"VmSafe.AccountAccessKind","members":[{"id":12030,"name":"Call","nodeType":"EnumValue","src":"1186:4:15"},{"id":12031,"name":"DelegateCall","nodeType":"EnumValue","src":"1252:12:15"},{"id":12032,"name":"CallCode","nodeType":"EnumValue","src":"1322:8:15"},{"id":12033,"name":"StaticCall","nodeType":"EnumValue","src":"1390:10:15"},{"id":12034,"name":"Create","nodeType":"EnumValue","src":"1446:6:15"},{"id":12035,"name":"SelfDestruct","nodeType":"EnumValue","src":"1505:12:15"},{"id":12036,"name":"Resume","nodeType":"EnumValue","src":"1644:6:15"},{"id":12037,"name":"Balance","nodeType":"EnumValue","src":"1703:7:15"},{"id":12038,"name":"Extcodesize","nodeType":"EnumValue","src":"1764:11:15"},{"id":12039,"name":"Extcodehash","nodeType":"EnumValue","src":"1829:11:15"},{"id":12040,"name":"Extcodecopy","nodeType":"EnumValue","src":"1892:11:15"}],"name":"AccountAccessKind"},{"id":12051,"nodeType":"EnumDefinition","src":"1949:683:15","nodes":[],"canonicalName":"VmSafe.ForgeContext","members":[{"id":12042,"name":"TestGroup","nodeType":"EnumValue","src":"2047:9:15"},{"id":12043,"name":"Test","nodeType":"EnumValue","src":"2109:4:15"},{"id":12044,"name":"Coverage","nodeType":"EnumValue","src":"2170:8:15"},{"id":12045,"name":"Snapshot","nodeType":"EnumValue","src":"2235:8:15"},{"id":12046,"name":"ScriptGroup","nodeType":"EnumValue","src":"2327:11:15"},{"id":12047,"name":"ScriptDryRun","nodeType":"EnumValue","src":"2393:12:15"},{"id":12048,"name":"ScriptBroadcast","nodeType":"EnumValue","src":"2472:15:15"},{"id":12049,"name":"ScriptResume","nodeType":"EnumValue","src":"2551:12:15"},{"id":12050,"name":"Unknown","nodeType":"EnumValue","src":"2619:7:15"}],"name":"ForgeContext"},{"id":12059,"nodeType":"StructDefinition","src":"2694:237:15","nodes":[],"canonicalName":"VmSafe.Log","members":[{"constant":false,"id":12054,"mutability":"mutable","name":"topics","nodeType":"VariableDeclaration","scope":12059,"src":"2782:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12052,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2782:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12053,"nodeType":"ArrayTypeName","src":"2782:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":12056,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":12059,"src":"2844:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":12055,"name":"bytes","nodeType":"ElementaryTypeName","src":"2844:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":12058,"mutability":"mutable","name":"emitter","nodeType":"VariableDeclaration","scope":12059,"src":"2909:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12057,"name":"address","nodeType":"ElementaryTypeName","src":"2909:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Log","scope":15198,"visibility":"public"},{"id":12064,"nodeType":"StructDefinition","src":"3000:119:15","nodes":[],"canonicalName":"VmSafe.Rpc","members":[{"constant":false,"id":12061,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":12064,"src":"3058:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":12060,"name":"string","nodeType":"ElementaryTypeName","src":"3058:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12063,"mutability":"mutable","name":"url","nodeType":"VariableDeclaration","scope":12064,"src":"3102:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":12062,"name":"string","nodeType":"ElementaryTypeName","src":"3102:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"Rpc","scope":15198,"visibility":"public"},{"id":12084,"nodeType":"StructDefinition","src":"3179:615:15","nodes":[],"canonicalName":"VmSafe.EthGetLogs","members":[{"constant":false,"id":12066,"mutability":"mutable","name":"emitter","nodeType":"VariableDeclaration","scope":12084,"src":"3252:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12065,"name":"address","nodeType":"ElementaryTypeName","src":"3252:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12069,"mutability":"mutable","name":"topics","nodeType":"VariableDeclaration","scope":12084,"src":"3344:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12067,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3344:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12068,"nodeType":"ArrayTypeName","src":"3344:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":12071,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":12084,"src":"3406:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":12070,"name":"bytes","nodeType":"ElementaryTypeName","src":"3406:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":12073,"mutability":"mutable","name":"blockHash","nodeType":"VariableDeclaration","scope":12084,"src":"3453:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12072,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3453:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12075,"mutability":"mutable","name":"blockNumber","nodeType":"VariableDeclaration","scope":12084,"src":"3509:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12074,"name":"uint64","nodeType":"ElementaryTypeName","src":"3509:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":12077,"mutability":"mutable","name":"transactionHash","nodeType":"VariableDeclaration","scope":12084,"src":"3570:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12076,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3570:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12079,"mutability":"mutable","name":"transactionIndex","nodeType":"VariableDeclaration","scope":12084,"src":"3650:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12078,"name":"uint64","nodeType":"ElementaryTypeName","src":"3650:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":12081,"mutability":"mutable","name":"logIndex","nodeType":"VariableDeclaration","scope":12084,"src":"3709:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12080,"name":"uint256","nodeType":"ElementaryTypeName","src":"3709:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12083,"mutability":"mutable","name":"removed","nodeType":"VariableDeclaration","scope":12084,"src":"3775:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12082,"name":"bool","nodeType":"ElementaryTypeName","src":"3775:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"EthGetLogs","scope":15198,"visibility":"public"},{"id":12095,"nodeType":"StructDefinition","src":"3870:334:15","nodes":[],"canonicalName":"VmSafe.DirEntry","members":[{"constant":false,"id":12086,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":12095,"src":"3934:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":12085,"name":"string","nodeType":"ElementaryTypeName","src":"3934:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12088,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","scope":12095,"src":"3997:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":12087,"name":"string","nodeType":"ElementaryTypeName","src":"3997:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12090,"mutability":"mutable","name":"depth","nodeType":"VariableDeclaration","scope":12095,"src":"4053:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12089,"name":"uint64","nodeType":"ElementaryTypeName","src":"4053:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":12092,"mutability":"mutable","name":"isDir","nodeType":"VariableDeclaration","scope":12095,"src":"4120:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12091,"name":"bool","nodeType":"ElementaryTypeName","src":"4120:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12094,"mutability":"mutable","name":"isSymlink","nodeType":"VariableDeclaration","scope":12095,"src":"4183:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12093,"name":"bool","nodeType":"ElementaryTypeName","src":"4183:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"DirEntry","scope":15198,"visibility":"public"},{"id":12110,"nodeType":"StructDefinition","src":"4434:599:15","nodes":[],"canonicalName":"VmSafe.FsMetadata","members":[{"constant":false,"id":12097,"mutability":"mutable","name":"isDir","nodeType":"VariableDeclaration","scope":12110,"src":"4515:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12096,"name":"bool","nodeType":"ElementaryTypeName","src":"4515:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12099,"mutability":"mutable","name":"isSymlink","nodeType":"VariableDeclaration","scope":12110,"src":"4586:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12098,"name":"bool","nodeType":"ElementaryTypeName","src":"4586:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12101,"mutability":"mutable","name":"length","nodeType":"VariableDeclaration","scope":12110,"src":"4675:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12100,"name":"uint256","nodeType":"ElementaryTypeName","src":"4675:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12103,"mutability":"mutable","name":"readOnly","nodeType":"VariableDeclaration","scope":12110,"src":"4769:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12102,"name":"bool","nodeType":"ElementaryTypeName","src":"4769:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12105,"mutability":"mutable","name":"modified","nodeType":"VariableDeclaration","scope":12110,"src":"4855:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12104,"name":"uint256","nodeType":"ElementaryTypeName","src":"4855:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12107,"mutability":"mutable","name":"accessed","nodeType":"VariableDeclaration","scope":12110,"src":"4931:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12106,"name":"uint256","nodeType":"ElementaryTypeName","src":"4931:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12109,"mutability":"mutable","name":"created","nodeType":"VariableDeclaration","scope":12110,"src":"5011:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12108,"name":"uint256","nodeType":"ElementaryTypeName","src":"5011:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"FsMetadata","scope":15198,"visibility":"public"},{"id":12119,"nodeType":"StructDefinition","src":"5087:277:15","nodes":[],"canonicalName":"VmSafe.Wallet","members":[{"constant":false,"id":12112,"mutability":"mutable","name":"addr","nodeType":"VariableDeclaration","scope":12119,"src":"5144:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12111,"name":"address","nodeType":"ElementaryTypeName","src":"5144:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12114,"mutability":"mutable","name":"publicKeyX","nodeType":"VariableDeclaration","scope":12119,"src":"5206:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12113,"name":"uint256","nodeType":"ElementaryTypeName","src":"5206:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12116,"mutability":"mutable","name":"publicKeyY","nodeType":"VariableDeclaration","scope":12119,"src":"5274:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12115,"name":"uint256","nodeType":"ElementaryTypeName","src":"5274:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12118,"mutability":"mutable","name":"privateKey","nodeType":"VariableDeclaration","scope":12119,"src":"5339:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12117,"name":"uint256","nodeType":"ElementaryTypeName","src":"5339:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Wallet","scope":15198,"visibility":"public"},{"id":12126,"nodeType":"StructDefinition","src":"5409:213:15","nodes":[],"canonicalName":"VmSafe.FfiResult","members":[{"constant":false,"id":12121,"mutability":"mutable","name":"exitCode","nodeType":"VariableDeclaration","scope":12126,"src":"5474:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":12120,"name":"int32","nodeType":"ElementaryTypeName","src":"5474:5:15","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"},{"constant":false,"id":12123,"mutability":"mutable","name":"stdout","nodeType":"VariableDeclaration","scope":12126,"src":"5551:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":12122,"name":"bytes","nodeType":"ElementaryTypeName","src":"5551:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":12125,"mutability":"mutable","name":"stderr","nodeType":"VariableDeclaration","scope":12126,"src":"5603:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":12124,"name":"bytes","nodeType":"ElementaryTypeName","src":"5603:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"FfiResult","scope":15198,"visibility":"public"},{"id":12131,"nodeType":"StructDefinition","src":"5671:184:15","nodes":[],"canonicalName":"VmSafe.ChainInfo","members":[{"constant":false,"id":12128,"mutability":"mutable","name":"forkId","nodeType":"VariableDeclaration","scope":12131,"src":"5764:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12127,"name":"uint256","nodeType":"ElementaryTypeName","src":"5764:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12130,"mutability":"mutable","name":"chainId","nodeType":"VariableDeclaration","scope":12131,"src":"5833:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12129,"name":"uint256","nodeType":"ElementaryTypeName","src":"5833:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ChainInfo","scope":15198,"visibility":"public"},{"id":12159,"nodeType":"StructDefinition","src":"5916:1837:15","nodes":[],"canonicalName":"VmSafe.AccountAccess","members":[{"constant":false,"id":12133,"mutability":"mutable","name":"chainInfo","nodeType":"VariableDeclaration","scope":12159,"src":"5998:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInfo_$12131_storage_ptr","typeString":"struct VmSafe.ChainInfo"},"typeName":{"id":12132,"name":"ChainInfo","nodeType":"UserDefinedTypeName","referencedDeclaration":12131,"src":"5998:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInfo_$12131_storage_ptr","typeString":"struct VmSafe.ChainInfo"}},"visibility":"internal"},{"constant":false,"id":12135,"mutability":"mutable","name":"kind","nodeType":"VariableDeclaration","scope":12159,"src":"6453:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AccountAccessKind_$12041","typeString":"enum VmSafe.AccountAccessKind"},"typeName":{"id":12134,"name":"AccountAccessKind","nodeType":"UserDefinedTypeName","referencedDeclaration":12041,"src":"6453:17:15","typeDescriptions":{"typeIdentifier":"t_enum$_AccountAccessKind_$12041","typeString":"enum VmSafe.AccountAccessKind"}},"visibility":"internal"},{"constant":false,"id":12137,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":12159,"src":"6640:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12136,"name":"address","nodeType":"ElementaryTypeName","src":"6640:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12139,"mutability":"mutable","name":"accessor","nodeType":"VariableDeclaration","scope":12159,"src":"6703:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12138,"name":"address","nodeType":"ElementaryTypeName","src":"6703:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12141,"mutability":"mutable","name":"initialized","nodeType":"VariableDeclaration","scope":12159,"src":"6917:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12140,"name":"bool","nodeType":"ElementaryTypeName","src":"6917:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12143,"mutability":"mutable","name":"oldBalance","nodeType":"VariableDeclaration","scope":12159,"src":"7000:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12142,"name":"uint256","nodeType":"ElementaryTypeName","src":"7000:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12145,"mutability":"mutable","name":"newBalance","nodeType":"VariableDeclaration","scope":12159,"src":"7175:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12144,"name":"uint256","nodeType":"ElementaryTypeName","src":"7175:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12147,"mutability":"mutable","name":"deployedCode","nodeType":"VariableDeclaration","scope":12159,"src":"7254:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":12146,"name":"bytes","nodeType":"ElementaryTypeName","src":"7254:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":12149,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":12159,"src":"7336:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12148,"name":"uint256","nodeType":"ElementaryTypeName","src":"7336:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12151,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":12159,"src":"7412:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":12150,"name":"bytes","nodeType":"ElementaryTypeName","src":"7412:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":12153,"mutability":"mutable","name":"reverted","nodeType":"VariableDeclaration","scope":12159,"src":"7508:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12152,"name":"bool","nodeType":"ElementaryTypeName","src":"7508:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12156,"mutability":"mutable","name":"storageAccesses","nodeType":"VariableDeclaration","scope":12159,"src":"7619:31:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$12172_storage_$dyn_storage_ptr","typeString":"struct VmSafe.StorageAccess[]"},"typeName":{"baseType":{"id":12154,"name":"StorageAccess","nodeType":"UserDefinedTypeName","referencedDeclaration":12172,"src":"7619:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_StorageAccess_$12172_storage_ptr","typeString":"struct VmSafe.StorageAccess"}},"id":12155,"nodeType":"ArrayTypeName","src":"7619:15:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$12172_storage_$dyn_storage_ptr","typeString":"struct VmSafe.StorageAccess[]"}},"visibility":"internal"},{"constant":false,"id":12158,"mutability":"mutable","name":"depth","nodeType":"VariableDeclaration","scope":12159,"src":"7734:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12157,"name":"uint64","nodeType":"ElementaryTypeName","src":"7734:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"AccountAccess","scope":15198,"visibility":"public"},{"id":12172,"nodeType":"StructDefinition","src":"7815:425:15","nodes":[],"canonicalName":"VmSafe.StorageAccess","members":[{"constant":false,"id":12161,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":12172,"src":"7897:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12160,"name":"address","nodeType":"ElementaryTypeName","src":"7897:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12163,"mutability":"mutable","name":"slot","nodeType":"VariableDeclaration","scope":12172,"src":"7961:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12162,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7961:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12165,"mutability":"mutable","name":"isWrite","nodeType":"VariableDeclaration","scope":12172,"src":"8021:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12164,"name":"bool","nodeType":"ElementaryTypeName","src":"8021:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12167,"mutability":"mutable","name":"previousValue","nodeType":"VariableDeclaration","scope":12172,"src":"8086:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12166,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8086:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12169,"mutability":"mutable","name":"newValue","nodeType":"VariableDeclaration","scope":12172,"src":"8155:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8155:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12171,"mutability":"mutable","name":"reverted","nodeType":"VariableDeclaration","scope":12172,"src":"8220:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12170,"name":"bool","nodeType":"ElementaryTypeName","src":"8220:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"StorageAccess","scope":15198,"visibility":"public"},{"id":12183,"nodeType":"StructDefinition","src":"8291:362:15","nodes":[],"canonicalName":"VmSafe.Gas","members":[{"constant":false,"id":12174,"mutability":"mutable","name":"gasLimit","nodeType":"VariableDeclaration","scope":12183,"src":"8350:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12173,"name":"uint64","nodeType":"ElementaryTypeName","src":"8350:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":12176,"mutability":"mutable","name":"gasTotalUsed","nodeType":"VariableDeclaration","scope":12183,"src":"8406:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12175,"name":"uint64","nodeType":"ElementaryTypeName","src":"8406:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":12178,"mutability":"mutable","name":"gasMemoryUsed","nodeType":"VariableDeclaration","scope":12183,"src":"8491:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12177,"name":"uint64","nodeType":"ElementaryTypeName","src":"8491:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":12180,"mutability":"mutable","name":"gasRefunded","nodeType":"VariableDeclaration","scope":12183,"src":"8560:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":12179,"name":"int64","nodeType":"ElementaryTypeName","src":"8560:5:15","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":12182,"mutability":"mutable","name":"gasRemaining","nodeType":"VariableDeclaration","scope":12183,"src":"8627:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12181,"name":"uint64","nodeType":"ElementaryTypeName","src":"8627:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"Gas","scope":15198,"visibility":"public"},{"id":12191,"nodeType":"FunctionDefinition","src":"8840:80:15","nodes":[],"documentation":{"id":12184,"nodeType":"StructuredDocumentation","src":"8697:138:15","text":"Gets the environment variable `name` and parses it as `address`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"350d56bf","implemented":false,"kind":"function","modifiers":[],"name":"envAddress","parameters":{"id":12187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12186,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":12191,"src":"8860:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12185,"name":"string","nodeType":"ElementaryTypeName","src":"8860:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8859:22:15"},"returnParameters":{"id":12190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12189,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":12191,"src":"8905:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12188,"name":"address","nodeType":"ElementaryTypeName","src":"8905:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8904:15:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12202,"nodeType":"FunctionDefinition","src":"9103:112:15","nodes":[],"documentation":{"id":12192,"nodeType":"StructuredDocumentation","src":"8926:172:15","text":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"ad31b9fa","implemented":false,"kind":"function","modifiers":[],"name":"envAddress","parameters":{"id":12197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12194,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":12202,"src":"9123:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12193,"name":"string","nodeType":"ElementaryTypeName","src":"9123:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12196,"mutability":"mutable","name":"delim","nodeType":"VariableDeclaration","scope":12202,"src":"9145:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12195,"name":"string","nodeType":"ElementaryTypeName","src":"9145:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9122:45:15"},"returnParameters":{"id":12201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12200,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":12202,"src":"9191:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":12198,"name":"address","nodeType":"ElementaryTypeName","src":"9191:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":12199,"nodeType":"ArrayTypeName","src":"9191:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"9190:24:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12210,"nodeType":"FunctionDefinition","src":"9361:74:15","nodes":[],"documentation":{"id":12203,"nodeType":"StructuredDocumentation","src":"9221:135:15","text":"Gets the environment variable `name` and parses it as `bool`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"7ed1ec7d","implemented":false,"kind":"function","modifiers":[],"name":"envBool","parameters":{"id":12206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12205,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":12210,"src":"9378:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12204,"name":"string","nodeType":"ElementaryTypeName","src":"9378:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9377:22:15"},"returnParameters":{"id":12209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12208,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":12210,"src":"9423:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12207,"name":"bool","nodeType":"ElementaryTypeName","src":"9423:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9422:12:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12221,"nodeType":"FunctionDefinition","src":"9615:106:15","nodes":[],"documentation":{"id":12211,"nodeType":"StructuredDocumentation","src":"9441:169:15","text":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"aaaddeaf","implemented":false,"kind":"function","modifiers":[],"name":"envBool","parameters":{"id":12216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12213,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":12221,"src":"9632:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12212,"name":"string","nodeType":"ElementaryTypeName","src":"9632:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12215,"mutability":"mutable","name":"delim","nodeType":"VariableDeclaration","scope":12221,"src":"9654:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12214,"name":"string","nodeType":"ElementaryTypeName","src":"9654:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9631:45:15"},"returnParameters":{"id":12220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12219,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":12221,"src":"9700:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":12217,"name":"bool","nodeType":"ElementaryTypeName","src":"9700:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12218,"nodeType":"ArrayTypeName","src":"9700:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"9699:21:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12229,"nodeType":"FunctionDefinition","src":"9870:80:15","nodes":[],"documentation":{"id":12222,"nodeType":"StructuredDocumentation","src":"9727:138:15","text":"Gets the environment variable `name` and parses it as `bytes32`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"97949042","implemented":false,"kind":"function","modifiers":[],"name":"envBytes32","parameters":{"id":12225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12224,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":12229,"src":"9890:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12223,"name":"string","nodeType":"ElementaryTypeName","src":"9890:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9889:22:15"},"returnParameters":{"id":12228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12227,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":12229,"src":"9935:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12226,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9935:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9934:15:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12240,"nodeType":"FunctionDefinition","src":"10133:112:15","nodes":[],"documentation":{"id":12230,"nodeType":"StructuredDocumentation","src":"9956:172:15","text":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"5af231c1","implemented":false,"kind":"function","modifiers":[],"name":"envBytes32","parameters":{"id":12235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12232,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":12240,"src":"10153:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12231,"name":"string","nodeType":"ElementaryTypeName","src":"10153:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12234,"mutability":"mutable","name":"delim","nodeType":"VariableDeclaration","scope":12240,"src":"10175:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12233,"name":"string","nodeType":"ElementaryTypeName","src":"10175:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10152:45:15"},"returnParameters":{"id":12239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12238,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":12240,"src":"10221:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10221:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12237,"nodeType":"ArrayTypeName","src":"10221:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"10220:24:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12248,"nodeType":"FunctionDefinition","src":"10392:83:15","nodes":[],"documentation":{"id":12241,"nodeType":"StructuredDocumentation","src":"10251:136:15","text":"Gets the environment variable `name` and parses it as `bytes`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"4d7baf06","implemented":false,"kind":"function","modifiers":[],"name":"envBytes","parameters":{"id":12244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12243,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":12248,"src":"10410:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12242,"name":"string","nodeType":"ElementaryTypeName","src":"10410:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10409:22:15"},"returnParameters":{"id":12247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12246,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":12248,"src":"10455:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":12245,"name":"bytes","nodeType":"ElementaryTypeName","src":"10455:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10454:20:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12259,"nodeType":"FunctionDefinition","src":"10656:108:15","nodes":[],"documentation":{"id":12249,"nodeType":"StructuredDocumentation","src":"10481:170:15","text":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"ddc2651b","implemented":false,"kind":"function","modifiers":[],"name":"envBytes","parameters":{"id":12254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12251,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":12259,"src":"10674:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12250,"name":"string","nodeType":"ElementaryTypeName","src":"10674:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12253,"mutability":"mutable","name":"delim","nodeType":"VariableDeclaration","scope":12259,"src":"10696:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12252,"name":"string","nodeType":"ElementaryTypeName","src":"10696:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10673:45:15"},"returnParameters":{"id":12258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12257,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":12259,"src":"10742:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":12255,"name":"bytes","nodeType":"ElementaryTypeName","src":"10742:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":12256,"nodeType":"ArrayTypeName","src":"10742:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"10741:22:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12267,"nodeType":"FunctionDefinition","src":"10866:77:15","nodes":[],"documentation":{"id":12260,"nodeType":"StructuredDocumentation","src":"10770:91:15","text":"Gets the environment variable `name` and returns true if it exists, else returns false."},"functionSelector":"ce8365f9","implemented":false,"kind":"function","modifiers":[],"name":"envExists","parameters":{"id":12263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12262,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":12267,"src":"10885:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12261,"name":"string","nodeType":"ElementaryTypeName","src":"10885:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10884:22:15"},"returnParameters":{"id":12266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12265,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":12267,"src":"10930:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12264,"name":"bool","nodeType":"ElementaryTypeName","src":"10930:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10929:13:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12275,"nodeType":"FunctionDefinition","src":"11091:75:15","nodes":[],"documentation":{"id":12268,"nodeType":"StructuredDocumentation","src":"10949:137:15","text":"Gets the environment variable `name` and parses it as `int256`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"892a0c61","implemented":false,"kind":"function","modifiers":[],"name":"envInt","parameters":{"id":12271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12270,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":12275,"src":"11107:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12269,"name":"string","nodeType":"ElementaryTypeName","src":"11107:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11106:22:15"},"returnParameters":{"id":12274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12273,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":12275,"src":"11152:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":12272,"name":"int256","nodeType":"ElementaryTypeName","src":"11152:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"11151:14:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12286,"nodeType":"FunctionDefinition","src":"11348:107:15","nodes":[],"documentation":{"id":12276,"nodeType":"StructuredDocumentation","src":"11172:171:15","text":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"42181150","implemented":false,"kind":"function","modifiers":[],"name":"envInt","parameters":{"id":12281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12278,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":12286,"src":"11364:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12277,"name":"string","nodeType":"ElementaryTypeName","src":"11364:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12280,"mutability":"mutable","name":"delim","nodeType":"VariableDeclaration","scope":12286,"src":"11386:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12279,"name":"string","nodeType":"ElementaryTypeName","src":"11386:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11363:45:15"},"returnParameters":{"id":12285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12284,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":12286,"src":"11432:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":12282,"name":"int256","nodeType":"ElementaryTypeName","src":"11432:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":12283,"nodeType":"ArrayTypeName","src":"11432:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"11431:23:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12296,"nodeType":"FunctionDefinition","src":"11646:91:15","nodes":[],"documentation":{"id":12287,"nodeType":"StructuredDocumentation","src":"11461:180:15","text":"Gets the environment variable `name` and parses it as `bool`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"4777f3cf","implemented":false,"kind":"function","modifiers":[],"name":"envOr","parameters":{"id":12292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12289,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":12296,"src":"11661:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12288,"name":"string","nodeType":"ElementaryTypeName","src":"11661:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12291,"mutability":"mutable","name":"defaultValue","nodeType":"VariableDeclaration","scope":12296,"src":"11683:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12290,"name":"bool","nodeType":"ElementaryTypeName","src":"11683:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11660:41:15"},"returnParameters":{"id":12295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12294,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":12296,"src":"11725:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12293,"name":"bool","nodeType":"ElementaryTypeName","src":"11725:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11724:12:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12306,"nodeType":"FunctionDefinition","src":"11931:97:15","nodes":[],"documentation":{"id":12297,"nodeType":"StructuredDocumentation","src":"11743:183:15","text":"Gets the environment variable `name` and parses it as `uint256`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"5e97348f","implemented":false,"kind":"function","modifiers":[],"name":"envOr","parameters":{"id":12302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12299,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":12306,"src":"11946:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12298,"name":"string","nodeType":"ElementaryTypeName","src":"11946:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12301,"mutability":"mutable","name":"defaultValue","nodeType":"VariableDeclaration","scope":12306,"src":"11968:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12300,"name":"uint256","nodeType":"ElementaryTypeName","src":"11968:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11945:44:15"},"returnParameters":{"id":12305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12304,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":12306,"src":"12013:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12303,"name":"uint256","nodeType":"ElementaryTypeName","src":"12013:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12012:15:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12320,"nodeType":"FunctionDefinition","src":"12256:164:15","nodes":[],"documentation":{"id":12307,"nodeType":"StructuredDocumentation","src":"12034:217:15","text":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"c74e9deb","implemented":false,"kind":"function","modifiers":[],"name":"envOr","parameters":{"id":12315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12309,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":12320,"src":"12271:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12308,"name":"string","nodeType":"ElementaryTypeName","src":"12271:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12311,"mutability":"mutable","name":"delim","nodeType":"VariableDeclaration","scope":12320,"src":"12293:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12310,"name":"string","nodeType":"ElementaryTypeName","src":"12293:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12314,"mutability":"mutable","name":"defaultValue","nodeType":"VariableDeclaration","scope":12320,"src":"12316:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":12312,"name":"address","nodeType":"ElementaryTypeName","src":"12316:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":12313,"nodeType":"ArrayTypeName","src":"12316:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"12270:78:15"},"returnParameters":{"id":12319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12318,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":12320,"src":"12396:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":12316,"name":"address","nodeType":"ElementaryTypeName","src":"12396:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":12317,"nodeType":"ArrayTypeName","src":"12396:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"12395:24:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12334,"nodeType":"FunctionDefinition","src":"12648:164:15","nodes":[],"documentation":{"id":12321,"nodeType":"StructuredDocumentation","src":"12426:217:15","text":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"2281f367","implemented":false,"kind":"function","modifiers":[],"name":"envOr","parameters":{"id":12329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12323,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":12334,"src":"12663:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12322,"name":"string","nodeType":"ElementaryTypeName","src":"12663:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12325,"mutability":"mutable","name":"delim","nodeType":"VariableDeclaration","scope":12334,"src":"12685:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12324,"name":"string","nodeType":"ElementaryTypeName","src":"12685:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12328,"mutability":"mutable","name":"defaultValue","nodeType":"VariableDeclaration","scope":12334,"src":"12708:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12326,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12708:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12327,"nodeType":"ArrayTypeName","src":"12708:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"12662:78:15"},"returnParameters":{"id":12333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12332,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":12334,"src":"12788:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12330,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12788:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12331,"nodeType":"ArrayTypeName","src":"12788:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"12787:24:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12348,"nodeType":"FunctionDefinition","src":"13039:162:15","nodes":[],"documentation":{"id":12335,"nodeType":"StructuredDocumentation","src":"12818:216:15","text":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"859216bc","implemented":false,"kind":"function","modifiers":[],"name":"envOr","parameters":{"id":12343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12337,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":12348,"src":"13054:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12336,"name":"string","nodeType":"ElementaryTypeName","src":"13054:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12339,"mutability":"mutable","name":"delim","nodeType":"VariableDeclaration","scope":12348,"src":"13076:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12338,"name":"string","nodeType":"ElementaryTypeName","src":"13076:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12342,"mutability":"mutable","name":"defaultValue","nodeType":"VariableDeclaration","scope":12348,"src":"13099:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":12340,"name":"string","nodeType":"ElementaryTypeName","src":"13099:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":12341,"nodeType":"ArrayTypeName","src":"13099:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"13053:77:15"},"returnParameters":{"id":12347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12346,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":12348,"src":"13178:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":12344,"name":"string","nodeType":"ElementaryTypeName","src":"13178:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":12345,"nodeType":"ArrayTypeName","src":"13178:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"13177:23:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12362,"nodeType":"FunctionDefinition","src":"13427:160:15","nodes":[],"documentation":{"id":12349,"nodeType":"StructuredDocumentation","src":"13207:215:15","text":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"64bc3e64","implemented":false,"kind":"function","modifiers":[],"name":"envOr","parameters":{"id":12357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12351,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":12362,"src":"13442:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12350,"name":"string","nodeType":"ElementaryTypeName","src":"13442:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12353,"mutability":"mutable","name":"delim","nodeType":"VariableDeclaration","scope":12362,"src":"13464:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12352,"name":"string","nodeType":"ElementaryTypeName","src":"13464:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12356,"mutability":"mutable","name":"defaultValue","nodeType":"VariableDeclaration","scope":12362,"src":"13487:29:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":12354,"name":"bytes","nodeType":"ElementaryTypeName","src":"13487:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":12355,"nodeType":"ArrayTypeName","src":"13487:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"13441:76:15"},"returnParameters":{"id":12361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12360,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":12362,"src":"13565:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":12358,"name":"bytes","nodeType":"ElementaryTypeName","src":"13565:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":12359,"nodeType":"ArrayTypeName","src":"13565:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"13564:22:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12372,"nodeType":"FunctionDefinition","src":"13780:95:15","nodes":[],"documentation":{"id":12363,"nodeType":"StructuredDocumentation","src":"13593:182:15","text":"Gets the environment variable `name` and parses it as `int256`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"bbcb713e","implemented":false,"kind":"function","modifiers":[],"name":"envOr","parameters":{"id":12368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12365,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":12372,"src":"13795:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12364,"name":"string","nodeType":"ElementaryTypeName","src":"13795:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12367,"mutability":"mutable","name":"defaultValue","nodeType":"VariableDeclaration","scope":12372,"src":"13817:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":12366,"name":"int256","nodeType":"ElementaryTypeName","src":"13817:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"13794:43:15"},"returnParameters":{"id":12371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12370,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":12372,"src":"13861:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":12369,"name":"int256","nodeType":"ElementaryTypeName","src":"13861:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"13860:14:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12382,"nodeType":"FunctionDefinition","src":"14069:97:15","nodes":[],"documentation":{"id":12373,"nodeType":"StructuredDocumentation","src":"13881:183:15","text":"Gets the environment variable `name` and parses it as `address`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"561fe540","implemented":false,"kind":"function","modifiers":[],"name":"envOr","parameters":{"id":12378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12375,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":12382,"src":"14084:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12374,"name":"string","nodeType":"ElementaryTypeName","src":"14084:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12377,"mutability":"mutable","name":"defaultValue","nodeType":"VariableDeclaration","scope":12382,"src":"14106:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12376,"name":"address","nodeType":"ElementaryTypeName","src":"14106:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14083:44:15"},"returnParameters":{"id":12381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12380,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":12382,"src":"14151:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12379,"name":"address","nodeType":"ElementaryTypeName","src":"14151:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14150:15:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12392,"nodeType":"FunctionDefinition","src":"14360:97:15","nodes":[],"documentation":{"id":12383,"nodeType":"StructuredDocumentation","src":"14172:183:15","text":"Gets the environment variable `name` and parses it as `bytes32`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"b4a85892","implemented":false,"kind":"function","modifiers":[],"name":"envOr","parameters":{"id":12388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12385,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":12392,"src":"14375:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12384,"name":"string","nodeType":"ElementaryTypeName","src":"14375:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12387,"mutability":"mutable","name":"defaultValue","nodeType":"VariableDeclaration","scope":12392,"src":"14397:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12386,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14397:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14374:44:15"},"returnParameters":{"id":12391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12390,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":12392,"src":"14442:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12389,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14442:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14441:15:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12402,"nodeType":"FunctionDefinition","src":"14650:111:15","nodes":[],"documentation":{"id":12393,"nodeType":"StructuredDocumentation","src":"14463:182:15","text":"Gets the environment variable `name` and parses it as `string`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"d145736c","implemented":false,"kind":"function","modifiers":[],"name":"envOr","parameters":{"id":12398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12395,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":12402,"src":"14665:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12394,"name":"string","nodeType":"ElementaryTypeName","src":"14665:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12397,"mutability":"mutable","name":"defaultValue","nodeType":"VariableDeclaration","scope":12402,"src":"14687:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12396,"name":"string","nodeType":"ElementaryTypeName","src":"14687:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14664:52:15"},"returnParameters":{"id":12401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12400,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":12402,"src":"14740:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12399,"name":"string","nodeType":"ElementaryTypeName","src":"14740:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14739:21:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12412,"nodeType":"FunctionDefinition","src":"14953:109:15","nodes":[],"documentation":{"id":12403,"nodeType":"StructuredDocumentation","src":"14767:181:15","text":"Gets the environment variable `name` and parses it as `bytes`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"b3e47705","implemented":false,"kind":"function","modifiers":[],"name":"envOr","parameters":{"id":12408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12405,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":12412,"src":"14968:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12404,"name":"string","nodeType":"ElementaryTypeName","src":"14968:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12407,"mutability":"mutable","name":"defaultValue","nodeType":"VariableDeclaration","scope":12412,"src":"14990:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":12406,"name":"bytes","nodeType":"ElementaryTypeName","src":"14990:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14967:51:15"},"returnParameters":{"id":12411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12410,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":12412,"src":"15042:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":12409,"name":"bytes","nodeType":"ElementaryTypeName","src":"15042:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15041:20:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12426,"nodeType":"FunctionDefinition","src":"15287:158:15","nodes":[],"documentation":{"id":12413,"nodeType":"StructuredDocumentation","src":"15068:214:15","text":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"eb85e83b","implemented":false,"kind":"function","modifiers":[],"name":"envOr","parameters":{"id":12421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12415,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":12426,"src":"15302:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12414,"name":"string","nodeType":"ElementaryTypeName","src":"15302:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12417,"mutability":"mutable","name":"delim","nodeType":"VariableDeclaration","scope":12426,"src":"15324:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12416,"name":"string","nodeType":"ElementaryTypeName","src":"15324:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12420,"mutability":"mutable","name":"defaultValue","nodeType":"VariableDeclaration","scope":12426,"src":"15347:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":12418,"name":"bool","nodeType":"ElementaryTypeName","src":"15347:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12419,"nodeType":"ArrayTypeName","src":"15347:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"15301:75:15"},"returnParameters":{"id":12425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12424,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":12426,"src":"15424:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":12422,"name":"bool","nodeType":"ElementaryTypeName","src":"15424:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12423,"nodeType":"ArrayTypeName","src":"15424:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"15423:21:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12440,"nodeType":"FunctionDefinition","src":"15673:164:15","nodes":[],"documentation":{"id":12427,"nodeType":"StructuredDocumentation","src":"15451:217:15","text":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"74318528","implemented":false,"kind":"function","modifiers":[],"name":"envOr","parameters":{"id":12435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12429,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":12440,"src":"15688:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12428,"name":"string","nodeType":"ElementaryTypeName","src":"15688:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12431,"mutability":"mutable","name":"delim","nodeType":"VariableDeclaration","scope":12440,"src":"15710:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12430,"name":"string","nodeType":"ElementaryTypeName","src":"15710:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12434,"mutability":"mutable","name":"defaultValue","nodeType":"VariableDeclaration","scope":12440,"src":"15733:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":12432,"name":"uint256","nodeType":"ElementaryTypeName","src":"15733:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12433,"nodeType":"ArrayTypeName","src":"15733:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"15687:78:15"},"returnParameters":{"id":12439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12438,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":12440,"src":"15813:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":12436,"name":"uint256","nodeType":"ElementaryTypeName","src":"15813:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12437,"nodeType":"ArrayTypeName","src":"15813:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"15812:24:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12454,"nodeType":"FunctionDefinition","src":"16064:162:15","nodes":[],"documentation":{"id":12441,"nodeType":"StructuredDocumentation","src":"15843:216:15","text":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"4700d74b","implemented":false,"kind":"function","modifiers":[],"name":"envOr","parameters":{"id":12449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12443,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":12454,"src":"16079:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12442,"name":"string","nodeType":"ElementaryTypeName","src":"16079:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12445,"mutability":"mutable","name":"delim","nodeType":"VariableDeclaration","scope":12454,"src":"16101:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12444,"name":"string","nodeType":"ElementaryTypeName","src":"16101:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12448,"mutability":"mutable","name":"defaultValue","nodeType":"VariableDeclaration","scope":12454,"src":"16124:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":12446,"name":"int256","nodeType":"ElementaryTypeName","src":"16124:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":12447,"nodeType":"ArrayTypeName","src":"16124:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"16078:77:15"},"returnParameters":{"id":12453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12452,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":12454,"src":"16203:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":12450,"name":"int256","nodeType":"ElementaryTypeName","src":"16203:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":12451,"nodeType":"ArrayTypeName","src":"16203:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"16202:23:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12462,"nodeType":"FunctionDefinition","src":"16374:85:15","nodes":[],"documentation":{"id":12455,"nodeType":"StructuredDocumentation","src":"16232:137:15","text":"Gets the environment variable `name` and parses it as `string`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"f877cb19","implemented":false,"kind":"function","modifiers":[],"name":"envString","parameters":{"id":12458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12457,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":12462,"src":"16393:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12456,"name":"string","nodeType":"ElementaryTypeName","src":"16393:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16392:22:15"},"returnParameters":{"id":12461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12460,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":12462,"src":"16438:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12459,"name":"string","nodeType":"ElementaryTypeName","src":"16438:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16437:21:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12473,"nodeType":"FunctionDefinition","src":"16641:110:15","nodes":[],"documentation":{"id":12463,"nodeType":"StructuredDocumentation","src":"16465:171:15","text":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"14b02bc9","implemented":false,"kind":"function","modifiers":[],"name":"envString","parameters":{"id":12468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12465,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":12473,"src":"16660:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12464,"name":"string","nodeType":"ElementaryTypeName","src":"16660:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12467,"mutability":"mutable","name":"delim","nodeType":"VariableDeclaration","scope":12473,"src":"16682:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12466,"name":"string","nodeType":"ElementaryTypeName","src":"16682:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16659:45:15"},"returnParameters":{"id":12472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12471,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":12473,"src":"16728:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":12469,"name":"string","nodeType":"ElementaryTypeName","src":"16728:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":12470,"nodeType":"ArrayTypeName","src":"16728:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"16727:23:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12481,"nodeType":"FunctionDefinition","src":"16900:77:15","nodes":[],"documentation":{"id":12474,"nodeType":"StructuredDocumentation","src":"16757:138:15","text":"Gets the environment variable `name` and parses it as `uint256`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"c1978d1f","implemented":false,"kind":"function","modifiers":[],"name":"envUint","parameters":{"id":12477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12476,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":12481,"src":"16917:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12475,"name":"string","nodeType":"ElementaryTypeName","src":"16917:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16916:22:15"},"returnParameters":{"id":12480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12479,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":12481,"src":"16962:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12478,"name":"uint256","nodeType":"ElementaryTypeName","src":"16962:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16961:15:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12492,"nodeType":"FunctionDefinition","src":"17160:109:15","nodes":[],"documentation":{"id":12482,"nodeType":"StructuredDocumentation","src":"16983:172:15","text":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"f3dec099","implemented":false,"kind":"function","modifiers":[],"name":"envUint","parameters":{"id":12487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12484,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":12492,"src":"17177:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12483,"name":"string","nodeType":"ElementaryTypeName","src":"17177:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12486,"mutability":"mutable","name":"delim","nodeType":"VariableDeclaration","scope":12492,"src":"17199:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12485,"name":"string","nodeType":"ElementaryTypeName","src":"17199:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17176:45:15"},"returnParameters":{"id":12491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12490,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":12492,"src":"17245:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":12488,"name":"uint256","nodeType":"ElementaryTypeName","src":"17245:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12489,"nodeType":"ArrayTypeName","src":"17245:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"17244:24:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12500,"nodeType":"FunctionDefinition","src":"17346:77:15","nodes":[],"documentation":{"id":12493,"nodeType":"StructuredDocumentation","src":"17275:66:15","text":"Returns true if `forge` command was executed in given context."},"functionSelector":"64af255d","implemented":false,"kind":"function","modifiers":[],"name":"isContext","parameters":{"id":12496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12495,"mutability":"mutable","name":"context","nodeType":"VariableDeclaration","scope":12500,"src":"17365:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ForgeContext_$12051","typeString":"enum VmSafe.ForgeContext"},"typeName":{"id":12494,"name":"ForgeContext","nodeType":"UserDefinedTypeName","referencedDeclaration":12051,"src":"17365:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_ForgeContext_$12051","typeString":"enum VmSafe.ForgeContext"}},"visibility":"internal"}],"src":"17364:22:15"},"returnParameters":{"id":12499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12498,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":12500,"src":"17410:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12497,"name":"bool","nodeType":"ElementaryTypeName","src":"17410:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17409:13:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12508,"nodeType":"FunctionDefinition","src":"17465:70:15","nodes":[],"documentation":{"id":12501,"nodeType":"StructuredDocumentation","src":"17429:31:15","text":"Sets environment variables."},"functionSelector":"3d5923ee","implemented":false,"kind":"function","modifiers":[],"name":"setEnv","parameters":{"id":12506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12503,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":12508,"src":"17481:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12502,"name":"string","nodeType":"ElementaryTypeName","src":"17481:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12505,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":12508,"src":"17503:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12504,"name":"string","nodeType":"ElementaryTypeName","src":"17503:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17480:45:15"},"returnParameters":{"id":12507,"nodeType":"ParameterList","parameters":[],"src":"17534:0:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12520,"nodeType":"FunctionDefinition","src":"17667:109:15","nodes":[],"documentation":{"id":12509,"nodeType":"StructuredDocumentation","src":"17571:91:15","text":"Gets all accessed reads and write slot from a `vm.record` session, for a given address."},"functionSelector":"65bc9481","implemented":false,"kind":"function","modifiers":[],"name":"accesses","parameters":{"id":12512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12511,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":12520,"src":"17685:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12510,"name":"address","nodeType":"ElementaryTypeName","src":"17685:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17684:16:15"},"returnParameters":{"id":12519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12515,"mutability":"mutable","name":"readSlots","nodeType":"VariableDeclaration","scope":12520,"src":"17719:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12513,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17719:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12514,"nodeType":"ArrayTypeName","src":"17719:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":12518,"mutability":"mutable","name":"writeSlots","nodeType":"VariableDeclaration","scope":12520,"src":"17747:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12516,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17747:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12517,"nodeType":"ArrayTypeName","src":"17747:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"17718:57:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12528,"nodeType":"FunctionDefinition","src":"17832:74:15","nodes":[],"documentation":{"id":12521,"nodeType":"StructuredDocumentation","src":"17782:45:15","text":"Gets the address for a given private key."},"functionSelector":"ffa18649","implemented":false,"kind":"function","modifiers":[],"name":"addr","parameters":{"id":12524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12523,"mutability":"mutable","name":"privateKey","nodeType":"VariableDeclaration","scope":12528,"src":"17846:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12522,"name":"uint256","nodeType":"ElementaryTypeName","src":"17846:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17845:20:15"},"returnParameters":{"id":12527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12526,"mutability":"mutable","name":"keyAddr","nodeType":"VariableDeclaration","scope":12528,"src":"17889:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12525,"name":"address","nodeType":"ElementaryTypeName","src":"17889:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17888:17:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12544,"nodeType":"FunctionDefinition","src":"17969:160:15","nodes":[],"documentation":{"id":12529,"nodeType":"StructuredDocumentation","src":"17912:52:15","text":"Gets all the logs according to specified filter."},"functionSelector":"35e1349b","implemented":false,"kind":"function","modifiers":[],"name":"eth_getLogs","parameters":{"id":12539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12531,"mutability":"mutable","name":"fromBlock","nodeType":"VariableDeclaration","scope":12544,"src":"17990:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12530,"name":"uint256","nodeType":"ElementaryTypeName","src":"17990:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12533,"mutability":"mutable","name":"toBlock","nodeType":"VariableDeclaration","scope":12544,"src":"18009:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12532,"name":"uint256","nodeType":"ElementaryTypeName","src":"18009:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12535,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":12544,"src":"18026:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12534,"name":"address","nodeType":"ElementaryTypeName","src":"18026:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12538,"mutability":"mutable","name":"topics","nodeType":"VariableDeclaration","scope":12544,"src":"18042:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12536,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18042:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12537,"nodeType":"ArrayTypeName","src":"18042:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"17989:79:15"},"returnParameters":{"id":12543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12542,"mutability":"mutable","name":"logs","nodeType":"VariableDeclaration","scope":12544,"src":"18103:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EthGetLogs_$12084_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.EthGetLogs[]"},"typeName":{"baseType":{"id":12540,"name":"EthGetLogs","nodeType":"UserDefinedTypeName","referencedDeclaration":12084,"src":"18103:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_EthGetLogs_$12084_storage_ptr","typeString":"struct VmSafe.EthGetLogs"}},"id":12541,"nodeType":"ArrayTypeName","src":"18103:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EthGetLogs_$12084_storage_$dyn_storage_ptr","typeString":"struct VmSafe.EthGetLogs[]"}},"visibility":"internal"}],"src":"18102:26:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12550,"nodeType":"FunctionDefinition","src":"18466:70:15","nodes":[],"documentation":{"id":12545,"nodeType":"StructuredDocumentation","src":"18135:326:15","text":"Gets the current `block.blobbasefee`.\n You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"1f6d6ef7","implemented":false,"kind":"function","modifiers":[],"name":"getBlobBaseFee","parameters":{"id":12546,"nodeType":"ParameterList","parameters":[],"src":"18489:2:15"},"returnParameters":{"id":12549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12548,"mutability":"mutable","name":"blobBaseFee","nodeType":"VariableDeclaration","scope":12550,"src":"18515:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12547,"name":"uint256","nodeType":"ElementaryTypeName","src":"18515:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18514:21:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12556,"nodeType":"FunctionDefinition","src":"18851:65:15","nodes":[],"documentation":{"id":12551,"nodeType":"StructuredDocumentation","src":"18542:304:15","text":"Gets the current `block.number`.\n You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"42cbb15c","implemented":false,"kind":"function","modifiers":[],"name":"getBlockNumber","parameters":{"id":12552,"nodeType":"ParameterList","parameters":[],"src":"18874:2:15"},"returnParameters":{"id":12555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12554,"mutability":"mutable","name":"height","nodeType":"VariableDeclaration","scope":12556,"src":"18900:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12553,"name":"uint256","nodeType":"ElementaryTypeName","src":"18900:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18899:16:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12562,"nodeType":"FunctionDefinition","src":"19240:71:15","nodes":[],"documentation":{"id":12557,"nodeType":"StructuredDocumentation","src":"18922:313:15","text":"Gets the current `block.timestamp`.\n You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"796b89b9","implemented":false,"kind":"function","modifiers":[],"name":"getBlockTimestamp","parameters":{"id":12558,"nodeType":"ParameterList","parameters":[],"src":"19266:2:15"},"returnParameters":{"id":12561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12560,"mutability":"mutable","name":"timestamp","nodeType":"VariableDeclaration","scope":12562,"src":"19292:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12559,"name":"uint256","nodeType":"ElementaryTypeName","src":"19292:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19291:19:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12576,"nodeType":"FunctionDefinition","src":"19404:146:15","nodes":[],"documentation":{"id":12563,"nodeType":"StructuredDocumentation","src":"19317:82:15","text":"Gets the map key and parent of a mapping at a given slot, for a given address."},"functionSelector":"876e24e6","implemented":false,"kind":"function","modifiers":[],"name":"getMappingKeyAndParentOf","parameters":{"id":12568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12565,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":12576,"src":"19438:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12564,"name":"address","nodeType":"ElementaryTypeName","src":"19438:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12567,"mutability":"mutable","name":"elementSlot","nodeType":"VariableDeclaration","scope":12576,"src":"19454:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12566,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19454:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19437:37:15"},"returnParameters":{"id":12575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12570,"mutability":"mutable","name":"found","nodeType":"VariableDeclaration","scope":12576,"src":"19509:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12569,"name":"bool","nodeType":"ElementaryTypeName","src":"19509:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12572,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":12576,"src":"19521:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12571,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19521:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12574,"mutability":"mutable","name":"parent","nodeType":"VariableDeclaration","scope":12576,"src":"19534:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12573,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19534:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19508:41:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12586,"nodeType":"FunctionDefinition","src":"19647:97:15","nodes":[],"documentation":{"id":12577,"nodeType":"StructuredDocumentation","src":"19556:86:15","text":"Gets the number of elements in the mapping at the given slot, for a given address."},"functionSelector":"2f2fd63f","implemented":false,"kind":"function","modifiers":[],"name":"getMappingLength","parameters":{"id":12582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12579,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":12586,"src":"19673:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12578,"name":"address","nodeType":"ElementaryTypeName","src":"19673:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12581,"mutability":"mutable","name":"mappingSlot","nodeType":"VariableDeclaration","scope":12586,"src":"19689:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12580,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19689:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19672:37:15"},"returnParameters":{"id":12585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12584,"mutability":"mutable","name":"length","nodeType":"VariableDeclaration","scope":12586,"src":"19728:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12583,"name":"uint256","nodeType":"ElementaryTypeName","src":"19728:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19727:16:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12598,"nodeType":"FunctionDefinition","src":"19948:109:15","nodes":[],"documentation":{"id":12587,"nodeType":"StructuredDocumentation","src":"19750:193:15","text":"Gets the elements at index idx of the mapping at the given slot, for a given address. The\n index must be less than the length of the mapping (i.e. the number of keys in the mapping)."},"functionSelector":"ebc73ab4","implemented":false,"kind":"function","modifiers":[],"name":"getMappingSlotAt","parameters":{"id":12594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12589,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":12598,"src":"19974:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12588,"name":"address","nodeType":"ElementaryTypeName","src":"19974:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12591,"mutability":"mutable","name":"mappingSlot","nodeType":"VariableDeclaration","scope":12598,"src":"19990:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12590,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19990:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12593,"mutability":"mutable","name":"idx","nodeType":"VariableDeclaration","scope":12598,"src":"20011:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12592,"name":"uint256","nodeType":"ElementaryTypeName","src":"20011:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19973:50:15"},"returnParameters":{"id":12597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12596,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":12598,"src":"20042:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12595,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20042:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20041:15:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12606,"nodeType":"FunctionDefinition","src":"20101:72:15","nodes":[],"documentation":{"id":12599,"nodeType":"StructuredDocumentation","src":"20063:33:15","text":"Gets the nonce of an account."},"functionSelector":"2d0335ab","implemented":false,"kind":"function","modifiers":[],"name":"getNonce","parameters":{"id":12602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12601,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":12606,"src":"20119:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12600,"name":"address","nodeType":"ElementaryTypeName","src":"20119:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"20118:17:15"},"returnParameters":{"id":12605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12604,"mutability":"mutable","name":"nonce","nodeType":"VariableDeclaration","scope":12606,"src":"20159:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12603,"name":"uint64","nodeType":"ElementaryTypeName","src":"20159:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"20158:14:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12613,"nodeType":"FunctionDefinition","src":"20215:64:15","nodes":[],"documentation":{"id":12607,"nodeType":"StructuredDocumentation","src":"20179:31:15","text":"Gets all the recorded logs."},"functionSelector":"191553a4","implemented":false,"kind":"function","modifiers":[],"name":"getRecordedLogs","parameters":{"id":12608,"nodeType":"ParameterList","parameters":[],"src":"20239:2:15"},"returnParameters":{"id":12612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12611,"mutability":"mutable","name":"logs","nodeType":"VariableDeclaration","scope":12613,"src":"20260:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Log_$12059_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.Log[]"},"typeName":{"baseType":{"id":12609,"name":"Log","nodeType":"UserDefinedTypeName","referencedDeclaration":12059,"src":"20260:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Log_$12059_storage_ptr","typeString":"struct VmSafe.Log"}},"id":12610,"nodeType":"ArrayTypeName","src":"20260:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Log_$12059_storage_$dyn_storage_ptr","typeString":"struct VmSafe.Log[]"}},"visibility":"internal"}],"src":"20259:19:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12619,"nodeType":"FunctionDefinition","src":"20329:62:15","nodes":[],"documentation":{"id":12614,"nodeType":"StructuredDocumentation","src":"20285:39:15","text":"Gets the gas used in the last call."},"functionSelector":"2b589b28","implemented":false,"kind":"function","modifiers":[],"name":"lastCallGas","parameters":{"id":12615,"nodeType":"ParameterList","parameters":[],"src":"20349:2:15"},"returnParameters":{"id":12618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12617,"mutability":"mutable","name":"gas","nodeType":"VariableDeclaration","scope":12619,"src":"20375:14:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Gas_$12183_memory_ptr","typeString":"struct VmSafe.Gas"},"typeName":{"id":12616,"name":"Gas","nodeType":"UserDefinedTypeName","referencedDeclaration":12183,"src":"20375:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Gas_$12183_storage_ptr","typeString":"struct VmSafe.Gas"}},"visibility":"internal"}],"src":"20374:16:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12629,"nodeType":"FunctionDefinition","src":"20443:81:15","nodes":[],"documentation":{"id":12620,"nodeType":"StructuredDocumentation","src":"20397:41:15","text":"Loads a storage slot from an address."},"functionSelector":"667f9d70","implemented":false,"kind":"function","modifiers":[],"name":"load","parameters":{"id":12625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12622,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":12629,"src":"20457:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12621,"name":"address","nodeType":"ElementaryTypeName","src":"20457:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12624,"mutability":"mutable","name":"slot","nodeType":"VariableDeclaration","scope":12629,"src":"20473:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12623,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20473:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20456:30:15"},"returnParameters":{"id":12628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12627,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":12629,"src":"20510:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12626,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20510:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20509:14:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12633,"nodeType":"FunctionDefinition","src":"20615:37:15","nodes":[],"documentation":{"id":12630,"nodeType":"StructuredDocumentation","src":"20530:80:15","text":"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused."},"functionSelector":"d1a5b36f","implemented":false,"kind":"function","modifiers":[],"name":"pauseGasMetering","parameters":{"id":12631,"nodeType":"ParameterList","parameters":[],"src":"20640:2:15"},"returnParameters":{"id":12632,"nodeType":"ParameterList","parameters":[],"src":"20651:0:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12637,"nodeType":"FunctionDefinition","src":"20704:27:15","nodes":[],"documentation":{"id":12634,"nodeType":"StructuredDocumentation","src":"20658:41:15","text":"Records all storage reads and writes."},"functionSelector":"266cf109","implemented":false,"kind":"function","modifiers":[],"name":"record","parameters":{"id":12635,"nodeType":"ParameterList","parameters":[],"src":"20719:2:15"},"returnParameters":{"id":12636,"nodeType":"ParameterList","parameters":[],"src":"20730:0:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12641,"nodeType":"FunctionDefinition","src":"20778:31:15","nodes":[],"documentation":{"id":12638,"nodeType":"StructuredDocumentation","src":"20737:36:15","text":"Record all the transaction logs."},"functionSelector":"41af2f52","implemented":false,"kind":"function","modifiers":[],"name":"recordLogs","parameters":{"id":12639,"nodeType":"ParameterList","parameters":[],"src":"20797:2:15"},"returnParameters":{"id":12640,"nodeType":"ParameterList","parameters":[],"src":"20808:0:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12645,"nodeType":"FunctionDefinition","src":"20899:38:15","nodes":[],"documentation":{"id":12642,"nodeType":"StructuredDocumentation","src":"20815:79:15","text":"Resumes gas metering (i.e. gas usage is counted again). Noop if already on."},"functionSelector":"2bcd50e0","implemented":false,"kind":"function","modifiers":[],"name":"resumeGasMetering","parameters":{"id":12643,"nodeType":"ParameterList","parameters":[],"src":"20925:2:15"},"returnParameters":{"id":12644,"nodeType":"ParameterList","parameters":[],"src":"20936:0:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12655,"nodeType":"FunctionDefinition","src":"21014:98:15","nodes":[],"documentation":{"id":12646,"nodeType":"StructuredDocumentation","src":"20943:66:15","text":"Performs an Ethereum JSON-RPC request to the current fork URL."},"functionSelector":"1206c8a8","implemented":false,"kind":"function","modifiers":[],"name":"rpc","parameters":{"id":12651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12648,"mutability":"mutable","name":"method","nodeType":"VariableDeclaration","scope":12655,"src":"21027:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12647,"name":"string","nodeType":"ElementaryTypeName","src":"21027:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12650,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":12655,"src":"21051:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12649,"name":"string","nodeType":"ElementaryTypeName","src":"21051:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"21026:48:15"},"returnParameters":{"id":12654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12653,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":12655,"src":"21093:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":12652,"name":"bytes","nodeType":"ElementaryTypeName","src":"21093:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"21092:19:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12667,"nodeType":"FunctionDefinition","src":"21186:99:15","nodes":[],"documentation":{"id":12656,"nodeType":"StructuredDocumentation","src":"21118:63:15","text":"Signs `digest` with `privateKey` using the secp256r1 curve."},"functionSelector":"83211b40","implemented":false,"kind":"function","modifiers":[],"name":"signP256","parameters":{"id":12661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12658,"mutability":"mutable","name":"privateKey","nodeType":"VariableDeclaration","scope":12667,"src":"21204:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12657,"name":"uint256","nodeType":"ElementaryTypeName","src":"21204:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12660,"mutability":"mutable","name":"digest","nodeType":"VariableDeclaration","scope":12667,"src":"21224:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12659,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21224:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21203:36:15"},"returnParameters":{"id":12666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12663,"mutability":"mutable","name":"r","nodeType":"VariableDeclaration","scope":12667,"src":"21263:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12662,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21263:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12665,"mutability":"mutable","name":"s","nodeType":"VariableDeclaration","scope":12667,"src":"21274:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12664,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21274:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21262:22:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12681,"nodeType":"FunctionDefinition","src":"21359:104:15","nodes":[],"documentation":{"id":12668,"nodeType":"StructuredDocumentation","src":"21291:63:15","text":"Signs `digest` with `privateKey` using the secp256k1 curve."},"functionSelector":"e341eaa4","implemented":false,"kind":"function","modifiers":[],"name":"sign","parameters":{"id":12673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12670,"mutability":"mutable","name":"privateKey","nodeType":"VariableDeclaration","scope":12681,"src":"21373:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12669,"name":"uint256","nodeType":"ElementaryTypeName","src":"21373:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12672,"mutability":"mutable","name":"digest","nodeType":"VariableDeclaration","scope":12681,"src":"21393:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12671,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21393:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21372:36:15"},"returnParameters":{"id":12680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12675,"mutability":"mutable","name":"v","nodeType":"VariableDeclaration","scope":12681,"src":"21432:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":12674,"name":"uint8","nodeType":"ElementaryTypeName","src":"21432:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":12677,"mutability":"mutable","name":"r","nodeType":"VariableDeclaration","scope":12681,"src":"21441:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12676,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21441:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12679,"mutability":"mutable","name":"s","nodeType":"VariableDeclaration","scope":12681,"src":"21452:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12678,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21452:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21431:31:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12693,"nodeType":"FunctionDefinition","src":"21902:84:15","nodes":[],"documentation":{"id":12682,"nodeType":"StructuredDocumentation","src":"21469:428:15","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n If `--sender` is provided, the signer with provided address is used, otherwise,\n if exactly one signer is provided to the script, that signer is used.\n Raises error if signer passed through `--sender` does not match any unlocked signers or\n if `--sender` is not provided and not exactly one signer is passed to the script."},"functionSelector":"799cd333","implemented":false,"kind":"function","modifiers":[],"name":"sign","parameters":{"id":12685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12684,"mutability":"mutable","name":"digest","nodeType":"VariableDeclaration","scope":12693,"src":"21916:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12683,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21916:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21915:16:15"},"returnParameters":{"id":12692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12687,"mutability":"mutable","name":"v","nodeType":"VariableDeclaration","scope":12693,"src":"21955:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":12686,"name":"uint8","nodeType":"ElementaryTypeName","src":"21955:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":12689,"mutability":"mutable","name":"r","nodeType":"VariableDeclaration","scope":12693,"src":"21964:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12688,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21964:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12691,"mutability":"mutable","name":"s","nodeType":"VariableDeclaration","scope":12693,"src":"21975:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12690,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21975:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21954:31:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12707,"nodeType":"FunctionDefinition","src":"22163:100:15","nodes":[],"documentation":{"id":12694,"nodeType":"StructuredDocumentation","src":"21992:166:15","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n Raises error if none of the signers passed into the script have provided address."},"functionSelector":"8c1aa205","implemented":false,"kind":"function","modifiers":[],"name":"sign","parameters":{"id":12699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12696,"mutability":"mutable","name":"signer","nodeType":"VariableDeclaration","scope":12707,"src":"22177:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12695,"name":"address","nodeType":"ElementaryTypeName","src":"22177:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12698,"mutability":"mutable","name":"digest","nodeType":"VariableDeclaration","scope":12707,"src":"22193:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12697,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22193:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22176:32:15"},"returnParameters":{"id":12706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12701,"mutability":"mutable","name":"v","nodeType":"VariableDeclaration","scope":12707,"src":"22232:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":12700,"name":"uint8","nodeType":"ElementaryTypeName","src":"22232:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":12703,"mutability":"mutable","name":"r","nodeType":"VariableDeclaration","scope":12707,"src":"22241:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12702,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22241:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12705,"mutability":"mutable","name":"s","nodeType":"VariableDeclaration","scope":12707,"src":"22252:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12704,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22252:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22231:31:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12711,"nodeType":"FunctionDefinition","src":"22331:42:15","nodes":[],"documentation":{"id":12708,"nodeType":"StructuredDocumentation","src":"22269:57:15","text":"Starts recording all map SSTOREs for later retrieval."},"functionSelector":"3e9705c0","implemented":false,"kind":"function","modifiers":[],"name":"startMappingRecording","parameters":{"id":12709,"nodeType":"ParameterList","parameters":[],"src":"22361:2:15"},"returnParameters":{"id":12710,"nodeType":"ParameterList","parameters":[],"src":"22372:0:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12715,"nodeType":"FunctionDefinition","src":"22517:44:15","nodes":[],"documentation":{"id":12712,"nodeType":"StructuredDocumentation","src":"22379:133:15","text":"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order,\n along with the context of the calls"},"functionSelector":"cf22e3c9","implemented":false,"kind":"function","modifiers":[],"name":"startStateDiffRecording","parameters":{"id":12713,"nodeType":"ParameterList","parameters":[],"src":"22549:2:15"},"returnParameters":{"id":12714,"nodeType":"ParameterList","parameters":[],"src":"22560:0:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12722,"nodeType":"FunctionDefinition","src":"22669:92:15","nodes":[],"documentation":{"id":12716,"nodeType":"StructuredDocumentation","src":"22567:97:15","text":"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session."},"functionSelector":"aa5cf90e","implemented":false,"kind":"function","modifiers":[],"name":"stopAndReturnStateDiff","parameters":{"id":12717,"nodeType":"ParameterList","parameters":[],"src":"22700:2:15"},"returnParameters":{"id":12721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12720,"mutability":"mutable","name":"accountAccesses","nodeType":"VariableDeclaration","scope":12722,"src":"22721:38:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAccess_$12159_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.AccountAccess[]"},"typeName":{"baseType":{"id":12718,"name":"AccountAccess","nodeType":"UserDefinedTypeName","referencedDeclaration":12159,"src":"22721:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AccountAccess_$12159_storage_ptr","typeString":"struct VmSafe.AccountAccess"}},"id":12719,"nodeType":"ArrayTypeName","src":"22721:15:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAccess_$12159_storage_$dyn_storage_ptr","typeString":"struct VmSafe.AccountAccess[]"}},"visibility":"internal"}],"src":"22720:40:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12726,"nodeType":"FunctionDefinition","src":"22857:41:15","nodes":[],"documentation":{"id":12723,"nodeType":"StructuredDocumentation","src":"22767:85:15","text":"Stops recording all map SSTOREs for later retrieval and clears the recorded data."},"functionSelector":"0d4aae9b","implemented":false,"kind":"function","modifiers":[],"name":"stopMappingRecording","parameters":{"id":12724,"nodeType":"ParameterList","parameters":[],"src":"22886:2:15"},"returnParameters":{"id":12725,"nodeType":"ParameterList","parameters":[],"src":"22897:0:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12732,"nodeType":"FunctionDefinition","src":"23097:50:15","nodes":[],"documentation":{"id":12727,"nodeType":"StructuredDocumentation","src":"22941:151:15","text":"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine.\n `path` is relative to the project root."},"functionSelector":"48c3241f","implemented":false,"kind":"function","modifiers":[],"name":"closeFile","parameters":{"id":12730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12729,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","scope":12732,"src":"23116:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12728,"name":"string","nodeType":"ElementaryTypeName","src":"23116:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"23115:22:15"},"returnParameters":{"id":12731,"nodeType":"ParameterList","parameters":[],"src":"23146:0:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12742,"nodeType":"FunctionDefinition","src":"23462:93:15","nodes":[],"documentation":{"id":12733,"nodeType":"StructuredDocumentation","src":"23153:304:15","text":"Copies the contents of one file to another. This function will **overwrite** the contents of `to`.\n On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`.\n Both `from` and `to` are relative to the project root."},"functionSelector":"a54a87d8","implemented":false,"kind":"function","modifiers":[],"name":"copyFile","parameters":{"id":12738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12735,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":12742,"src":"23480:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12734,"name":"string","nodeType":"ElementaryTypeName","src":"23480:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12737,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":12742,"src":"23502:18:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12736,"name":"string","nodeType":"ElementaryTypeName","src":"23502:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"23479:42:15"},"returnParameters":{"id":12741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12740,"mutability":"mutable","name":"copied","nodeType":"VariableDeclaration","scope":12742,"src":"23540:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12739,"name":"uint64","nodeType":"ElementaryTypeName","src":"23540:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"23539:15:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12750,"nodeType":"FunctionDefinition","src":"23960:66:15","nodes":[],"documentation":{"id":12743,"nodeType":"StructuredDocumentation","src":"23561:394:15","text":"Creates a new, empty directory at the provided path.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - User lacks permissions to modify `path`.\n - A parent of the given path doesn't exist and `recursive` is false.\n - `path` already exists and `recursive` is false.\n `path` is relative to the project root."},"functionSelector":"168b64d3","implemented":false,"kind":"function","modifiers":[],"name":"createDir","parameters":{"id":12748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12745,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","scope":12750,"src":"23979:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12744,"name":"string","nodeType":"ElementaryTypeName","src":"23979:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12747,"mutability":"mutable","name":"recursive","nodeType":"VariableDeclaration","scope":12750,"src":"24001:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12746,"name":"bool","nodeType":"ElementaryTypeName","src":"24001:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"23978:38:15"},"returnParameters":{"id":12749,"nodeType":"ParameterList","parameters":[],"src":"24025:0:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12758,"nodeType":"FunctionDefinition","src":"24121:69:15","nodes":[],"documentation":{"id":12751,"nodeType":"StructuredDocumentation","src":"24032:84:15","text":"Returns true if the given path points to an existing entity, else returns false."},"functionSelector":"261a323e","implemented":false,"kind":"function","modifiers":[],"name":"exists","parameters":{"id":12754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12753,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","scope":12758,"src":"24137:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12752,"name":"string","nodeType":"ElementaryTypeName","src":"24137:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"24136:22:15"},"returnParameters":{"id":12757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12756,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":12758,"src":"24177:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12755,"name":"bool","nodeType":"ElementaryTypeName","src":"24177:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"24176:13:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12767,"nodeType":"FunctionDefinition","src":"24255:84:15","nodes":[],"documentation":{"id":12759,"nodeType":"StructuredDocumentation","src":"24196:54:15","text":"Performs a foreign function call via the terminal."},"functionSelector":"89160467","implemented":false,"kind":"function","modifiers":[],"name":"ffi","parameters":{"id":12763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12762,"mutability":"mutable","name":"commandInput","nodeType":"VariableDeclaration","scope":12767,"src":"24268:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":12760,"name":"string","nodeType":"ElementaryTypeName","src":"24268:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":12761,"nodeType":"ArrayTypeName","src":"24268:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"24267:32:15"},"returnParameters":{"id":12766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12765,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":12767,"src":"24318:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":12764,"name":"bytes","nodeType":"ElementaryTypeName","src":"24318:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"24317:21:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12775,"nodeType":"FunctionDefinition","src":"24438:93:15","nodes":[],"documentation":{"id":12768,"nodeType":"StructuredDocumentation","src":"24345:88:15","text":"Given a path, query the file system to get information about a file, directory, etc."},"functionSelector":"af368a08","implemented":false,"kind":"function","modifiers":[],"name":"fsMetadata","parameters":{"id":12771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12770,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","scope":12775,"src":"24458:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12769,"name":"string","nodeType":"ElementaryTypeName","src":"24458:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"24457:22:15"},"returnParameters":{"id":12774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12773,"mutability":"mutable","name":"metadata","nodeType":"VariableDeclaration","scope":12775,"src":"24503:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FsMetadata_$12110_memory_ptr","typeString":"struct VmSafe.FsMetadata"},"typeName":{"id":12772,"name":"FsMetadata","nodeType":"UserDefinedTypeName","referencedDeclaration":12110,"src":"24503:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_FsMetadata_$12110_storage_ptr","typeString":"struct VmSafe.FsMetadata"}},"visibility":"internal"}],"src":"24502:28:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12783,"nodeType":"FunctionDefinition","src":"24769:101:15","nodes":[],"documentation":{"id":12776,"nodeType":"StructuredDocumentation","src":"24537:227:15","text":"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"8d1cc925","implemented":false,"kind":"function","modifiers":[],"name":"getCode","parameters":{"id":12779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12778,"mutability":"mutable","name":"artifactPath","nodeType":"VariableDeclaration","scope":12783,"src":"24786:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12777,"name":"string","nodeType":"ElementaryTypeName","src":"24786:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"24785:30:15"},"returnParameters":{"id":12782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12781,"mutability":"mutable","name":"creationBytecode","nodeType":"VariableDeclaration","scope":12783,"src":"24839:29:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":12780,"name":"bytes","nodeType":"ElementaryTypeName","src":"24839:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"24838:31:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12791,"nodeType":"FunctionDefinition","src":"25108:108:15","nodes":[],"documentation":{"id":12784,"nodeType":"StructuredDocumentation","src":"24876:227:15","text":"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"3ebf73b4","implemented":false,"kind":"function","modifiers":[],"name":"getDeployedCode","parameters":{"id":12787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12786,"mutability":"mutable","name":"artifactPath","nodeType":"VariableDeclaration","scope":12791,"src":"25133:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12785,"name":"string","nodeType":"ElementaryTypeName","src":"25133:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25132:30:15"},"returnParameters":{"id":12790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12789,"mutability":"mutable","name":"runtimeBytecode","nodeType":"VariableDeclaration","scope":12791,"src":"25186:28:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":12788,"name":"bytes","nodeType":"ElementaryTypeName","src":"25186:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"25185:30:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12799,"nodeType":"FunctionDefinition","src":"25322:68:15","nodes":[],"documentation":{"id":12792,"nodeType":"StructuredDocumentation","src":"25222:95:15","text":"Returns true if the path exists on disk and is pointing at a directory, else returns false."},"functionSelector":"7d15d019","implemented":false,"kind":"function","modifiers":[],"name":"isDir","parameters":{"id":12795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12794,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","scope":12799,"src":"25337:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12793,"name":"string","nodeType":"ElementaryTypeName","src":"25337:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25336:22:15"},"returnParameters":{"id":12798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12797,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":12799,"src":"25377:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12796,"name":"bool","nodeType":"ElementaryTypeName","src":"25377:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"25376:13:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12807,"nodeType":"FunctionDefinition","src":"25499:69:15","nodes":[],"documentation":{"id":12800,"nodeType":"StructuredDocumentation","src":"25396:98:15","text":"Returns true if the path exists on disk and is pointing at a regular file, else returns false."},"functionSelector":"e0eb04d4","implemented":false,"kind":"function","modifiers":[],"name":"isFile","parameters":{"id":12803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12802,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","scope":12807,"src":"25515:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12801,"name":"string","nodeType":"ElementaryTypeName","src":"25515:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25514:22:15"},"returnParameters":{"id":12806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12805,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":12807,"src":"25555:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12804,"name":"bool","nodeType":"ElementaryTypeName","src":"25555:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"25554:13:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12813,"nodeType":"FunctionDefinition","src":"25624:66:15","nodes":[],"documentation":{"id":12808,"nodeType":"StructuredDocumentation","src":"25574:45:15","text":"Get the path of the current project root."},"functionSelector":"d930a0e6","implemented":false,"kind":"function","modifiers":[],"name":"projectRoot","parameters":{"id":12809,"nodeType":"ParameterList","parameters":[],"src":"25644:2:15"},"returnParameters":{"id":12812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12811,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","scope":12813,"src":"25670:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12810,"name":"string","nodeType":"ElementaryTypeName","src":"25670:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25669:20:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12821,"nodeType":"FunctionDefinition","src":"25757:83:15","nodes":[],"documentation":{"id":12814,"nodeType":"StructuredDocumentation","src":"25696:56:15","text":"Prompts the user for a string value in the terminal."},"functionSelector":"47eaf474","implemented":false,"kind":"function","modifiers":[],"name":"prompt","parameters":{"id":12817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12816,"mutability":"mutable","name":"promptText","nodeType":"VariableDeclaration","scope":12821,"src":"25773:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12815,"name":"string","nodeType":"ElementaryTypeName","src":"25773:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25772:28:15"},"returnParameters":{"id":12820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12819,"mutability":"mutable","name":"input","nodeType":"VariableDeclaration","scope":12821,"src":"25819:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12818,"name":"string","nodeType":"ElementaryTypeName","src":"25819:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25818:21:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12829,"nodeType":"FunctionDefinition","src":"25903:78:15","nodes":[],"documentation":{"id":12822,"nodeType":"StructuredDocumentation","src":"25846:52:15","text":"Prompts the user for an address in the terminal."},"functionSelector":"62ee05f4","implemented":false,"kind":"function","modifiers":[],"name":"promptAddress","parameters":{"id":12825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12824,"mutability":"mutable","name":"promptText","nodeType":"VariableDeclaration","scope":12829,"src":"25926:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12823,"name":"string","nodeType":"ElementaryTypeName","src":"25926:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25925:28:15"},"returnParameters":{"id":12828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12827,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":12829,"src":"25972:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12826,"name":"address","nodeType":"ElementaryTypeName","src":"25972:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"25971:9:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12837,"nodeType":"FunctionDefinition","src":"26055:89:15","nodes":[],"documentation":{"id":12830,"nodeType":"StructuredDocumentation","src":"25987:63:15","text":"Prompts the user for a hidden string value in the terminal."},"functionSelector":"1e279d41","implemented":false,"kind":"function","modifiers":[],"name":"promptSecret","parameters":{"id":12833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12832,"mutability":"mutable","name":"promptText","nodeType":"VariableDeclaration","scope":12837,"src":"26077:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12831,"name":"string","nodeType":"ElementaryTypeName","src":"26077:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26076:28:15"},"returnParameters":{"id":12836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12835,"mutability":"mutable","name":"input","nodeType":"VariableDeclaration","scope":12837,"src":"26123:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12834,"name":"string","nodeType":"ElementaryTypeName","src":"26123:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26122:21:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12845,"nodeType":"FunctionDefinition","src":"26204:75:15","nodes":[],"documentation":{"id":12838,"nodeType":"StructuredDocumentation","src":"26150:49:15","text":"Prompts the user for uint256 in the terminal."},"functionSelector":"652fd489","implemented":false,"kind":"function","modifiers":[],"name":"promptUint","parameters":{"id":12841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12840,"mutability":"mutable","name":"promptText","nodeType":"VariableDeclaration","scope":12845,"src":"26224:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12839,"name":"string","nodeType":"ElementaryTypeName","src":"26224:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26223:28:15"},"returnParameters":{"id":12844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12843,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":12845,"src":"26270:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12842,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:9:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12854,"nodeType":"FunctionDefinition","src":"26527:89:15","nodes":[],"documentation":{"id":12846,"nodeType":"StructuredDocumentation","src":"26285:237:15","text":"Reads the directory at the given path recursively, up to `maxDepth`.\n `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned.\n Follows symbolic links if `followLinks` is true."},"functionSelector":"c4bc59e0","implemented":false,"kind":"function","modifiers":[],"name":"readDir","parameters":{"id":12849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12848,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","scope":12854,"src":"26544:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12847,"name":"string","nodeType":"ElementaryTypeName","src":"26544:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26543:22:15"},"returnParameters":{"id":12853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12852,"mutability":"mutable","name":"entries","nodeType":"VariableDeclaration","scope":12854,"src":"26589:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$12095_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":12850,"name":"DirEntry","nodeType":"UserDefinedTypeName","referencedDeclaration":12095,"src":"26589:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$12095_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":12851,"nodeType":"ArrayTypeName","src":"26589:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$12095_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"26588:27:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12865,"nodeType":"FunctionDefinition","src":"26653:106:15","nodes":[],"documentation":{"id":12855,"nodeType":"StructuredDocumentation","src":"26622:26:15","text":"See `readDir(string)`."},"functionSelector":"1497876c","implemented":false,"kind":"function","modifiers":[],"name":"readDir","parameters":{"id":12860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12857,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","scope":12865,"src":"26670:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12856,"name":"string","nodeType":"ElementaryTypeName","src":"26670:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12859,"mutability":"mutable","name":"maxDepth","nodeType":"VariableDeclaration","scope":12865,"src":"26692:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12858,"name":"uint64","nodeType":"ElementaryTypeName","src":"26692:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"26669:39:15"},"returnParameters":{"id":12864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12863,"mutability":"mutable","name":"entries","nodeType":"VariableDeclaration","scope":12865,"src":"26732:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$12095_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":12861,"name":"DirEntry","nodeType":"UserDefinedTypeName","referencedDeclaration":12095,"src":"26732:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$12095_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":12862,"nodeType":"ArrayTypeName","src":"26732:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$12095_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"26731:27:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12878,"nodeType":"FunctionDefinition","src":"26796:148:15","nodes":[],"documentation":{"id":12866,"nodeType":"StructuredDocumentation","src":"26765:26:15","text":"See `readDir(string)`."},"functionSelector":"8102d70d","implemented":false,"kind":"function","modifiers":[],"name":"readDir","parameters":{"id":12873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12868,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","scope":12878,"src":"26813:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12867,"name":"string","nodeType":"ElementaryTypeName","src":"26813:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12870,"mutability":"mutable","name":"maxDepth","nodeType":"VariableDeclaration","scope":12878,"src":"26835:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12869,"name":"uint64","nodeType":"ElementaryTypeName","src":"26835:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":12872,"mutability":"mutable","name":"followLinks","nodeType":"VariableDeclaration","scope":12878,"src":"26852:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12871,"name":"bool","nodeType":"ElementaryTypeName","src":"26852:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"26812:57:15"},"returnParameters":{"id":12877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12876,"mutability":"mutable","name":"entries","nodeType":"VariableDeclaration","scope":12878,"src":"26917:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$12095_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":12874,"name":"DirEntry","nodeType":"UserDefinedTypeName","referencedDeclaration":12095,"src":"26917:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$12095_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":12875,"nodeType":"ArrayTypeName","src":"26917:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$12095_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"26916:27:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12886,"nodeType":"FunctionDefinition","src":"27042:83:15","nodes":[],"documentation":{"id":12879,"nodeType":"StructuredDocumentation","src":"26950:87:15","text":"Reads the entire content of file to string. `path` is relative to the project root."},"functionSelector":"60f9bb11","implemented":false,"kind":"function","modifiers":[],"name":"readFile","parameters":{"id":12882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12881,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","scope":12886,"src":"27060:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12880,"name":"string","nodeType":"ElementaryTypeName","src":"27060:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27059:22:15"},"returnParameters":{"id":12885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12884,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":12886,"src":"27105:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12883,"name":"string","nodeType":"ElementaryTypeName","src":"27105:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27104:20:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12894,"nodeType":"FunctionDefinition","src":"27223:88:15","nodes":[],"documentation":{"id":12887,"nodeType":"StructuredDocumentation","src":"27131:87:15","text":"Reads the entire content of file as binary. `path` is relative to the project root."},"functionSelector":"16ed7bc4","implemented":false,"kind":"function","modifiers":[],"name":"readFileBinary","parameters":{"id":12890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12889,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","scope":12894,"src":"27247:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12888,"name":"string","nodeType":"ElementaryTypeName","src":"27247:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27246:22:15"},"returnParameters":{"id":12893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12892,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":12894,"src":"27292:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":12891,"name":"bytes","nodeType":"ElementaryTypeName","src":"27292:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"27291:19:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12902,"nodeType":"FunctionDefinition","src":"27360:83:15","nodes":[],"documentation":{"id":12895,"nodeType":"StructuredDocumentation","src":"27317:38:15","text":"Reads next line of file to string."},"functionSelector":"70f55728","implemented":false,"kind":"function","modifiers":[],"name":"readLine","parameters":{"id":12898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12897,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","scope":12902,"src":"27378:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12896,"name":"string","nodeType":"ElementaryTypeName","src":"27378:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27377:22:15"},"returnParameters":{"id":12901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12900,"mutability":"mutable","name":"line","nodeType":"VariableDeclaration","scope":12902,"src":"27423:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12899,"name":"string","nodeType":"ElementaryTypeName","src":"27423:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27422:20:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12910,"nodeType":"FunctionDefinition","src":"27702:93:15","nodes":[],"documentation":{"id":12903,"nodeType":"StructuredDocumentation","src":"27449:248:15","text":"Reads a symbolic link, returning the path that the link points to.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` is not a symbolic link.\n - `path` does not exist."},"functionSelector":"9f5684a2","implemented":false,"kind":"function","modifiers":[],"name":"readLink","parameters":{"id":12906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12905,"mutability":"mutable","name":"linkPath","nodeType":"VariableDeclaration","scope":12910,"src":"27720:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12904,"name":"string","nodeType":"ElementaryTypeName","src":"27720:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27719:26:15"},"returnParameters":{"id":12909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12908,"mutability":"mutable","name":"targetPath","nodeType":"VariableDeclaration","scope":12910,"src":"27769:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12907,"name":"string","nodeType":"ElementaryTypeName","src":"27769:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27768:26:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12918,"nodeType":"FunctionDefinition","src":"28185:66:15","nodes":[],"documentation":{"id":12911,"nodeType":"StructuredDocumentation","src":"27801:379:15","text":"Removes a directory at the provided path.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` doesn't exist.\n - `path` isn't a directory.\n - User lacks permissions to modify `path`.\n - The directory is not empty and `recursive` is false.\n `path` is relative to the project root."},"functionSelector":"45c62011","implemented":false,"kind":"function","modifiers":[],"name":"removeDir","parameters":{"id":12916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12913,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","scope":12918,"src":"28204:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12912,"name":"string","nodeType":"ElementaryTypeName","src":"28204:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12915,"mutability":"mutable","name":"recursive","nodeType":"VariableDeclaration","scope":12918,"src":"28226:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12914,"name":"bool","nodeType":"ElementaryTypeName","src":"28226:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28203:38:15"},"returnParameters":{"id":12917,"nodeType":"ParameterList","parameters":[],"src":"28250:0:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12924,"nodeType":"FunctionDefinition","src":"28584:51:15","nodes":[],"documentation":{"id":12919,"nodeType":"StructuredDocumentation","src":"28257:322:15","text":"Removes a file from the filesystem.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` points to a directory.\n - The file doesn't exist.\n - The user lacks permissions to remove the file.\n `path` is relative to the project root."},"functionSelector":"f1afe04d","implemented":false,"kind":"function","modifiers":[],"name":"removeFile","parameters":{"id":12922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12921,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","scope":12924,"src":"28604:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12920,"name":"string","nodeType":"ElementaryTypeName","src":"28604:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28603:22:15"},"returnParameters":{"id":12923,"nodeType":"ParameterList","parameters":[],"src":"28634:0:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12933,"nodeType":"FunctionDefinition","src":"28742:91:15","nodes":[],"documentation":{"id":12925,"nodeType":"StructuredDocumentation","src":"28641:96:15","text":"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr."},"functionSelector":"f45c1ce7","implemented":false,"kind":"function","modifiers":[],"name":"tryFfi","parameters":{"id":12929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12928,"mutability":"mutable","name":"commandInput","nodeType":"VariableDeclaration","scope":12933,"src":"28758:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":12926,"name":"string","nodeType":"ElementaryTypeName","src":"28758:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":12927,"nodeType":"ArrayTypeName","src":"28758:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"28757:32:15"},"returnParameters":{"id":12932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12931,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":12933,"src":"28808:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FfiResult_$12126_memory_ptr","typeString":"struct VmSafe.FfiResult"},"typeName":{"id":12930,"name":"FfiResult","nodeType":"UserDefinedTypeName","referencedDeclaration":12126,"src":"28808:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_FfiResult_$12126_storage_ptr","typeString":"struct VmSafe.FfiResult"}},"visibility":"internal"}],"src":"28807:25:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12939,"nodeType":"FunctionDefinition","src":"28898:60:15","nodes":[],"documentation":{"id":12934,"nodeType":"StructuredDocumentation","src":"28839:54:15","text":"Returns the time since unix epoch in milliseconds."},"functionSelector":"625387dc","implemented":false,"kind":"function","modifiers":[],"name":"unixTime","parameters":{"id":12935,"nodeType":"ParameterList","parameters":[],"src":"28915:2:15"},"returnParameters":{"id":12938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12937,"mutability":"mutable","name":"milliseconds","nodeType":"VariableDeclaration","scope":12939,"src":"28936:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12936,"name":"uint256","nodeType":"ElementaryTypeName","src":"28936:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28935:22:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12947,"nodeType":"FunctionDefinition","src":"29127:72:15","nodes":[],"documentation":{"id":12940,"nodeType":"StructuredDocumentation","src":"28964:158:15","text":"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does.\n `path` is relative to the project root."},"functionSelector":"897e0a97","implemented":false,"kind":"function","modifiers":[],"name":"writeFile","parameters":{"id":12945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12942,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","scope":12947,"src":"29146:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12941,"name":"string","nodeType":"ElementaryTypeName","src":"29146:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12944,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":12947,"src":"29168:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12943,"name":"string","nodeType":"ElementaryTypeName","src":"29168:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"29145:44:15"},"returnParameters":{"id":12946,"nodeType":"ParameterList","parameters":[],"src":"29198:0:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12955,"nodeType":"FunctionDefinition","src":"29377:77:15","nodes":[],"documentation":{"id":12948,"nodeType":"StructuredDocumentation","src":"29205:167:15","text":"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does.\n `path` is relative to the project root."},"functionSelector":"1f21fc80","implemented":false,"kind":"function","modifiers":[],"name":"writeFileBinary","parameters":{"id":12953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12950,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","scope":12955,"src":"29402:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12949,"name":"string","nodeType":"ElementaryTypeName","src":"29402:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12952,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":12955,"src":"29424:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":12951,"name":"bytes","nodeType":"ElementaryTypeName","src":"29424:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"29401:43:15"},"returnParameters":{"id":12954,"nodeType":"ParameterList","parameters":[],"src":"29453:0:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12963,"nodeType":"FunctionDefinition","src":"29575:72:15","nodes":[],"documentation":{"id":12956,"nodeType":"StructuredDocumentation","src":"29460:110:15","text":"Writes line to file, creating a file if it does not exist.\n `path` is relative to the project root."},"functionSelector":"619d897f","implemented":false,"kind":"function","modifiers":[],"name":"writeLine","parameters":{"id":12961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12958,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","scope":12963,"src":"29594:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12957,"name":"string","nodeType":"ElementaryTypeName","src":"29594:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12960,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":12963,"src":"29616:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12959,"name":"string","nodeType":"ElementaryTypeName","src":"29616:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"29593:44:15"},"returnParameters":{"id":12962,"nodeType":"ParameterList","parameters":[],"src":"29646:0:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12973,"nodeType":"FunctionDefinition","src":"29840:91:15","nodes":[],"documentation":{"id":12964,"nodeType":"StructuredDocumentation","src":"29684:151:15","text":"Checks if `key` exists in a JSON object\n `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions."},"functionSelector":"528a683c","implemented":false,"kind":"function","modifiers":[],"name":"keyExists","parameters":{"id":12969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12966,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","scope":12973,"src":"29859:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12965,"name":"string","nodeType":"ElementaryTypeName","src":"29859:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12968,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":12973,"src":"29881:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12967,"name":"string","nodeType":"ElementaryTypeName","src":"29881:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"29858:43:15"},"returnParameters":{"id":12972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12971,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":12973,"src":"29925:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12970,"name":"bool","nodeType":"ElementaryTypeName","src":"29925:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"29924:6:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12983,"nodeType":"FunctionDefinition","src":"29986:95:15","nodes":[],"documentation":{"id":12974,"nodeType":"StructuredDocumentation","src":"29937:44:15","text":"Checks if `key` exists in a JSON object."},"functionSelector":"db4235f6","implemented":false,"kind":"function","modifiers":[],"name":"keyExistsJson","parameters":{"id":12979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12976,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","scope":12983,"src":"30009:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12975,"name":"string","nodeType":"ElementaryTypeName","src":"30009:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12978,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":12983,"src":"30031:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12977,"name":"string","nodeType":"ElementaryTypeName","src":"30031:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30008:43:15"},"returnParameters":{"id":12982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12981,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":12983,"src":"30075:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12980,"name":"bool","nodeType":"ElementaryTypeName","src":"30075:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"30074:6:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12993,"nodeType":"FunctionDefinition","src":"30162:101:15","nodes":[],"documentation":{"id":12984,"nodeType":"StructuredDocumentation","src":"30087:70:15","text":"Parses a string of JSON data at `key` and coerces it to `address`."},"functionSelector":"1e19e657","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonAddress","parameters":{"id":12989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12986,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","scope":12993,"src":"30188:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12985,"name":"string","nodeType":"ElementaryTypeName","src":"30188:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12988,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":12993,"src":"30210:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12987,"name":"string","nodeType":"ElementaryTypeName","src":"30210:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30187:43:15"},"returnParameters":{"id":12992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12991,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":12993,"src":"30254:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12990,"name":"address","nodeType":"ElementaryTypeName","src":"30254:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"30253:9:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13004,"nodeType":"FunctionDefinition","src":"30346:139:15","nodes":[],"documentation":{"id":12994,"nodeType":"StructuredDocumentation","src":"30269:72:15","text":"Parses a string of JSON data at `key` and coerces it to `address[]`."},"functionSelector":"2fce7883","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonAddressArray","parameters":{"id":12999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12996,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","scope":13004,"src":"30377:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12995,"name":"string","nodeType":"ElementaryTypeName","src":"30377:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12998,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":13004,"src":"30399:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12997,"name":"string","nodeType":"ElementaryTypeName","src":"30399:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30376:43:15"},"returnParameters":{"id":13003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13002,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":13004,"src":"30467:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13000,"name":"address","nodeType":"ElementaryTypeName","src":"30467:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13001,"nodeType":"ArrayTypeName","src":"30467:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"30466:18:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13014,"nodeType":"FunctionDefinition","src":"30563:95:15","nodes":[],"documentation":{"id":13005,"nodeType":"StructuredDocumentation","src":"30491:67:15","text":"Parses a string of JSON data at `key` and coerces it to `bool`."},"functionSelector":"9f86dc91","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBool","parameters":{"id":13010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13007,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","scope":13014,"src":"30586:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13006,"name":"string","nodeType":"ElementaryTypeName","src":"30586:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13009,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":13014,"src":"30608:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13008,"name":"string","nodeType":"ElementaryTypeName","src":"30608:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30585:43:15"},"returnParameters":{"id":13013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13012,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":13014,"src":"30652:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13011,"name":"bool","nodeType":"ElementaryTypeName","src":"30652:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"30651:6:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13025,"nodeType":"FunctionDefinition","src":"30738:109:15","nodes":[],"documentation":{"id":13015,"nodeType":"StructuredDocumentation","src":"30664:69:15","text":"Parses a string of JSON data at `key` and coerces it to `bool[]`."},"functionSelector":"91f3b94f","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBoolArray","parameters":{"id":13020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13017,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","scope":13025,"src":"30766:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13016,"name":"string","nodeType":"ElementaryTypeName","src":"30766:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13019,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":13025,"src":"30788:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13018,"name":"string","nodeType":"ElementaryTypeName","src":"30788:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30765:43:15"},"returnParameters":{"id":13024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13023,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":13025,"src":"30832:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":13021,"name":"bool","nodeType":"ElementaryTypeName","src":"30832:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":13022,"nodeType":"ArrayTypeName","src":"30832:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"30831:15:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13035,"nodeType":"FunctionDefinition","src":"30926:104:15","nodes":[],"documentation":{"id":13026,"nodeType":"StructuredDocumentation","src":"30853:68:15","text":"Parses a string of JSON data at `key` and coerces it to `bytes`."},"functionSelector":"fd921be8","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes","parameters":{"id":13031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13028,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","scope":13035,"src":"30950:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13027,"name":"string","nodeType":"ElementaryTypeName","src":"30950:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13030,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":13035,"src":"30972:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13029,"name":"string","nodeType":"ElementaryTypeName","src":"30972:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30949:43:15"},"returnParameters":{"id":13034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13033,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":13035,"src":"31016:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13032,"name":"bytes","nodeType":"ElementaryTypeName","src":"31016:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"31015:14:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13045,"nodeType":"FunctionDefinition","src":"31111:101:15","nodes":[],"documentation":{"id":13036,"nodeType":"StructuredDocumentation","src":"31036:70:15","text":"Parses a string of JSON data at `key` and coerces it to `bytes32`."},"functionSelector":"1777e59d","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes32","parameters":{"id":13041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13038,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","scope":13045,"src":"31137:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13037,"name":"string","nodeType":"ElementaryTypeName","src":"31137:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13040,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":13045,"src":"31159:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13039,"name":"string","nodeType":"ElementaryTypeName","src":"31159:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31136:43:15"},"returnParameters":{"id":13044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13043,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":13045,"src":"31203:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13042,"name":"bytes32","nodeType":"ElementaryTypeName","src":"31203:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"31202:9:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13056,"nodeType":"FunctionDefinition","src":"31295:139:15","nodes":[],"documentation":{"id":13046,"nodeType":"StructuredDocumentation","src":"31218:72:15","text":"Parses a string of JSON data at `key` and coerces it to `bytes32[]`."},"functionSelector":"91c75bc3","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes32Array","parameters":{"id":13051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13048,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","scope":13056,"src":"31326:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13047,"name":"string","nodeType":"ElementaryTypeName","src":"31326:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13050,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":13056,"src":"31348:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13049,"name":"string","nodeType":"ElementaryTypeName","src":"31348:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31325:43:15"},"returnParameters":{"id":13055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13054,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":13056,"src":"31416:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13052,"name":"bytes32","nodeType":"ElementaryTypeName","src":"31416:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13053,"nodeType":"ArrayTypeName","src":"31416:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"31415:18:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13067,"nodeType":"FunctionDefinition","src":"31515:111:15","nodes":[],"documentation":{"id":13057,"nodeType":"StructuredDocumentation","src":"31440:70:15","text":"Parses a string of JSON data at `key` and coerces it to `bytes[]`."},"functionSelector":"6631aa99","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytesArray","parameters":{"id":13062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13059,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","scope":13067,"src":"31544:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13058,"name":"string","nodeType":"ElementaryTypeName","src":"31544:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13061,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":13067,"src":"31566:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13060,"name":"string","nodeType":"ElementaryTypeName","src":"31566:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31543:43:15"},"returnParameters":{"id":13066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13065,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":13067,"src":"31610:14:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":13063,"name":"bytes","nodeType":"ElementaryTypeName","src":"31610:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":13064,"nodeType":"ArrayTypeName","src":"31610:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"31609:16:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13077,"nodeType":"FunctionDefinition","src":"31706:96:15","nodes":[],"documentation":{"id":13068,"nodeType":"StructuredDocumentation","src":"31632:69:15","text":"Parses a string of JSON data at `key` and coerces it to `int256`."},"functionSelector":"7b048ccd","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonInt","parameters":{"id":13073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13070,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","scope":13077,"src":"31728:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13069,"name":"string","nodeType":"ElementaryTypeName","src":"31728:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13072,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":13077,"src":"31750:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13071,"name":"string","nodeType":"ElementaryTypeName","src":"31750:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31727:43:15"},"returnParameters":{"id":13076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13075,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":13077,"src":"31794:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13074,"name":"int256","nodeType":"ElementaryTypeName","src":"31794:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31793:8:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13088,"nodeType":"FunctionDefinition","src":"31884:110:15","nodes":[],"documentation":{"id":13078,"nodeType":"StructuredDocumentation","src":"31808:71:15","text":"Parses a string of JSON data at `key` and coerces it to `int256[]`."},"functionSelector":"9983c28a","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonIntArray","parameters":{"id":13083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13080,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","scope":13088,"src":"31911:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13079,"name":"string","nodeType":"ElementaryTypeName","src":"31911:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13082,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":13088,"src":"31933:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13081,"name":"string","nodeType":"ElementaryTypeName","src":"31933:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31910:43:15"},"returnParameters":{"id":13087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13086,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":13088,"src":"31977:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":13084,"name":"int256","nodeType":"ElementaryTypeName","src":"31977:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":13085,"nodeType":"ArrayTypeName","src":"31977:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"31976:17:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13099,"nodeType":"FunctionDefinition","src":"32059:111:15","nodes":[],"documentation":{"id":13089,"nodeType":"StructuredDocumentation","src":"32000:54:15","text":"Returns an array of all the keys in a JSON object."},"functionSelector":"213e4198","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonKeys","parameters":{"id":13094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13091,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","scope":13099,"src":"32082:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13090,"name":"string","nodeType":"ElementaryTypeName","src":"32082:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13093,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":13099,"src":"32104:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13092,"name":"string","nodeType":"ElementaryTypeName","src":"32104:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32081:43:15"},"returnParameters":{"id":13098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13097,"mutability":"mutable","name":"keys","nodeType":"VariableDeclaration","scope":13099,"src":"32148:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13095,"name":"string","nodeType":"ElementaryTypeName","src":"32148:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13096,"nodeType":"ArrayTypeName","src":"32148:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"32147:22:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13109,"nodeType":"FunctionDefinition","src":"32250:106:15","nodes":[],"documentation":{"id":13100,"nodeType":"StructuredDocumentation","src":"32176:69:15","text":"Parses a string of JSON data at `key` and coerces it to `string`."},"functionSelector":"49c4fac8","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonString","parameters":{"id":13105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13102,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","scope":13109,"src":"32275:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13101,"name":"string","nodeType":"ElementaryTypeName","src":"32275:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13104,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":13109,"src":"32297:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13103,"name":"string","nodeType":"ElementaryTypeName","src":"32297:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32274:43:15"},"returnParameters":{"id":13108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13107,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":13109,"src":"32341:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13106,"name":"string","nodeType":"ElementaryTypeName","src":"32341:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32340:15:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13120,"nodeType":"FunctionDefinition","src":"32438:113:15","nodes":[],"documentation":{"id":13110,"nodeType":"StructuredDocumentation","src":"32362:71:15","text":"Parses a string of JSON data at `key` and coerces it to `string[]`."},"functionSelector":"498fdcf4","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonStringArray","parameters":{"id":13115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13112,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","scope":13120,"src":"32468:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13111,"name":"string","nodeType":"ElementaryTypeName","src":"32468:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13114,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":13120,"src":"32490:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13113,"name":"string","nodeType":"ElementaryTypeName","src":"32490:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32467:43:15"},"returnParameters":{"id":13119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13118,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":13120,"src":"32534:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13116,"name":"string","nodeType":"ElementaryTypeName","src":"32534:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13117,"nodeType":"ArrayTypeName","src":"32534:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"32533:17:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13130,"nodeType":"FunctionDefinition","src":"32632:98:15","nodes":[],"documentation":{"id":13121,"nodeType":"StructuredDocumentation","src":"32557:70:15","text":"Parses a string of JSON data at `key` and coerces it to `uint256`."},"functionSelector":"addde2b6","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonUint","parameters":{"id":13126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13123,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","scope":13130,"src":"32655:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13122,"name":"string","nodeType":"ElementaryTypeName","src":"32655:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13125,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":13130,"src":"32677:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13124,"name":"string","nodeType":"ElementaryTypeName","src":"32677:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32654:43:15"},"returnParameters":{"id":13129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13128,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":13130,"src":"32721:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13127,"name":"uint256","nodeType":"ElementaryTypeName","src":"32721:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"32720:9:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13141,"nodeType":"FunctionDefinition","src":"32813:112:15","nodes":[],"documentation":{"id":13131,"nodeType":"StructuredDocumentation","src":"32736:72:15","text":"Parses a string of JSON data at `key` and coerces it to `uint256[]`."},"functionSelector":"522074ab","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonUintArray","parameters":{"id":13136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13133,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","scope":13141,"src":"32841:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13132,"name":"string","nodeType":"ElementaryTypeName","src":"32841:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13135,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":13141,"src":"32863:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13134,"name":"string","nodeType":"ElementaryTypeName","src":"32863:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32840:43:15"},"returnParameters":{"id":13140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13139,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":13141,"src":"32907:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":13137,"name":"uint256","nodeType":"ElementaryTypeName","src":"32907:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":13138,"nodeType":"ArrayTypeName","src":"32907:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"32906:18:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13149,"nodeType":"FunctionDefinition","src":"32966:93:15","nodes":[],"documentation":{"id":13142,"nodeType":"StructuredDocumentation","src":"32931:30:15","text":"ABI-encodes a JSON object."},"functionSelector":"6a82600a","implemented":false,"kind":"function","modifiers":[],"name":"parseJson","parameters":{"id":13145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13144,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","scope":13149,"src":"32985:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13143,"name":"string","nodeType":"ElementaryTypeName","src":"32985:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32984:22:15"},"returnParameters":{"id":13148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13147,"mutability":"mutable","name":"abiEncodedData","nodeType":"VariableDeclaration","scope":13149,"src":"33030:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13146,"name":"bytes","nodeType":"ElementaryTypeName","src":"33030:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"33029:29:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13159,"nodeType":"FunctionDefinition","src":"33109:114:15","nodes":[],"documentation":{"id":13150,"nodeType":"StructuredDocumentation","src":"33065:39:15","text":"ABI-encodes a JSON object at `key`."},"functionSelector":"85940ef1","implemented":false,"kind":"function","modifiers":[],"name":"parseJson","parameters":{"id":13155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13152,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","scope":13159,"src":"33128:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13151,"name":"string","nodeType":"ElementaryTypeName","src":"33128:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13154,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":13159,"src":"33150:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13153,"name":"string","nodeType":"ElementaryTypeName","src":"33150:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33127:43:15"},"returnParameters":{"id":13158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13157,"mutability":"mutable","name":"abiEncodedData","nodeType":"VariableDeclaration","scope":13159,"src":"33194:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13156,"name":"bytes","nodeType":"ElementaryTypeName","src":"33194:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"33193:29:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13171,"nodeType":"FunctionDefinition","src":"33258:148:15","nodes":[],"documentation":{"id":13160,"nodeType":"StructuredDocumentation","src":"33229:24:15","text":"See `serializeJson`."},"functionSelector":"972c6062","implemented":false,"kind":"function","modifiers":[],"name":"serializeAddress","parameters":{"id":13167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13162,"mutability":"mutable","name":"objectKey","nodeType":"VariableDeclaration","scope":13171,"src":"33284:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13161,"name":"string","nodeType":"ElementaryTypeName","src":"33284:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13164,"mutability":"mutable","name":"valueKey","nodeType":"VariableDeclaration","scope":13171,"src":"33311:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13163,"name":"string","nodeType":"ElementaryTypeName","src":"33311:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13166,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":13171,"src":"33337:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13165,"name":"address","nodeType":"ElementaryTypeName","src":"33337:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"33283:68:15"},"returnParameters":{"id":13170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13169,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","scope":13171,"src":"33386:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13168,"name":"string","nodeType":"ElementaryTypeName","src":"33386:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33385:20:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13184,"nodeType":"FunctionDefinition","src":"33441:160:15","nodes":[],"documentation":{"id":13172,"nodeType":"StructuredDocumentation","src":"33412:24:15","text":"See `serializeJson`."},"functionSelector":"1e356e1a","implemented":false,"kind":"function","modifiers":[],"name":"serializeAddress","parameters":{"id":13180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13174,"mutability":"mutable","name":"objectKey","nodeType":"VariableDeclaration","scope":13184,"src":"33467:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13173,"name":"string","nodeType":"ElementaryTypeName","src":"33467:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13176,"mutability":"mutable","name":"valueKey","nodeType":"VariableDeclaration","scope":13184,"src":"33494:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13175,"name":"string","nodeType":"ElementaryTypeName","src":"33494:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13179,"mutability":"mutable","name":"values","nodeType":"VariableDeclaration","scope":13184,"src":"33520:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13177,"name":"address","nodeType":"ElementaryTypeName","src":"33520:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13178,"nodeType":"ArrayTypeName","src":"33520:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"33466:80:15"},"returnParameters":{"id":13183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13182,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","scope":13184,"src":"33581:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13181,"name":"string","nodeType":"ElementaryTypeName","src":"33581:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33580:20:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13196,"nodeType":"FunctionDefinition","src":"33636:142:15","nodes":[],"documentation":{"id":13185,"nodeType":"StructuredDocumentation","src":"33607:24:15","text":"See `serializeJson`."},"functionSelector":"ac22e971","implemented":false,"kind":"function","modifiers":[],"name":"serializeBool","parameters":{"id":13192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13187,"mutability":"mutable","name":"objectKey","nodeType":"VariableDeclaration","scope":13196,"src":"33659:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13186,"name":"string","nodeType":"ElementaryTypeName","src":"33659:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13189,"mutability":"mutable","name":"valueKey","nodeType":"VariableDeclaration","scope":13196,"src":"33686:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13188,"name":"string","nodeType":"ElementaryTypeName","src":"33686:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13191,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":13196,"src":"33712:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13190,"name":"bool","nodeType":"ElementaryTypeName","src":"33712:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"33658:65:15"},"returnParameters":{"id":13195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13194,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","scope":13196,"src":"33758:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13193,"name":"string","nodeType":"ElementaryTypeName","src":"33758:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33757:20:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13209,"nodeType":"FunctionDefinition","src":"33813:154:15","nodes":[],"documentation":{"id":13197,"nodeType":"StructuredDocumentation","src":"33784:24:15","text":"See `serializeJson`."},"functionSelector":"92925aa1","implemented":false,"kind":"function","modifiers":[],"name":"serializeBool","parameters":{"id":13205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13199,"mutability":"mutable","name":"objectKey","nodeType":"VariableDeclaration","scope":13209,"src":"33836:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13198,"name":"string","nodeType":"ElementaryTypeName","src":"33836:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13201,"mutability":"mutable","name":"valueKey","nodeType":"VariableDeclaration","scope":13209,"src":"33863:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13200,"name":"string","nodeType":"ElementaryTypeName","src":"33863:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13204,"mutability":"mutable","name":"values","nodeType":"VariableDeclaration","scope":13209,"src":"33889:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":13202,"name":"bool","nodeType":"ElementaryTypeName","src":"33889:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":13203,"nodeType":"ArrayTypeName","src":"33889:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"33835:77:15"},"returnParameters":{"id":13208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13207,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","scope":13209,"src":"33947:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13206,"name":"string","nodeType":"ElementaryTypeName","src":"33947:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33946:20:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13221,"nodeType":"FunctionDefinition","src":"34002:148:15","nodes":[],"documentation":{"id":13210,"nodeType":"StructuredDocumentation","src":"33973:24:15","text":"See `serializeJson`."},"functionSelector":"2d812b44","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes32","parameters":{"id":13217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13212,"mutability":"mutable","name":"objectKey","nodeType":"VariableDeclaration","scope":13221,"src":"34028:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13211,"name":"string","nodeType":"ElementaryTypeName","src":"34028:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13214,"mutability":"mutable","name":"valueKey","nodeType":"VariableDeclaration","scope":13221,"src":"34055:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13213,"name":"string","nodeType":"ElementaryTypeName","src":"34055:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13216,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":13221,"src":"34081:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13215,"name":"bytes32","nodeType":"ElementaryTypeName","src":"34081:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"34027:68:15"},"returnParameters":{"id":13220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13219,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","scope":13221,"src":"34130:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13218,"name":"string","nodeType":"ElementaryTypeName","src":"34130:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34129:20:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13234,"nodeType":"FunctionDefinition","src":"34185:160:15","nodes":[],"documentation":{"id":13222,"nodeType":"StructuredDocumentation","src":"34156:24:15","text":"See `serializeJson`."},"functionSelector":"201e43e2","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes32","parameters":{"id":13230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13224,"mutability":"mutable","name":"objectKey","nodeType":"VariableDeclaration","scope":13234,"src":"34211:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13223,"name":"string","nodeType":"ElementaryTypeName","src":"34211:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13226,"mutability":"mutable","name":"valueKey","nodeType":"VariableDeclaration","scope":13234,"src":"34238:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13225,"name":"string","nodeType":"ElementaryTypeName","src":"34238:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13229,"mutability":"mutable","name":"values","nodeType":"VariableDeclaration","scope":13234,"src":"34264:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13227,"name":"bytes32","nodeType":"ElementaryTypeName","src":"34264:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13228,"nodeType":"ArrayTypeName","src":"34264:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"34210:80:15"},"returnParameters":{"id":13233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13232,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","scope":13234,"src":"34325:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13231,"name":"string","nodeType":"ElementaryTypeName","src":"34325:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34324:20:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13246,"nodeType":"FunctionDefinition","src":"34380:153:15","nodes":[],"documentation":{"id":13235,"nodeType":"StructuredDocumentation","src":"34351:24:15","text":"See `serializeJson`."},"functionSelector":"f21d52c7","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes","parameters":{"id":13242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13237,"mutability":"mutable","name":"objectKey","nodeType":"VariableDeclaration","scope":13246,"src":"34404:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13236,"name":"string","nodeType":"ElementaryTypeName","src":"34404:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13239,"mutability":"mutable","name":"valueKey","nodeType":"VariableDeclaration","scope":13246,"src":"34431:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13238,"name":"string","nodeType":"ElementaryTypeName","src":"34431:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13241,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":13246,"src":"34457:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13240,"name":"bytes","nodeType":"ElementaryTypeName","src":"34457:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"34403:75:15"},"returnParameters":{"id":13245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13244,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","scope":13246,"src":"34513:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13243,"name":"string","nodeType":"ElementaryTypeName","src":"34513:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34512:20:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13259,"nodeType":"FunctionDefinition","src":"34568:156:15","nodes":[],"documentation":{"id":13247,"nodeType":"StructuredDocumentation","src":"34539:24:15","text":"See `serializeJson`."},"functionSelector":"9884b232","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes","parameters":{"id":13255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13249,"mutability":"mutable","name":"objectKey","nodeType":"VariableDeclaration","scope":13259,"src":"34592:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13248,"name":"string","nodeType":"ElementaryTypeName","src":"34592:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13251,"mutability":"mutable","name":"valueKey","nodeType":"VariableDeclaration","scope":13259,"src":"34619:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13250,"name":"string","nodeType":"ElementaryTypeName","src":"34619:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13254,"mutability":"mutable","name":"values","nodeType":"VariableDeclaration","scope":13259,"src":"34645:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":13252,"name":"bytes","nodeType":"ElementaryTypeName","src":"34645:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":13253,"nodeType":"ArrayTypeName","src":"34645:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"34591:78:15"},"returnParameters":{"id":13258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13257,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","scope":13259,"src":"34704:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13256,"name":"string","nodeType":"ElementaryTypeName","src":"34704:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34703:20:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13271,"nodeType":"FunctionDefinition","src":"34759:143:15","nodes":[],"documentation":{"id":13260,"nodeType":"StructuredDocumentation","src":"34730:24:15","text":"See `serializeJson`."},"functionSelector":"3f33db60","implemented":false,"kind":"function","modifiers":[],"name":"serializeInt","parameters":{"id":13267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13262,"mutability":"mutable","name":"objectKey","nodeType":"VariableDeclaration","scope":13271,"src":"34781:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13261,"name":"string","nodeType":"ElementaryTypeName","src":"34781:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13264,"mutability":"mutable","name":"valueKey","nodeType":"VariableDeclaration","scope":13271,"src":"34808:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13263,"name":"string","nodeType":"ElementaryTypeName","src":"34808:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13266,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":13271,"src":"34834:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13265,"name":"int256","nodeType":"ElementaryTypeName","src":"34834:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34780:67:15"},"returnParameters":{"id":13270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13269,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","scope":13271,"src":"34882:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13268,"name":"string","nodeType":"ElementaryTypeName","src":"34882:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34881:20:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13284,"nodeType":"FunctionDefinition","src":"34937:155:15","nodes":[],"documentation":{"id":13272,"nodeType":"StructuredDocumentation","src":"34908:24:15","text":"See `serializeJson`."},"functionSelector":"7676e127","implemented":false,"kind":"function","modifiers":[],"name":"serializeInt","parameters":{"id":13280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13274,"mutability":"mutable","name":"objectKey","nodeType":"VariableDeclaration","scope":13284,"src":"34959:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13273,"name":"string","nodeType":"ElementaryTypeName","src":"34959:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13276,"mutability":"mutable","name":"valueKey","nodeType":"VariableDeclaration","scope":13284,"src":"34986:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13275,"name":"string","nodeType":"ElementaryTypeName","src":"34986:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13279,"mutability":"mutable","name":"values","nodeType":"VariableDeclaration","scope":13284,"src":"35012:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":13277,"name":"int256","nodeType":"ElementaryTypeName","src":"35012:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":13278,"nodeType":"ArrayTypeName","src":"35012:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"34958:79:15"},"returnParameters":{"id":13283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13282,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","scope":13284,"src":"35072:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13281,"name":"string","nodeType":"ElementaryTypeName","src":"35072:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35071:20:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13294,"nodeType":"FunctionDefinition","src":"35289:111:15","nodes":[],"documentation":{"id":13285,"nodeType":"StructuredDocumentation","src":"35098:186:15","text":"Serializes a key and value to a JSON object stored in-memory that can be later written to a file.\n Returns the stringified version of the specific JSON file up to that moment."},"functionSelector":"9b3358b0","implemented":false,"kind":"function","modifiers":[],"name":"serializeJson","parameters":{"id":13290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13287,"mutability":"mutable","name":"objectKey","nodeType":"VariableDeclaration","scope":13294,"src":"35312:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13286,"name":"string","nodeType":"ElementaryTypeName","src":"35312:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13289,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":13294,"src":"35339:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13288,"name":"string","nodeType":"ElementaryTypeName","src":"35339:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35311:50:15"},"returnParameters":{"id":13293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13292,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","scope":13294,"src":"35380:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13291,"name":"string","nodeType":"ElementaryTypeName","src":"35380:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35379:20:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13306,"nodeType":"FunctionDefinition","src":"35435:155:15","nodes":[],"documentation":{"id":13295,"nodeType":"StructuredDocumentation","src":"35406:24:15","text":"See `serializeJson`."},"functionSelector":"88da6d35","implemented":false,"kind":"function","modifiers":[],"name":"serializeString","parameters":{"id":13302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13297,"mutability":"mutable","name":"objectKey","nodeType":"VariableDeclaration","scope":13306,"src":"35460:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13296,"name":"string","nodeType":"ElementaryTypeName","src":"35460:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13299,"mutability":"mutable","name":"valueKey","nodeType":"VariableDeclaration","scope":13306,"src":"35487:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13298,"name":"string","nodeType":"ElementaryTypeName","src":"35487:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13301,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":13306,"src":"35513:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13300,"name":"string","nodeType":"ElementaryTypeName","src":"35513:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35459:76:15"},"returnParameters":{"id":13305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13304,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","scope":13306,"src":"35570:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13303,"name":"string","nodeType":"ElementaryTypeName","src":"35570:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35569:20:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13319,"nodeType":"FunctionDefinition","src":"35625:158:15","nodes":[],"documentation":{"id":13307,"nodeType":"StructuredDocumentation","src":"35596:24:15","text":"See `serializeJson`."},"functionSelector":"561cd6f3","implemented":false,"kind":"function","modifiers":[],"name":"serializeString","parameters":{"id":13315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13309,"mutability":"mutable","name":"objectKey","nodeType":"VariableDeclaration","scope":13319,"src":"35650:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13308,"name":"string","nodeType":"ElementaryTypeName","src":"35650:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13311,"mutability":"mutable","name":"valueKey","nodeType":"VariableDeclaration","scope":13319,"src":"35677:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13310,"name":"string","nodeType":"ElementaryTypeName","src":"35677:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13314,"mutability":"mutable","name":"values","nodeType":"VariableDeclaration","scope":13319,"src":"35703:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13312,"name":"string","nodeType":"ElementaryTypeName","src":"35703:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13313,"nodeType":"ArrayTypeName","src":"35703:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"35649:79:15"},"returnParameters":{"id":13318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13317,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","scope":13319,"src":"35763:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13316,"name":"string","nodeType":"ElementaryTypeName","src":"35763:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35762:20:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13331,"nodeType":"FunctionDefinition","src":"35818:150:15","nodes":[],"documentation":{"id":13320,"nodeType":"StructuredDocumentation","src":"35789:24:15","text":"See `serializeJson`."},"functionSelector":"ae5a2ae8","implemented":false,"kind":"function","modifiers":[],"name":"serializeUintToHex","parameters":{"id":13327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13322,"mutability":"mutable","name":"objectKey","nodeType":"VariableDeclaration","scope":13331,"src":"35846:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13321,"name":"string","nodeType":"ElementaryTypeName","src":"35846:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13324,"mutability":"mutable","name":"valueKey","nodeType":"VariableDeclaration","scope":13331,"src":"35873:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13323,"name":"string","nodeType":"ElementaryTypeName","src":"35873:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13326,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":13331,"src":"35899:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13325,"name":"uint256","nodeType":"ElementaryTypeName","src":"35899:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"35845:68:15"},"returnParameters":{"id":13330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13329,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","scope":13331,"src":"35948:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13328,"name":"string","nodeType":"ElementaryTypeName","src":"35948:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35947:20:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13343,"nodeType":"FunctionDefinition","src":"36003:145:15","nodes":[],"documentation":{"id":13332,"nodeType":"StructuredDocumentation","src":"35974:24:15","text":"See `serializeJson`."},"functionSelector":"129e9002","implemented":false,"kind":"function","modifiers":[],"name":"serializeUint","parameters":{"id":13339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13334,"mutability":"mutable","name":"objectKey","nodeType":"VariableDeclaration","scope":13343,"src":"36026:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13333,"name":"string","nodeType":"ElementaryTypeName","src":"36026:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13336,"mutability":"mutable","name":"valueKey","nodeType":"VariableDeclaration","scope":13343,"src":"36053:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13335,"name":"string","nodeType":"ElementaryTypeName","src":"36053:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13338,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":13343,"src":"36079:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13337,"name":"uint256","nodeType":"ElementaryTypeName","src":"36079:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"36025:68:15"},"returnParameters":{"id":13342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13341,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","scope":13343,"src":"36128:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13340,"name":"string","nodeType":"ElementaryTypeName","src":"36128:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36127:20:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13356,"nodeType":"FunctionDefinition","src":"36183:157:15","nodes":[],"documentation":{"id":13344,"nodeType":"StructuredDocumentation","src":"36154:24:15","text":"See `serializeJson`."},"functionSelector":"fee9a469","implemented":false,"kind":"function","modifiers":[],"name":"serializeUint","parameters":{"id":13352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13346,"mutability":"mutable","name":"objectKey","nodeType":"VariableDeclaration","scope":13356,"src":"36206:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13345,"name":"string","nodeType":"ElementaryTypeName","src":"36206:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13348,"mutability":"mutable","name":"valueKey","nodeType":"VariableDeclaration","scope":13356,"src":"36233:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13347,"name":"string","nodeType":"ElementaryTypeName","src":"36233:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13351,"mutability":"mutable","name":"values","nodeType":"VariableDeclaration","scope":13356,"src":"36259:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":13349,"name":"uint256","nodeType":"ElementaryTypeName","src":"36259:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":13350,"nodeType":"ArrayTypeName","src":"36259:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"36205:80:15"},"returnParameters":{"id":13355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13354,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","scope":13356,"src":"36320:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13353,"name":"string","nodeType":"ElementaryTypeName","src":"36320:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36319:20:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13364,"nodeType":"FunctionDefinition","src":"36440:72:15","nodes":[],"documentation":{"id":13357,"nodeType":"StructuredDocumentation","src":"36346:89:15","text":"Write a serialized JSON object to a file. If the file exists, it will be overwritten."},"functionSelector":"e23cd19f","implemented":false,"kind":"function","modifiers":[],"name":"writeJson","parameters":{"id":13362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13359,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","scope":13364,"src":"36459:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13358,"name":"string","nodeType":"ElementaryTypeName","src":"36459:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13361,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","scope":13364,"src":"36481:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13360,"name":"string","nodeType":"ElementaryTypeName","src":"36481:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36458:44:15"},"returnParameters":{"id":13363,"nodeType":"ParameterList","parameters":[],"src":"36511:0:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13374,"nodeType":"FunctionDefinition","src":"36738:98:15","nodes":[],"documentation":{"id":13365,"nodeType":"StructuredDocumentation","src":"36518:215:15","text":"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.>\n This is useful to replace a specific value of a JSON file, without having to parse the entire thing."},"functionSelector":"35d6ad46","implemented":false,"kind":"function","modifiers":[],"name":"writeJson","parameters":{"id":13372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13367,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","scope":13374,"src":"36757:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13366,"name":"string","nodeType":"ElementaryTypeName","src":"36757:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13369,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","scope":13374,"src":"36779:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13368,"name":"string","nodeType":"ElementaryTypeName","src":"36779:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13371,"mutability":"mutable","name":"valueKey","nodeType":"VariableDeclaration","scope":13374,"src":"36801:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13370,"name":"string","nodeType":"ElementaryTypeName","src":"36801:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36756:70:15"},"returnParameters":{"id":13373,"nodeType":"ParameterList","parameters":[],"src":"36835:0:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13378,"nodeType":"FunctionDefinition","src":"37375:30:15","nodes":[],"documentation":{"id":13375,"nodeType":"StructuredDocumentation","src":"36878:492:15","text":"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain.\n Broadcasting address is determined by checking the following in order:\n 1. If `--sender` argument was provided, that address is used.\n 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used.\n 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"functionSelector":"afc98040","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","parameters":{"id":13376,"nodeType":"ParameterList","parameters":[],"src":"37393:2:15"},"returnParameters":{"id":13377,"nodeType":"ParameterList","parameters":[],"src":"37404:0:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13384,"nodeType":"FunctionDefinition","src":"37575:44:15","nodes":[],"documentation":{"id":13379,"nodeType":"StructuredDocumentation","src":"37411:159:15","text":"Has the next call (at this call depth only) create a transaction with the address provided\n as the sender that can later be signed and sent onchain."},"functionSelector":"e6962cdb","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","parameters":{"id":13382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13381,"mutability":"mutable","name":"signer","nodeType":"VariableDeclaration","scope":13384,"src":"37594:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13380,"name":"address","nodeType":"ElementaryTypeName","src":"37594:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"37593:16:15"},"returnParameters":{"id":13383,"nodeType":"ParameterList","parameters":[],"src":"37618:0:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13390,"nodeType":"FunctionDefinition","src":"37793:48:15","nodes":[],"documentation":{"id":13385,"nodeType":"StructuredDocumentation","src":"37625:163:15","text":"Has the next call (at this call depth only) create a transaction with the private key\n provided as the sender that can later be signed and sent onchain."},"functionSelector":"f67a965b","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","parameters":{"id":13388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13387,"mutability":"mutable","name":"privateKey","nodeType":"VariableDeclaration","scope":13390,"src":"37812:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13386,"name":"uint256","nodeType":"ElementaryTypeName","src":"37812:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"37811:20:15"},"returnParameters":{"id":13389,"nodeType":"ParameterList","parameters":[],"src":"37840:0:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13394,"nodeType":"FunctionDefinition","src":"38351:35:15","nodes":[],"documentation":{"id":13391,"nodeType":"StructuredDocumentation","src":"37847:499:15","text":"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain.\n Broadcasting address is determined by checking the following in order:\n 1. If `--sender` argument was provided, that address is used.\n 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used.\n 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"functionSelector":"7fb5297f","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","parameters":{"id":13392,"nodeType":"ParameterList","parameters":[],"src":"38374:2:15"},"returnParameters":{"id":13393,"nodeType":"ParameterList","parameters":[],"src":"38385:0:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13400,"nodeType":"FunctionDefinition","src":"38548:49:15","nodes":[],"documentation":{"id":13395,"nodeType":"StructuredDocumentation","src":"38392:151:15","text":"Has all subsequent calls (at this call depth only) create transactions with the address\n provided that can later be signed and sent onchain."},"functionSelector":"7fec2a8d","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","parameters":{"id":13398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13397,"mutability":"mutable","name":"signer","nodeType":"VariableDeclaration","scope":13400,"src":"38572:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13396,"name":"address","nodeType":"ElementaryTypeName","src":"38572:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"38571:16:15"},"returnParameters":{"id":13399,"nodeType":"ParameterList","parameters":[],"src":"38596:0:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13406,"nodeType":"FunctionDefinition","src":"38763:53:15","nodes":[],"documentation":{"id":13401,"nodeType":"StructuredDocumentation","src":"38603:155:15","text":"Has all subsequent calls (at this call depth only) create transactions with the private key\n provided that can later be signed and sent onchain."},"functionSelector":"ce817d47","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","parameters":{"id":13404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13403,"mutability":"mutable","name":"privateKey","nodeType":"VariableDeclaration","scope":13406,"src":"38787:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13402,"name":"uint256","nodeType":"ElementaryTypeName","src":"38787:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"38786:20:15"},"returnParameters":{"id":13405,"nodeType":"ParameterList","parameters":[],"src":"38815:0:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13410,"nodeType":"FunctionDefinition","src":"38869:34:15","nodes":[],"documentation":{"id":13407,"nodeType":"StructuredDocumentation","src":"38822:42:15","text":"Stops collecting onchain transactions."},"functionSelector":"76eadd36","implemented":false,"kind":"function","modifiers":[],"name":"stopBroadcast","parameters":{"id":13408,"nodeType":"ParameterList","parameters":[],"src":"38891:2:15"},"returnParameters":{"id":13409,"nodeType":"ParameterList","parameters":[],"src":"38902:0:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13420,"nodeType":"FunctionDefinition","src":"39152:93:15","nodes":[],"documentation":{"id":13411,"nodeType":"StructuredDocumentation","src":"38942:205:15","text":"Returns the index of the first occurrence of a `key` in an `input` string.\n Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found.\n Returns 0 in case of an empty `key`."},"functionSelector":"8a0807b7","implemented":false,"kind":"function","modifiers":[],"name":"indexOf","parameters":{"id":13416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13413,"mutability":"mutable","name":"input","nodeType":"VariableDeclaration","scope":13420,"src":"39169:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13412,"name":"string","nodeType":"ElementaryTypeName","src":"39169:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13415,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":13420,"src":"39192:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13414,"name":"string","nodeType":"ElementaryTypeName","src":"39192:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39168:44:15"},"returnParameters":{"id":13419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13418,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":13420,"src":"39236:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13417,"name":"uint256","nodeType":"ElementaryTypeName","src":"39236:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"39235:9:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13428,"nodeType":"FunctionDefinition","src":"39304:100:15","nodes":[],"documentation":{"id":13421,"nodeType":"StructuredDocumentation","src":"39251:48:15","text":"Parses the given `string` into an `address`."},"functionSelector":"c6ce059d","implemented":false,"kind":"function","modifiers":[],"name":"parseAddress","parameters":{"id":13424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13423,"mutability":"mutable","name":"stringifiedValue","nodeType":"VariableDeclaration","scope":13428,"src":"39326:32:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13422,"name":"string","nodeType":"ElementaryTypeName","src":"39326:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39325:34:15"},"returnParameters":{"id":13427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13426,"mutability":"mutable","name":"parsedValue","nodeType":"VariableDeclaration","scope":13428,"src":"39383:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13425,"name":"address","nodeType":"ElementaryTypeName","src":"39383:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"39382:21:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13436,"nodeType":"FunctionDefinition","src":"39459:94:15","nodes":[],"documentation":{"id":13429,"nodeType":"StructuredDocumentation","src":"39410:44:15","text":"Parses the given `string` into a `bool`."},"functionSelector":"974ef924","implemented":false,"kind":"function","modifiers":[],"name":"parseBool","parameters":{"id":13432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13431,"mutability":"mutable","name":"stringifiedValue","nodeType":"VariableDeclaration","scope":13436,"src":"39478:32:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13430,"name":"string","nodeType":"ElementaryTypeName","src":"39478:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39477:34:15"},"returnParameters":{"id":13435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13434,"mutability":"mutable","name":"parsedValue","nodeType":"VariableDeclaration","scope":13436,"src":"39535:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13433,"name":"bool","nodeType":"ElementaryTypeName","src":"39535:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"39534:18:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13444,"nodeType":"FunctionDefinition","src":"39607:103:15","nodes":[],"documentation":{"id":13437,"nodeType":"StructuredDocumentation","src":"39559:43:15","text":"Parses the given `string` into `bytes`."},"functionSelector":"8f5d232d","implemented":false,"kind":"function","modifiers":[],"name":"parseBytes","parameters":{"id":13440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13439,"mutability":"mutable","name":"stringifiedValue","nodeType":"VariableDeclaration","scope":13444,"src":"39627:32:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13438,"name":"string","nodeType":"ElementaryTypeName","src":"39627:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39626:34:15"},"returnParameters":{"id":13443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13442,"mutability":"mutable","name":"parsedValue","nodeType":"VariableDeclaration","scope":13444,"src":"39684:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13441,"name":"bytes","nodeType":"ElementaryTypeName","src":"39684:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"39683:26:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13452,"nodeType":"FunctionDefinition","src":"39768:100:15","nodes":[],"documentation":{"id":13445,"nodeType":"StructuredDocumentation","src":"39716:47:15","text":"Parses the given `string` into a `bytes32`."},"functionSelector":"087e6e81","implemented":false,"kind":"function","modifiers":[],"name":"parseBytes32","parameters":{"id":13448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13447,"mutability":"mutable","name":"stringifiedValue","nodeType":"VariableDeclaration","scope":13452,"src":"39790:32:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13446,"name":"string","nodeType":"ElementaryTypeName","src":"39790:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39789:34:15"},"returnParameters":{"id":13451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13450,"mutability":"mutable","name":"parsedValue","nodeType":"VariableDeclaration","scope":13452,"src":"39847:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13449,"name":"bytes32","nodeType":"ElementaryTypeName","src":"39847:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"39846:21:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13460,"nodeType":"FunctionDefinition","src":"39925:95:15","nodes":[],"documentation":{"id":13453,"nodeType":"StructuredDocumentation","src":"39874:46:15","text":"Parses the given `string` into a `int256`."},"functionSelector":"42346c5e","implemented":false,"kind":"function","modifiers":[],"name":"parseInt","parameters":{"id":13456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13455,"mutability":"mutable","name":"stringifiedValue","nodeType":"VariableDeclaration","scope":13460,"src":"39943:32:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13454,"name":"string","nodeType":"ElementaryTypeName","src":"39943:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39942:34:15"},"returnParameters":{"id":13459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13458,"mutability":"mutable","name":"parsedValue","nodeType":"VariableDeclaration","scope":13460,"src":"40000:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13457,"name":"int256","nodeType":"ElementaryTypeName","src":"40000:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"39999:20:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13468,"nodeType":"FunctionDefinition","src":"40078:97:15","nodes":[],"documentation":{"id":13461,"nodeType":"StructuredDocumentation","src":"40026:47:15","text":"Parses the given `string` into a `uint256`."},"functionSelector":"fa91454d","implemented":false,"kind":"function","modifiers":[],"name":"parseUint","parameters":{"id":13464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13463,"mutability":"mutable","name":"stringifiedValue","nodeType":"VariableDeclaration","scope":13468,"src":"40097:32:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13462,"name":"string","nodeType":"ElementaryTypeName","src":"40097:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40096:34:15"},"returnParameters":{"id":13467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13466,"mutability":"mutable","name":"parsedValue","nodeType":"VariableDeclaration","scope":13468,"src":"40154:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13465,"name":"uint256","nodeType":"ElementaryTypeName","src":"40154:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"40153:21:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13480,"nodeType":"FunctionDefinition","src":"40253:151:15","nodes":[],"documentation":{"id":13469,"nodeType":"StructuredDocumentation","src":"40181:67:15","text":"Replaces occurrences of `from` in the given `string` with `to`."},"functionSelector":"e00ad03e","implemented":false,"kind":"function","modifiers":[],"name":"replace","parameters":{"id":13476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13471,"mutability":"mutable","name":"input","nodeType":"VariableDeclaration","scope":13480,"src":"40270:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13470,"name":"string","nodeType":"ElementaryTypeName","src":"40270:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13473,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":13480,"src":"40293:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13472,"name":"string","nodeType":"ElementaryTypeName","src":"40293:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13475,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":13480,"src":"40315:18:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13474,"name":"string","nodeType":"ElementaryTypeName","src":"40315:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40269:65:15"},"returnParameters":{"id":13479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13478,"mutability":"mutable","name":"output","nodeType":"VariableDeclaration","scope":13480,"src":"40382:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13477,"name":"string","nodeType":"ElementaryTypeName","src":"40382:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40381:22:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13491,"nodeType":"FunctionDefinition","src":"40497:113:15","nodes":[],"documentation":{"id":13481,"nodeType":"StructuredDocumentation","src":"40410:82:15","text":"Splits the given `string` into an array of strings divided by the `delimiter`."},"functionSelector":"8bb75533","implemented":false,"kind":"function","modifiers":[],"name":"split","parameters":{"id":13486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13483,"mutability":"mutable","name":"input","nodeType":"VariableDeclaration","scope":13491,"src":"40512:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13482,"name":"string","nodeType":"ElementaryTypeName","src":"40512:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13485,"mutability":"mutable","name":"delimiter","nodeType":"VariableDeclaration","scope":13491,"src":"40535:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13484,"name":"string","nodeType":"ElementaryTypeName","src":"40535:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40511:50:15"},"returnParameters":{"id":13490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13489,"mutability":"mutable","name":"outputs","nodeType":"VariableDeclaration","scope":13491,"src":"40585:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13487,"name":"string","nodeType":"ElementaryTypeName","src":"40585:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13488,"nodeType":"ArrayTypeName","src":"40585:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"40584:25:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13499,"nodeType":"FunctionDefinition","src":"40672:89:15","nodes":[],"documentation":{"id":13492,"nodeType":"StructuredDocumentation","src":"40616:51:15","text":"Converts the given `string` value to Lowercase."},"functionSelector":"50bb0884","implemented":false,"kind":"function","modifiers":[],"name":"toLowercase","parameters":{"id":13495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13494,"mutability":"mutable","name":"input","nodeType":"VariableDeclaration","scope":13499,"src":"40693:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13493,"name":"string","nodeType":"ElementaryTypeName","src":"40693:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40692:23:15"},"returnParameters":{"id":13498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13497,"mutability":"mutable","name":"output","nodeType":"VariableDeclaration","scope":13499,"src":"40739:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13496,"name":"string","nodeType":"ElementaryTypeName","src":"40739:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40738:22:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13507,"nodeType":"FunctionDefinition","src":"40815:88:15","nodes":[],"documentation":{"id":13500,"nodeType":"StructuredDocumentation","src":"40767:43:15","text":"Converts the given value to a `string`."},"functionSelector":"56ca623e","implemented":false,"kind":"function","modifiers":[],"name":"toString","parameters":{"id":13503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13502,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":13507,"src":"40833:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13501,"name":"address","nodeType":"ElementaryTypeName","src":"40833:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"40832:15:15"},"returnParameters":{"id":13506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13505,"mutability":"mutable","name":"stringifiedValue","nodeType":"VariableDeclaration","scope":13507,"src":"40871:30:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13504,"name":"string","nodeType":"ElementaryTypeName","src":"40871:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40870:32:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13515,"nodeType":"FunctionDefinition","src":"40957:95:15","nodes":[],"documentation":{"id":13508,"nodeType":"StructuredDocumentation","src":"40909:43:15","text":"Converts the given value to a `string`."},"functionSelector":"71aad10d","implemented":false,"kind":"function","modifiers":[],"name":"toString","parameters":{"id":13511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13510,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":13515,"src":"40975:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13509,"name":"bytes","nodeType":"ElementaryTypeName","src":"40975:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"40974:22:15"},"returnParameters":{"id":13514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13513,"mutability":"mutable","name":"stringifiedValue","nodeType":"VariableDeclaration","scope":13515,"src":"41020:30:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13512,"name":"string","nodeType":"ElementaryTypeName","src":"41020:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41019:32:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13523,"nodeType":"FunctionDefinition","src":"41106:88:15","nodes":[],"documentation":{"id":13516,"nodeType":"StructuredDocumentation","src":"41058:43:15","text":"Converts the given value to a `string`."},"functionSelector":"b11a19e8","implemented":false,"kind":"function","modifiers":[],"name":"toString","parameters":{"id":13519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13518,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":13523,"src":"41124:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13517,"name":"bytes32","nodeType":"ElementaryTypeName","src":"41124:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"41123:15:15"},"returnParameters":{"id":13522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13521,"mutability":"mutable","name":"stringifiedValue","nodeType":"VariableDeclaration","scope":13523,"src":"41162:30:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13520,"name":"string","nodeType":"ElementaryTypeName","src":"41162:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41161:32:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13531,"nodeType":"FunctionDefinition","src":"41248:85:15","nodes":[],"documentation":{"id":13524,"nodeType":"StructuredDocumentation","src":"41200:43:15","text":"Converts the given value to a `string`."},"functionSelector":"71dce7da","implemented":false,"kind":"function","modifiers":[],"name":"toString","parameters":{"id":13527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13526,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":13531,"src":"41266:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13525,"name":"bool","nodeType":"ElementaryTypeName","src":"41266:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"41265:12:15"},"returnParameters":{"id":13530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13529,"mutability":"mutable","name":"stringifiedValue","nodeType":"VariableDeclaration","scope":13531,"src":"41301:30:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13528,"name":"string","nodeType":"ElementaryTypeName","src":"41301:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41300:32:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13539,"nodeType":"FunctionDefinition","src":"41387:88:15","nodes":[],"documentation":{"id":13532,"nodeType":"StructuredDocumentation","src":"41339:43:15","text":"Converts the given value to a `string`."},"functionSelector":"6900a3ae","implemented":false,"kind":"function","modifiers":[],"name":"toString","parameters":{"id":13535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13534,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":13539,"src":"41405:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13533,"name":"uint256","nodeType":"ElementaryTypeName","src":"41405:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"41404:15:15"},"returnParameters":{"id":13538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13537,"mutability":"mutable","name":"stringifiedValue","nodeType":"VariableDeclaration","scope":13539,"src":"41443:30:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13536,"name":"string","nodeType":"ElementaryTypeName","src":"41443:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41442:32:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13547,"nodeType":"FunctionDefinition","src":"41529:87:15","nodes":[],"documentation":{"id":13540,"nodeType":"StructuredDocumentation","src":"41481:43:15","text":"Converts the given value to a `string`."},"functionSelector":"a322c40e","implemented":false,"kind":"function","modifiers":[],"name":"toString","parameters":{"id":13543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13542,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":13547,"src":"41547:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13541,"name":"int256","nodeType":"ElementaryTypeName","src":"41547:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"41546:14:15"},"returnParameters":{"id":13546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13545,"mutability":"mutable","name":"stringifiedValue","nodeType":"VariableDeclaration","scope":13547,"src":"41584:30:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13544,"name":"string","nodeType":"ElementaryTypeName","src":"41584:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41583:32:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13555,"nodeType":"FunctionDefinition","src":"41678:89:15","nodes":[],"documentation":{"id":13548,"nodeType":"StructuredDocumentation","src":"41622:51:15","text":"Converts the given `string` value to Uppercase."},"functionSelector":"074ae3d7","implemented":false,"kind":"function","modifiers":[],"name":"toUppercase","parameters":{"id":13551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13550,"mutability":"mutable","name":"input","nodeType":"VariableDeclaration","scope":13555,"src":"41699:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13549,"name":"string","nodeType":"ElementaryTypeName","src":"41699:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41698:23:15"},"returnParameters":{"id":13554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13553,"mutability":"mutable","name":"output","nodeType":"VariableDeclaration","scope":13555,"src":"41745:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13552,"name":"string","nodeType":"ElementaryTypeName","src":"41745:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41744:22:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13563,"nodeType":"FunctionDefinition","src":"41850:82:15","nodes":[],"documentation":{"id":13556,"nodeType":"StructuredDocumentation","src":"41773:72:15","text":"Trims leading and trailing whitespace from the given `string` value."},"functionSelector":"b2dad155","implemented":false,"kind":"function","modifiers":[],"name":"trim","parameters":{"id":13559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13558,"mutability":"mutable","name":"input","nodeType":"VariableDeclaration","scope":13563,"src":"41864:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13557,"name":"string","nodeType":"ElementaryTypeName","src":"41864:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41863:23:15"},"returnParameters":{"id":13562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13561,"mutability":"mutable","name":"output","nodeType":"VariableDeclaration","scope":13563,"src":"41910:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13560,"name":"string","nodeType":"ElementaryTypeName","src":"41910:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41909:22:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13575,"nodeType":"FunctionDefinition","src":"42127:113:15","nodes":[],"documentation":{"id":13564,"nodeType":"StructuredDocumentation","src":"41972:150:15","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message."},"functionSelector":"045c55ce","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","parameters":{"id":13573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13566,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":13575,"src":"42161:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13565,"name":"uint256","nodeType":"ElementaryTypeName","src":"42161:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13568,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":13575,"src":"42175:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13567,"name":"uint256","nodeType":"ElementaryTypeName","src":"42175:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13570,"mutability":"mutable","name":"maxDelta","nodeType":"VariableDeclaration","scope":13575,"src":"42190:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13569,"name":"uint256","nodeType":"ElementaryTypeName","src":"42190:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13572,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","scope":13575,"src":"42208:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13571,"name":"uint256","nodeType":"ElementaryTypeName","src":"42208:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"42160:65:15"},"returnParameters":{"id":13574,"nodeType":"ParameterList","parameters":[],"src":"42239:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13589,"nodeType":"FunctionDefinition","src":"42455:182:15","nodes":[],"documentation":{"id":13576,"nodeType":"StructuredDocumentation","src":"42246:204:15","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"60429eb2","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","parameters":{"id":13587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13578,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":13589,"src":"42498:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13577,"name":"uint256","nodeType":"ElementaryTypeName","src":"42498:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13580,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":13589,"src":"42520:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13579,"name":"uint256","nodeType":"ElementaryTypeName","src":"42520:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13582,"mutability":"mutable","name":"maxDelta","nodeType":"VariableDeclaration","scope":13589,"src":"42543:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13581,"name":"uint256","nodeType":"ElementaryTypeName","src":"42543:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13584,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","scope":13589,"src":"42569:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13583,"name":"uint256","nodeType":"ElementaryTypeName","src":"42569:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13586,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":13589,"src":"42595:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13585,"name":"string","nodeType":"ElementaryTypeName","src":"42595:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42488:134:15"},"returnParameters":{"id":13588,"nodeType":"ParameterList","parameters":[],"src":"42636:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13601,"nodeType":"FunctionDefinition","src":"42797:111:15","nodes":[],"documentation":{"id":13590,"nodeType":"StructuredDocumentation","src":"42643:149:15","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message."},"functionSelector":"3d5bc8bc","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","parameters":{"id":13599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13592,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":13601,"src":"42831:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13591,"name":"int256","nodeType":"ElementaryTypeName","src":"42831:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13594,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":13601,"src":"42844:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13593,"name":"int256","nodeType":"ElementaryTypeName","src":"42844:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13596,"mutability":"mutable","name":"maxDelta","nodeType":"VariableDeclaration","scope":13601,"src":"42858:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13595,"name":"uint256","nodeType":"ElementaryTypeName","src":"42858:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13598,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","scope":13601,"src":"42876:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13597,"name":"uint256","nodeType":"ElementaryTypeName","src":"42876:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"42830:63:15"},"returnParameters":{"id":13600,"nodeType":"ParameterList","parameters":[],"src":"42907:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13615,"nodeType":"FunctionDefinition","src":"43122:180:15","nodes":[],"documentation":{"id":13602,"nodeType":"StructuredDocumentation","src":"42914:203:15","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"6a5066d4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","parameters":{"id":13613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13604,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":13615,"src":"43165:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13603,"name":"int256","nodeType":"ElementaryTypeName","src":"43165:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13606,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":13615,"src":"43186:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13605,"name":"int256","nodeType":"ElementaryTypeName","src":"43186:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13608,"mutability":"mutable","name":"maxDelta","nodeType":"VariableDeclaration","scope":13615,"src":"43208:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13607,"name":"uint256","nodeType":"ElementaryTypeName","src":"43208:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13610,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","scope":13615,"src":"43234:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13609,"name":"uint256","nodeType":"ElementaryTypeName","src":"43234:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13612,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":13615,"src":"43260:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13611,"name":"string","nodeType":"ElementaryTypeName","src":"43260:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43155:132:15"},"returnParameters":{"id":13614,"nodeType":"ParameterList","parameters":[],"src":"43301:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13625,"nodeType":"FunctionDefinition","src":"43406:88:15","nodes":[],"documentation":{"id":13616,"nodeType":"StructuredDocumentation","src":"43308:93:15","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`."},"functionSelector":"16d207c6","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","parameters":{"id":13623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13618,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":13625,"src":"43433:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13617,"name":"uint256","nodeType":"ElementaryTypeName","src":"43433:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13620,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":13625,"src":"43447:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13619,"name":"uint256","nodeType":"ElementaryTypeName","src":"43447:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13622,"mutability":"mutable","name":"maxDelta","nodeType":"VariableDeclaration","scope":13625,"src":"43462:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13621,"name":"uint256","nodeType":"ElementaryTypeName","src":"43462:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"43432:47:15"},"returnParameters":{"id":13624,"nodeType":"ParameterList","parameters":[],"src":"43493:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13637,"nodeType":"FunctionDefinition","src":"43660:111:15","nodes":[],"documentation":{"id":13626,"nodeType":"StructuredDocumentation","src":"43500:155:15","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Includes error message into revert string on failure."},"functionSelector":"f710b062","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","parameters":{"id":13635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13628,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":13637,"src":"43687:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13627,"name":"uint256","nodeType":"ElementaryTypeName","src":"43687:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13630,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":13637,"src":"43701:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13629,"name":"uint256","nodeType":"ElementaryTypeName","src":"43701:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13632,"mutability":"mutable","name":"maxDelta","nodeType":"VariableDeclaration","scope":13637,"src":"43716:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13631,"name":"uint256","nodeType":"ElementaryTypeName","src":"43716:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13634,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":13637,"src":"43734:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13633,"name":"string","nodeType":"ElementaryTypeName","src":"43734:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43686:70:15"},"returnParameters":{"id":13636,"nodeType":"ParameterList","parameters":[],"src":"43770:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13647,"nodeType":"FunctionDefinition","src":"43874:86:15","nodes":[],"documentation":{"id":13638,"nodeType":"StructuredDocumentation","src":"43777:92:15","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`."},"functionSelector":"240f839d","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","parameters":{"id":13645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13640,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":13647,"src":"43901:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13639,"name":"int256","nodeType":"ElementaryTypeName","src":"43901:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13642,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":13647,"src":"43914:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13641,"name":"int256","nodeType":"ElementaryTypeName","src":"43914:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13644,"mutability":"mutable","name":"maxDelta","nodeType":"VariableDeclaration","scope":13647,"src":"43928:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13643,"name":"uint256","nodeType":"ElementaryTypeName","src":"43928:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"43900:45:15"},"returnParameters":{"id":13646,"nodeType":"ParameterList","parameters":[],"src":"43959:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13659,"nodeType":"FunctionDefinition","src":"44125:109:15","nodes":[],"documentation":{"id":13648,"nodeType":"StructuredDocumentation","src":"43966:154:15","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Includes error message into revert string on failure."},"functionSelector":"8289e621","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","parameters":{"id":13657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13650,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":13659,"src":"44152:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13649,"name":"int256","nodeType":"ElementaryTypeName","src":"44152:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13652,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":13659,"src":"44165:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13651,"name":"int256","nodeType":"ElementaryTypeName","src":"44165:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13654,"mutability":"mutable","name":"maxDelta","nodeType":"VariableDeclaration","scope":13659,"src":"44179:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13653,"name":"uint256","nodeType":"ElementaryTypeName","src":"44179:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13656,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":13659,"src":"44197:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13655,"name":"string","nodeType":"ElementaryTypeName","src":"44197:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44151:68:15"},"returnParameters":{"id":13658,"nodeType":"ParameterList","parameters":[],"src":"44233:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13671,"nodeType":"FunctionDefinition","src":"44505:136:15","nodes":[],"documentation":{"id":13660,"nodeType":"StructuredDocumentation","src":"44240:260:15","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message."},"functionSelector":"21ed2977","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","parameters":{"id":13669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13662,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":13671,"src":"44539:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13661,"name":"uint256","nodeType":"ElementaryTypeName","src":"44539:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13664,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":13671,"src":"44553:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13663,"name":"uint256","nodeType":"ElementaryTypeName","src":"44553:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13666,"mutability":"mutable","name":"maxPercentDelta","nodeType":"VariableDeclaration","scope":13671,"src":"44568:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13665,"name":"uint256","nodeType":"ElementaryTypeName","src":"44568:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13668,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","scope":13671,"src":"44593:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13667,"name":"uint256","nodeType":"ElementaryTypeName","src":"44593:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"44538:72:15"},"returnParameters":{"id":13670,"nodeType":"ParameterList","parameters":[],"src":"44640:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13685,"nodeType":"FunctionDefinition","src":"44966:189:15","nodes":[],"documentation":{"id":13672,"nodeType":"StructuredDocumentation","src":"44647:314:15","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"82d6c8fd","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","parameters":{"id":13683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13674,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":13685,"src":"45009:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13673,"name":"uint256","nodeType":"ElementaryTypeName","src":"45009:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13676,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":13685,"src":"45031:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13675,"name":"uint256","nodeType":"ElementaryTypeName","src":"45031:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13678,"mutability":"mutable","name":"maxPercentDelta","nodeType":"VariableDeclaration","scope":13685,"src":"45054:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13677,"name":"uint256","nodeType":"ElementaryTypeName","src":"45054:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13680,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","scope":13685,"src":"45087:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13679,"name":"uint256","nodeType":"ElementaryTypeName","src":"45087:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13682,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":13685,"src":"45113:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13681,"name":"string","nodeType":"ElementaryTypeName","src":"45113:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44999:141:15"},"returnParameters":{"id":13684,"nodeType":"ParameterList","parameters":[],"src":"45154:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13697,"nodeType":"FunctionDefinition","src":"45425:134:15","nodes":[],"documentation":{"id":13686,"nodeType":"StructuredDocumentation","src":"45161:259:15","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message."},"functionSelector":"abbf21cc","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","parameters":{"id":13695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13688,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":13697,"src":"45459:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13687,"name":"int256","nodeType":"ElementaryTypeName","src":"45459:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13690,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":13697,"src":"45472:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13689,"name":"int256","nodeType":"ElementaryTypeName","src":"45472:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13692,"mutability":"mutable","name":"maxPercentDelta","nodeType":"VariableDeclaration","scope":13697,"src":"45486:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13691,"name":"uint256","nodeType":"ElementaryTypeName","src":"45486:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13694,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","scope":13697,"src":"45511:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13693,"name":"uint256","nodeType":"ElementaryTypeName","src":"45511:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"45458:70:15"},"returnParameters":{"id":13696,"nodeType":"ParameterList","parameters":[],"src":"45558:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13711,"nodeType":"FunctionDefinition","src":"45883:187:15","nodes":[],"documentation":{"id":13698,"nodeType":"StructuredDocumentation","src":"45565:313:15","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"fccc11c4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","parameters":{"id":13709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13700,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":13711,"src":"45926:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13699,"name":"int256","nodeType":"ElementaryTypeName","src":"45926:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13702,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":13711,"src":"45947:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13701,"name":"int256","nodeType":"ElementaryTypeName","src":"45947:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13704,"mutability":"mutable","name":"maxPercentDelta","nodeType":"VariableDeclaration","scope":13711,"src":"45969:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13703,"name":"uint256","nodeType":"ElementaryTypeName","src":"45969:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13706,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","scope":13711,"src":"46002:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13705,"name":"uint256","nodeType":"ElementaryTypeName","src":"46002:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13708,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":13711,"src":"46028:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13707,"name":"string","nodeType":"ElementaryTypeName","src":"46028:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"45916:139:15"},"returnParameters":{"id":13710,"nodeType":"ParameterList","parameters":[],"src":"46069:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13721,"nodeType":"FunctionDefinition","src":"46284:95:15","nodes":[],"documentation":{"id":13712,"nodeType":"StructuredDocumentation","src":"46076:203:15","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"functionSelector":"8cf25ef4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","parameters":{"id":13719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13714,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":13721,"src":"46311:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13713,"name":"uint256","nodeType":"ElementaryTypeName","src":"46311:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13716,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":13721,"src":"46325:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13715,"name":"uint256","nodeType":"ElementaryTypeName","src":"46325:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13718,"mutability":"mutable","name":"maxPercentDelta","nodeType":"VariableDeclaration","scope":13721,"src":"46340:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13717,"name":"uint256","nodeType":"ElementaryTypeName","src":"46340:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"46310:54:15"},"returnParameters":{"id":13720,"nodeType":"ParameterList","parameters":[],"src":"46378:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13733,"nodeType":"FunctionDefinition","src":"46655:134:15","nodes":[],"documentation":{"id":13722,"nodeType":"StructuredDocumentation","src":"46385:265:15","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Includes error message into revert string on failure."},"functionSelector":"1ecb7d33","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","parameters":{"id":13731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13724,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":13733,"src":"46682:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13723,"name":"uint256","nodeType":"ElementaryTypeName","src":"46682:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13726,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":13733,"src":"46696:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13725,"name":"uint256","nodeType":"ElementaryTypeName","src":"46696:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13728,"mutability":"mutable","name":"maxPercentDelta","nodeType":"VariableDeclaration","scope":13733,"src":"46711:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13727,"name":"uint256","nodeType":"ElementaryTypeName","src":"46711:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13730,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":13733,"src":"46736:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13729,"name":"string","nodeType":"ElementaryTypeName","src":"46736:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46681:77:15"},"returnParameters":{"id":13732,"nodeType":"ParameterList","parameters":[],"src":"46788:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13743,"nodeType":"FunctionDefinition","src":"47002:93:15","nodes":[],"documentation":{"id":13734,"nodeType":"StructuredDocumentation","src":"46795:202:15","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"functionSelector":"fea2d14f","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","parameters":{"id":13741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13736,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":13743,"src":"47029:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13735,"name":"int256","nodeType":"ElementaryTypeName","src":"47029:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13738,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":13743,"src":"47042:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13737,"name":"int256","nodeType":"ElementaryTypeName","src":"47042:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13740,"mutability":"mutable","name":"maxPercentDelta","nodeType":"VariableDeclaration","scope":13743,"src":"47056:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13739,"name":"uint256","nodeType":"ElementaryTypeName","src":"47056:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"47028:52:15"},"returnParameters":{"id":13742,"nodeType":"ParameterList","parameters":[],"src":"47094:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13755,"nodeType":"FunctionDefinition","src":"47370:132:15","nodes":[],"documentation":{"id":13744,"nodeType":"StructuredDocumentation","src":"47101:264:15","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Includes error message into revert string on failure."},"functionSelector":"ef277d72","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","parameters":{"id":13753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13746,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":13755,"src":"47397:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13745,"name":"int256","nodeType":"ElementaryTypeName","src":"47397:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13748,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":13755,"src":"47410:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13747,"name":"int256","nodeType":"ElementaryTypeName","src":"47410:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13750,"mutability":"mutable","name":"maxPercentDelta","nodeType":"VariableDeclaration","scope":13755,"src":"47424:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13749,"name":"uint256","nodeType":"ElementaryTypeName","src":"47424:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13752,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":13755,"src":"47449:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13751,"name":"string","nodeType":"ElementaryTypeName","src":"47449:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47396:75:15"},"returnParameters":{"id":13754,"nodeType":"ParameterList","parameters":[],"src":"47501:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13765,"nodeType":"FunctionDefinition","src":"47611:86:15","nodes":[],"documentation":{"id":13756,"nodeType":"StructuredDocumentation","src":"47508:98:15","text":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message."},"functionSelector":"27af7d9c","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","parameters":{"id":13763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13758,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":13765,"src":"47636:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13757,"name":"uint256","nodeType":"ElementaryTypeName","src":"47636:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13760,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":13765,"src":"47650:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13759,"name":"uint256","nodeType":"ElementaryTypeName","src":"47650:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13762,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","scope":13765,"src":"47665:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13761,"name":"uint256","nodeType":"ElementaryTypeName","src":"47665:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"47635:47:15"},"returnParameters":{"id":13764,"nodeType":"ParameterList","parameters":[],"src":"47696:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13777,"nodeType":"FunctionDefinition","src":"47868:109:15","nodes":[],"documentation":{"id":13766,"nodeType":"StructuredDocumentation","src":"47703:160:15","text":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"d0cbbdef","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","parameters":{"id":13775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13768,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":13777,"src":"47893:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13767,"name":"uint256","nodeType":"ElementaryTypeName","src":"47893:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13770,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":13777,"src":"47907:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13769,"name":"uint256","nodeType":"ElementaryTypeName","src":"47907:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13772,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","scope":13777,"src":"47922:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13771,"name":"uint256","nodeType":"ElementaryTypeName","src":"47922:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13774,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":13777,"src":"47940:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13773,"name":"string","nodeType":"ElementaryTypeName","src":"47940:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47892:70:15"},"returnParameters":{"id":13776,"nodeType":"ParameterList","parameters":[],"src":"47976:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13787,"nodeType":"FunctionDefinition","src":"48085:84:15","nodes":[],"documentation":{"id":13778,"nodeType":"StructuredDocumentation","src":"47983:97:15","text":"Asserts that two `int256` values are equal, formatting them with decimals in failure message."},"functionSelector":"48016c04","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","parameters":{"id":13785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13780,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":13787,"src":"48110:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13779,"name":"int256","nodeType":"ElementaryTypeName","src":"48110:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13782,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":13787,"src":"48123:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13781,"name":"int256","nodeType":"ElementaryTypeName","src":"48123:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13784,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","scope":13787,"src":"48137:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13783,"name":"uint256","nodeType":"ElementaryTypeName","src":"48137:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"48109:45:15"},"returnParameters":{"id":13786,"nodeType":"ParameterList","parameters":[],"src":"48168:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13799,"nodeType":"FunctionDefinition","src":"48339:107:15","nodes":[],"documentation":{"id":13788,"nodeType":"StructuredDocumentation","src":"48175:159:15","text":"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"7e77b0c5","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","parameters":{"id":13797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13790,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":13799,"src":"48364:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13789,"name":"int256","nodeType":"ElementaryTypeName","src":"48364:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13792,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":13799,"src":"48377:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13791,"name":"int256","nodeType":"ElementaryTypeName","src":"48377:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13794,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","scope":13799,"src":"48391:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13793,"name":"uint256","nodeType":"ElementaryTypeName","src":"48391:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13796,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":13799,"src":"48409:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13795,"name":"string","nodeType":"ElementaryTypeName","src":"48409:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48363:68:15"},"returnParameters":{"id":13798,"nodeType":"ParameterList","parameters":[],"src":"48445:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13807,"nodeType":"FunctionDefinition","src":"48502:55:15","nodes":[],"documentation":{"id":13800,"nodeType":"StructuredDocumentation","src":"48452:45:15","text":"Asserts that two `bool` values are equal."},"functionSelector":"f7fe3477","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","parameters":{"id":13805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13802,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":13807,"src":"48520:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13801,"name":"bool","nodeType":"ElementaryTypeName","src":"48520:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":13804,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":13807,"src":"48531:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13803,"name":"bool","nodeType":"ElementaryTypeName","src":"48531:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"48519:23:15"},"returnParameters":{"id":13806,"nodeType":"ParameterList","parameters":[],"src":"48556:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13817,"nodeType":"FunctionDefinition","src":"48670:78:15","nodes":[],"documentation":{"id":13808,"nodeType":"StructuredDocumentation","src":"48563:102:15","text":"Asserts that two `bool` values are equal and includes error message into revert string on failure."},"functionSelector":"4db19e7e","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","parameters":{"id":13815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13810,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":13817,"src":"48688:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13809,"name":"bool","nodeType":"ElementaryTypeName","src":"48688:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":13812,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":13817,"src":"48699:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13811,"name":"bool","nodeType":"ElementaryTypeName","src":"48699:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":13814,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":13817,"src":"48711:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13813,"name":"string","nodeType":"ElementaryTypeName","src":"48711:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48687:46:15"},"returnParameters":{"id":13816,"nodeType":"ParameterList","parameters":[],"src":"48747:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13825,"nodeType":"FunctionDefinition","src":"48806:77:15","nodes":[],"documentation":{"id":13818,"nodeType":"StructuredDocumentation","src":"48754:47:15","text":"Asserts that two `string` values are equal."},"functionSelector":"f320d963","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","parameters":{"id":13823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13820,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":13825,"src":"48824:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13819,"name":"string","nodeType":"ElementaryTypeName","src":"48824:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13822,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":13825,"src":"48846:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13821,"name":"string","nodeType":"ElementaryTypeName","src":"48846:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48823:45:15"},"returnParameters":{"id":13824,"nodeType":"ParameterList","parameters":[],"src":"48882:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13835,"nodeType":"FunctionDefinition","src":"48998:100:15","nodes":[],"documentation":{"id":13826,"nodeType":"StructuredDocumentation","src":"48889:104:15","text":"Asserts that two `string` values are equal and includes error message into revert string on failure."},"functionSelector":"36f656d8","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","parameters":{"id":13833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13828,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":13835,"src":"49016:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13827,"name":"string","nodeType":"ElementaryTypeName","src":"49016:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13830,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":13835,"src":"49038:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13829,"name":"string","nodeType":"ElementaryTypeName","src":"49038:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13832,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":13835,"src":"49061:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13831,"name":"string","nodeType":"ElementaryTypeName","src":"49061:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49015:68:15"},"returnParameters":{"id":13834,"nodeType":"ParameterList","parameters":[],"src":"49097:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13843,"nodeType":"FunctionDefinition","src":"49155:75:15","nodes":[],"documentation":{"id":13836,"nodeType":"StructuredDocumentation","src":"49104:46:15","text":"Asserts that two `bytes` values are equal."},"functionSelector":"97624631","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","parameters":{"id":13841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13838,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":13843,"src":"49173:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13837,"name":"bytes","nodeType":"ElementaryTypeName","src":"49173:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":13840,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":13843,"src":"49194:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13839,"name":"bytes","nodeType":"ElementaryTypeName","src":"49194:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"49172:43:15"},"returnParameters":{"id":13842,"nodeType":"ParameterList","parameters":[],"src":"49229:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13853,"nodeType":"FunctionDefinition","src":"49344:98:15","nodes":[],"documentation":{"id":13844,"nodeType":"StructuredDocumentation","src":"49236:103:15","text":"Asserts that two `bytes` values are equal and includes error message into revert string on failure."},"functionSelector":"e24fed00","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","parameters":{"id":13851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13846,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":13853,"src":"49362:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13845,"name":"bytes","nodeType":"ElementaryTypeName","src":"49362:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":13848,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":13853,"src":"49383:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13847,"name":"bytes","nodeType":"ElementaryTypeName","src":"49383:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":13850,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":13853,"src":"49405:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13849,"name":"string","nodeType":"ElementaryTypeName","src":"49405:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49361:66:15"},"returnParameters":{"id":13852,"nodeType":"ParameterList","parameters":[],"src":"49441:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13863,"nodeType":"FunctionDefinition","src":"49508:77:15","nodes":[],"documentation":{"id":13854,"nodeType":"StructuredDocumentation","src":"49448:55:15","text":"Asserts that two arrays of `bool` values are equal."},"functionSelector":"707df785","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","parameters":{"id":13861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13857,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":13863,"src":"49526:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":13855,"name":"bool","nodeType":"ElementaryTypeName","src":"49526:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":13856,"nodeType":"ArrayTypeName","src":"49526:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":13860,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":13863,"src":"49548:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":13858,"name":"bool","nodeType":"ElementaryTypeName","src":"49548:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":13859,"nodeType":"ArrayTypeName","src":"49548:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"49525:45:15"},"returnParameters":{"id":13862,"nodeType":"ParameterList","parameters":[],"src":"49584:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13875,"nodeType":"FunctionDefinition","src":"49708:100:15","nodes":[],"documentation":{"id":13864,"nodeType":"StructuredDocumentation","src":"49591:112:15","text":"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure."},"functionSelector":"e48a8f8d","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","parameters":{"id":13873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13867,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":13875,"src":"49726:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":13865,"name":"bool","nodeType":"ElementaryTypeName","src":"49726:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":13866,"nodeType":"ArrayTypeName","src":"49726:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":13870,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":13875,"src":"49748:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":13868,"name":"bool","nodeType":"ElementaryTypeName","src":"49748:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":13869,"nodeType":"ArrayTypeName","src":"49748:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":13872,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":13875,"src":"49771:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13871,"name":"string","nodeType":"ElementaryTypeName","src":"49771:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49725:68:15"},"returnParameters":{"id":13874,"nodeType":"ParameterList","parameters":[],"src":"49807:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13885,"nodeType":"FunctionDefinition","src":"49876:83:15","nodes":[],"documentation":{"id":13876,"nodeType":"StructuredDocumentation","src":"49814:57:15","text":"Asserts that two arrays of `uint256 values are equal."},"functionSelector":"975d5a12","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","parameters":{"id":13883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13879,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":13885,"src":"49894:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":13877,"name":"uint256","nodeType":"ElementaryTypeName","src":"49894:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":13878,"nodeType":"ArrayTypeName","src":"49894:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":13882,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":13885,"src":"49919:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":13880,"name":"uint256","nodeType":"ElementaryTypeName","src":"49919:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":13881,"nodeType":"ArrayTypeName","src":"49919:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"49893:51:15"},"returnParameters":{"id":13884,"nodeType":"ParameterList","parameters":[],"src":"49958:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13897,"nodeType":"FunctionDefinition","src":"50085:106:15","nodes":[],"documentation":{"id":13886,"nodeType":"StructuredDocumentation","src":"49965:115:15","text":"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure."},"functionSelector":"5d18c73a","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","parameters":{"id":13895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13889,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":13897,"src":"50103:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":13887,"name":"uint256","nodeType":"ElementaryTypeName","src":"50103:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":13888,"nodeType":"ArrayTypeName","src":"50103:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":13892,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":13897,"src":"50128:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":13890,"name":"uint256","nodeType":"ElementaryTypeName","src":"50128:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":13891,"nodeType":"ArrayTypeName","src":"50128:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":13894,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":13897,"src":"50154:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13893,"name":"string","nodeType":"ElementaryTypeName","src":"50154:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50102:74:15"},"returnParameters":{"id":13896,"nodeType":"ParameterList","parameters":[],"src":"50190:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13907,"nodeType":"FunctionDefinition","src":"50259:81:15","nodes":[],"documentation":{"id":13898,"nodeType":"StructuredDocumentation","src":"50197:57:15","text":"Asserts that two arrays of `int256` values are equal."},"functionSelector":"711043ac","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","parameters":{"id":13905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13901,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":13907,"src":"50277:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":13899,"name":"int256","nodeType":"ElementaryTypeName","src":"50277:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":13900,"nodeType":"ArrayTypeName","src":"50277:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":13904,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":13907,"src":"50301:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":13902,"name":"int256","nodeType":"ElementaryTypeName","src":"50301:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":13903,"nodeType":"ArrayTypeName","src":"50301:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"50276:49:15"},"returnParameters":{"id":13906,"nodeType":"ParameterList","parameters":[],"src":"50339:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13919,"nodeType":"FunctionDefinition","src":"50465:104:15","nodes":[],"documentation":{"id":13908,"nodeType":"StructuredDocumentation","src":"50346:114:15","text":"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure."},"functionSelector":"191f1b30","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","parameters":{"id":13917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13911,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":13919,"src":"50483:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":13909,"name":"int256","nodeType":"ElementaryTypeName","src":"50483:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":13910,"nodeType":"ArrayTypeName","src":"50483:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":13914,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":13919,"src":"50507:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":13912,"name":"int256","nodeType":"ElementaryTypeName","src":"50507:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":13913,"nodeType":"ArrayTypeName","src":"50507:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":13916,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":13919,"src":"50532:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13915,"name":"string","nodeType":"ElementaryTypeName","src":"50532:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50482:72:15"},"returnParameters":{"id":13918,"nodeType":"ParameterList","parameters":[],"src":"50568:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13927,"nodeType":"FunctionDefinition","src":"50628:61:15","nodes":[],"documentation":{"id":13920,"nodeType":"StructuredDocumentation","src":"50575:48:15","text":"Asserts that two `uint256` values are equal."},"functionSelector":"98296c54","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","parameters":{"id":13925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13922,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":13927,"src":"50646:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13921,"name":"uint256","nodeType":"ElementaryTypeName","src":"50646:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13924,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":13927,"src":"50660:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13923,"name":"uint256","nodeType":"ElementaryTypeName","src":"50660:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"50645:29:15"},"returnParameters":{"id":13926,"nodeType":"ParameterList","parameters":[],"src":"50688:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13937,"nodeType":"FunctionDefinition","src":"50758:83:15","nodes":[],"documentation":{"id":13928,"nodeType":"StructuredDocumentation","src":"50695:58:15","text":"Asserts that two arrays of `address` values are equal."},"functionSelector":"3868ac34","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","parameters":{"id":13935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13931,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":13937,"src":"50776:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13929,"name":"address","nodeType":"ElementaryTypeName","src":"50776:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13930,"nodeType":"ArrayTypeName","src":"50776:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":13934,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":13937,"src":"50801:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13932,"name":"address","nodeType":"ElementaryTypeName","src":"50801:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13933,"nodeType":"ArrayTypeName","src":"50801:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"50775:51:15"},"returnParameters":{"id":13936,"nodeType":"ParameterList","parameters":[],"src":"50840:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13949,"nodeType":"FunctionDefinition","src":"50967:106:15","nodes":[],"documentation":{"id":13938,"nodeType":"StructuredDocumentation","src":"50847:115:15","text":"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure."},"functionSelector":"3e9173c5","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","parameters":{"id":13947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13941,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":13949,"src":"50985:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13939,"name":"address","nodeType":"ElementaryTypeName","src":"50985:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13940,"nodeType":"ArrayTypeName","src":"50985:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":13944,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":13949,"src":"51010:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13942,"name":"address","nodeType":"ElementaryTypeName","src":"51010:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13943,"nodeType":"ArrayTypeName","src":"51010:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":13946,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":13949,"src":"51036:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13945,"name":"string","nodeType":"ElementaryTypeName","src":"51036:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50984:74:15"},"returnParameters":{"id":13948,"nodeType":"ParameterList","parameters":[],"src":"51072:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13959,"nodeType":"FunctionDefinition","src":"51142:83:15","nodes":[],"documentation":{"id":13950,"nodeType":"StructuredDocumentation","src":"51079:58:15","text":"Asserts that two arrays of `bytes32` values are equal."},"functionSelector":"0cc9ee84","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","parameters":{"id":13957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13953,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":13959,"src":"51160:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13951,"name":"bytes32","nodeType":"ElementaryTypeName","src":"51160:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13952,"nodeType":"ArrayTypeName","src":"51160:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":13956,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":13959,"src":"51185:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13954,"name":"bytes32","nodeType":"ElementaryTypeName","src":"51185:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13955,"nodeType":"ArrayTypeName","src":"51185:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"51159:51:15"},"returnParameters":{"id":13958,"nodeType":"ParameterList","parameters":[],"src":"51224:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13971,"nodeType":"FunctionDefinition","src":"51351:106:15","nodes":[],"documentation":{"id":13960,"nodeType":"StructuredDocumentation","src":"51231:115:15","text":"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure."},"functionSelector":"e03e9177","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","parameters":{"id":13969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13963,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":13971,"src":"51369:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13961,"name":"bytes32","nodeType":"ElementaryTypeName","src":"51369:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13962,"nodeType":"ArrayTypeName","src":"51369:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":13966,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":13971,"src":"51394:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13964,"name":"bytes32","nodeType":"ElementaryTypeName","src":"51394:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13965,"nodeType":"ArrayTypeName","src":"51394:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":13968,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":13971,"src":"51420:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13967,"name":"string","nodeType":"ElementaryTypeName","src":"51420:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51368:74:15"},"returnParameters":{"id":13970,"nodeType":"ParameterList","parameters":[],"src":"51456:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13981,"nodeType":"FunctionDefinition","src":"51525:81:15","nodes":[],"documentation":{"id":13972,"nodeType":"StructuredDocumentation","src":"51463:57:15","text":"Asserts that two arrays of `string` values are equal."},"functionSelector":"cf1c049c","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","parameters":{"id":13979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13975,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":13981,"src":"51543:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13973,"name":"string","nodeType":"ElementaryTypeName","src":"51543:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13974,"nodeType":"ArrayTypeName","src":"51543:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":13978,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":13981,"src":"51567:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13976,"name":"string","nodeType":"ElementaryTypeName","src":"51567:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13977,"nodeType":"ArrayTypeName","src":"51567:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"51542:49:15"},"returnParameters":{"id":13980,"nodeType":"ParameterList","parameters":[],"src":"51605:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13993,"nodeType":"FunctionDefinition","src":"51731:104:15","nodes":[],"documentation":{"id":13982,"nodeType":"StructuredDocumentation","src":"51612:114:15","text":"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure."},"functionSelector":"eff6b27d","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","parameters":{"id":13991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13985,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":13993,"src":"51749:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13983,"name":"string","nodeType":"ElementaryTypeName","src":"51749:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13984,"nodeType":"ArrayTypeName","src":"51749:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":13988,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":13993,"src":"51773:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13986,"name":"string","nodeType":"ElementaryTypeName","src":"51773:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13987,"nodeType":"ArrayTypeName","src":"51773:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":13990,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":13993,"src":"51798:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13989,"name":"string","nodeType":"ElementaryTypeName","src":"51798:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51748:72:15"},"returnParameters":{"id":13992,"nodeType":"ParameterList","parameters":[],"src":"51834:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14003,"nodeType":"FunctionDefinition","src":"51902:79:15","nodes":[],"documentation":{"id":13994,"nodeType":"StructuredDocumentation","src":"51841:56:15","text":"Asserts that two arrays of `bytes` values are equal."},"functionSelector":"e5fb9b4a","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","parameters":{"id":14001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13997,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14003,"src":"51920:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":13995,"name":"bytes","nodeType":"ElementaryTypeName","src":"51920:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":13996,"nodeType":"ArrayTypeName","src":"51920:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":14000,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14003,"src":"51943:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":13998,"name":"bytes","nodeType":"ElementaryTypeName","src":"51943:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":13999,"nodeType":"ArrayTypeName","src":"51943:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"51919:47:15"},"returnParameters":{"id":14002,"nodeType":"ParameterList","parameters":[],"src":"51980:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14015,"nodeType":"FunctionDefinition","src":"52105:102:15","nodes":[],"documentation":{"id":14004,"nodeType":"StructuredDocumentation","src":"51987:113:15","text":"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure."},"functionSelector":"f413f0b6","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","parameters":{"id":14013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14007,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14015,"src":"52123:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":14005,"name":"bytes","nodeType":"ElementaryTypeName","src":"52123:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":14006,"nodeType":"ArrayTypeName","src":"52123:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":14010,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14015,"src":"52146:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":14008,"name":"bytes","nodeType":"ElementaryTypeName","src":"52146:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":14009,"nodeType":"ArrayTypeName","src":"52146:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":14012,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":14015,"src":"52170:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14011,"name":"string","nodeType":"ElementaryTypeName","src":"52170:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52122:70:15"},"returnParameters":{"id":14014,"nodeType":"ParameterList","parameters":[],"src":"52206:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14025,"nodeType":"FunctionDefinition","src":"52323:84:15","nodes":[],"documentation":{"id":14016,"nodeType":"StructuredDocumentation","src":"52213:105:15","text":"Asserts that two `uint256` values are equal and includes error message into revert string on failure."},"functionSelector":"88b44c85","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","parameters":{"id":14023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14018,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14025,"src":"52341:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14017,"name":"uint256","nodeType":"ElementaryTypeName","src":"52341:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14020,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14025,"src":"52355:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14019,"name":"uint256","nodeType":"ElementaryTypeName","src":"52355:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14022,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":14025,"src":"52370:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14021,"name":"string","nodeType":"ElementaryTypeName","src":"52370:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52340:52:15"},"returnParameters":{"id":14024,"nodeType":"ParameterList","parameters":[],"src":"52406:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14033,"nodeType":"FunctionDefinition","src":"52465:59:15","nodes":[],"documentation":{"id":14026,"nodeType":"StructuredDocumentation","src":"52413:47:15","text":"Asserts that two `int256` values are equal."},"functionSelector":"fe74f05b","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","parameters":{"id":14031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14028,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14033,"src":"52483:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14027,"name":"int256","nodeType":"ElementaryTypeName","src":"52483:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14030,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14033,"src":"52496:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14029,"name":"int256","nodeType":"ElementaryTypeName","src":"52496:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"52482:27:15"},"returnParameters":{"id":14032,"nodeType":"ParameterList","parameters":[],"src":"52523:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14043,"nodeType":"FunctionDefinition","src":"52639:82:15","nodes":[],"documentation":{"id":14034,"nodeType":"StructuredDocumentation","src":"52530:104:15","text":"Asserts that two `int256` values are equal and includes error message into revert string on failure."},"functionSelector":"714a2f13","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","parameters":{"id":14041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14036,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14043,"src":"52657:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14035,"name":"int256","nodeType":"ElementaryTypeName","src":"52657:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14038,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14043,"src":"52670:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14037,"name":"int256","nodeType":"ElementaryTypeName","src":"52670:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14040,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":14043,"src":"52684:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14039,"name":"string","nodeType":"ElementaryTypeName","src":"52684:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52656:50:15"},"returnParameters":{"id":14042,"nodeType":"ParameterList","parameters":[],"src":"52720:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14051,"nodeType":"FunctionDefinition","src":"52780:61:15","nodes":[],"documentation":{"id":14044,"nodeType":"StructuredDocumentation","src":"52727:48:15","text":"Asserts that two `address` values are equal."},"functionSelector":"515361f6","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","parameters":{"id":14049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14046,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14051,"src":"52798:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14045,"name":"address","nodeType":"ElementaryTypeName","src":"52798:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14048,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14051,"src":"52812:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14047,"name":"address","nodeType":"ElementaryTypeName","src":"52812:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"52797:29:15"},"returnParameters":{"id":14050,"nodeType":"ParameterList","parameters":[],"src":"52840:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14061,"nodeType":"FunctionDefinition","src":"52957:84:15","nodes":[],"documentation":{"id":14052,"nodeType":"StructuredDocumentation","src":"52847:105:15","text":"Asserts that two `address` values are equal and includes error message into revert string on failure."},"functionSelector":"2f2769d1","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","parameters":{"id":14059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14054,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14061,"src":"52975:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14053,"name":"address","nodeType":"ElementaryTypeName","src":"52975:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14056,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14061,"src":"52989:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14055,"name":"address","nodeType":"ElementaryTypeName","src":"52989:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14058,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":14061,"src":"53004:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14057,"name":"string","nodeType":"ElementaryTypeName","src":"53004:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52974:52:15"},"returnParameters":{"id":14060,"nodeType":"ParameterList","parameters":[],"src":"53040:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14069,"nodeType":"FunctionDefinition","src":"53100:61:15","nodes":[],"documentation":{"id":14062,"nodeType":"StructuredDocumentation","src":"53047:48:15","text":"Asserts that two `bytes32` values are equal."},"functionSelector":"7c84c69b","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","parameters":{"id":14067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14064,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14069,"src":"53118:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14063,"name":"bytes32","nodeType":"ElementaryTypeName","src":"53118:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":14066,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14069,"src":"53132:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14065,"name":"bytes32","nodeType":"ElementaryTypeName","src":"53132:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"53117:29:15"},"returnParameters":{"id":14068,"nodeType":"ParameterList","parameters":[],"src":"53160:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14079,"nodeType":"FunctionDefinition","src":"53277:84:15","nodes":[],"documentation":{"id":14070,"nodeType":"StructuredDocumentation","src":"53167:105:15","text":"Asserts that two `bytes32` values are equal and includes error message into revert string on failure."},"functionSelector":"c1fa1ed0","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","parameters":{"id":14077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14072,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14079,"src":"53295:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14071,"name":"bytes32","nodeType":"ElementaryTypeName","src":"53295:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":14074,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14079,"src":"53309:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14073,"name":"bytes32","nodeType":"ElementaryTypeName","src":"53309:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":14076,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":14079,"src":"53324:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14075,"name":"string","nodeType":"ElementaryTypeName","src":"53324:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53294:52:15"},"returnParameters":{"id":14078,"nodeType":"ParameterList","parameters":[],"src":"53360:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14085,"nodeType":"FunctionDefinition","src":"53418:51:15","nodes":[],"documentation":{"id":14080,"nodeType":"StructuredDocumentation","src":"53367:46:15","text":"Asserts that the given condition is false."},"functionSelector":"a5982885","implemented":false,"kind":"function","modifiers":[],"name":"assertFalse","parameters":{"id":14083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14082,"mutability":"mutable","name":"condition","nodeType":"VariableDeclaration","scope":14085,"src":"53439:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14081,"name":"bool","nodeType":"ElementaryTypeName","src":"53439:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"53438:16:15"},"returnParameters":{"id":14084,"nodeType":"ParameterList","parameters":[],"src":"53468:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14093,"nodeType":"FunctionDefinition","src":"53583:74:15","nodes":[],"documentation":{"id":14086,"nodeType":"StructuredDocumentation","src":"53475:103:15","text":"Asserts that the given condition is false and includes error message into revert string on failure."},"functionSelector":"7ba04809","implemented":false,"kind":"function","modifiers":[],"name":"assertFalse","parameters":{"id":14091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14088,"mutability":"mutable","name":"condition","nodeType":"VariableDeclaration","scope":14093,"src":"53604:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14087,"name":"bool","nodeType":"ElementaryTypeName","src":"53604:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14090,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":14093,"src":"53620:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14089,"name":"string","nodeType":"ElementaryTypeName","src":"53620:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53603:39:15"},"returnParameters":{"id":14092,"nodeType":"ParameterList","parameters":[],"src":"53656:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14103,"nodeType":"FunctionDefinition","src":"53818:86:15","nodes":[],"documentation":{"id":14094,"nodeType":"StructuredDocumentation","src":"53663:150:15","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"3d1fe08a","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","parameters":{"id":14101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14096,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14103,"src":"53843:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14095,"name":"uint256","nodeType":"ElementaryTypeName","src":"53843:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14098,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14103,"src":"53857:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14097,"name":"uint256","nodeType":"ElementaryTypeName","src":"53857:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14100,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","scope":14103,"src":"53872:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14099,"name":"uint256","nodeType":"ElementaryTypeName","src":"53872:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"53842:47:15"},"returnParameters":{"id":14102,"nodeType":"ParameterList","parameters":[],"src":"53903:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14115,"nodeType":"FunctionDefinition","src":"54119:109:15","nodes":[],"documentation":{"id":14104,"nodeType":"StructuredDocumentation","src":"53910:204:15","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"8bff9133","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","parameters":{"id":14113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14106,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14115,"src":"54144:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14105,"name":"uint256","nodeType":"ElementaryTypeName","src":"54144:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14108,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14115,"src":"54158:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14107,"name":"uint256","nodeType":"ElementaryTypeName","src":"54158:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14110,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","scope":14115,"src":"54173:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14109,"name":"uint256","nodeType":"ElementaryTypeName","src":"54173:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14112,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":14115,"src":"54191:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14111,"name":"string","nodeType":"ElementaryTypeName","src":"54191:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54143:70:15"},"returnParameters":{"id":14114,"nodeType":"ParameterList","parameters":[],"src":"54227:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14125,"nodeType":"FunctionDefinition","src":"54388:84:15","nodes":[],"documentation":{"id":14116,"nodeType":"StructuredDocumentation","src":"54234:149:15","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"dc28c0f1","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","parameters":{"id":14123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14118,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14125,"src":"54413:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14117,"name":"int256","nodeType":"ElementaryTypeName","src":"54413:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14120,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14125,"src":"54426:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14119,"name":"int256","nodeType":"ElementaryTypeName","src":"54426:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14122,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","scope":14125,"src":"54440:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14121,"name":"uint256","nodeType":"ElementaryTypeName","src":"54440:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"54412:45:15"},"returnParameters":{"id":14124,"nodeType":"ParameterList","parameters":[],"src":"54471:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14137,"nodeType":"FunctionDefinition","src":"54686:107:15","nodes":[],"documentation":{"id":14126,"nodeType":"StructuredDocumentation","src":"54478:203:15","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"5df93c9b","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","parameters":{"id":14135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14128,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14137,"src":"54711:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14127,"name":"int256","nodeType":"ElementaryTypeName","src":"54711:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14130,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14137,"src":"54724:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14129,"name":"int256","nodeType":"ElementaryTypeName","src":"54724:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14132,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","scope":14137,"src":"54738:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14131,"name":"uint256","nodeType":"ElementaryTypeName","src":"54738:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14134,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":14137,"src":"54756:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14133,"name":"string","nodeType":"ElementaryTypeName","src":"54756:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54710:68:15"},"returnParameters":{"id":14136,"nodeType":"ParameterList","parameters":[],"src":"54792:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14145,"nodeType":"FunctionDefinition","src":"54897:61:15","nodes":[],"documentation":{"id":14138,"nodeType":"StructuredDocumentation","src":"54799:93:15","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second."},"functionSelector":"a8d4d1d9","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","parameters":{"id":14143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14140,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14145,"src":"54915:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14139,"name":"uint256","nodeType":"ElementaryTypeName","src":"54915:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14142,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14145,"src":"54929:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14141,"name":"uint256","nodeType":"ElementaryTypeName","src":"54929:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"54914:29:15"},"returnParameters":{"id":14144,"nodeType":"ParameterList","parameters":[],"src":"54957:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14155,"nodeType":"FunctionDefinition","src":"55124:84:15","nodes":[],"documentation":{"id":14146,"nodeType":"StructuredDocumentation","src":"54964:155:15","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"e25242c0","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","parameters":{"id":14153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14148,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14155,"src":"55142:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14147,"name":"uint256","nodeType":"ElementaryTypeName","src":"55142:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14150,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14155,"src":"55156:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14149,"name":"uint256","nodeType":"ElementaryTypeName","src":"55156:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14152,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":14155,"src":"55171:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14151,"name":"string","nodeType":"ElementaryTypeName","src":"55171:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55141:52:15"},"returnParameters":{"id":14154,"nodeType":"ParameterList","parameters":[],"src":"55207:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14163,"nodeType":"FunctionDefinition","src":"55311:59:15","nodes":[],"documentation":{"id":14156,"nodeType":"StructuredDocumentation","src":"55214:92:15","text":"Compares two `int256` values. Expects first value to be greater than or equal to second."},"functionSelector":"0a30b771","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","parameters":{"id":14161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14158,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14163,"src":"55329:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14157,"name":"int256","nodeType":"ElementaryTypeName","src":"55329:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14160,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14163,"src":"55342:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14159,"name":"int256","nodeType":"ElementaryTypeName","src":"55342:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"55328:27:15"},"returnParameters":{"id":14162,"nodeType":"ParameterList","parameters":[],"src":"55369:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14173,"nodeType":"FunctionDefinition","src":"55535:82:15","nodes":[],"documentation":{"id":14164,"nodeType":"StructuredDocumentation","src":"55376:154:15","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"a84328dd","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","parameters":{"id":14171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14166,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14173,"src":"55553:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14165,"name":"int256","nodeType":"ElementaryTypeName","src":"55553:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14168,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14173,"src":"55566:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14167,"name":"int256","nodeType":"ElementaryTypeName","src":"55566:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14170,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":14173,"src":"55580:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14169,"name":"string","nodeType":"ElementaryTypeName","src":"55580:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55552:50:15"},"returnParameters":{"id":14172,"nodeType":"ParameterList","parameters":[],"src":"55616:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14183,"nodeType":"FunctionDefinition","src":"55766:86:15","nodes":[],"documentation":{"id":14174,"nodeType":"StructuredDocumentation","src":"55623:138:15","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message."},"functionSelector":"eccd2437","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","parameters":{"id":14181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14176,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14183,"src":"55791:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14175,"name":"uint256","nodeType":"ElementaryTypeName","src":"55791:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14178,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14183,"src":"55805:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14177,"name":"uint256","nodeType":"ElementaryTypeName","src":"55805:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14180,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","scope":14183,"src":"55820:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14179,"name":"uint256","nodeType":"ElementaryTypeName","src":"55820:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"55790:47:15"},"returnParameters":{"id":14182,"nodeType":"ParameterList","parameters":[],"src":"55851:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14195,"nodeType":"FunctionDefinition","src":"56055:109:15","nodes":[],"documentation":{"id":14184,"nodeType":"StructuredDocumentation","src":"55858:192:15","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"64949a8d","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","parameters":{"id":14193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14186,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14195,"src":"56080:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14185,"name":"uint256","nodeType":"ElementaryTypeName","src":"56080:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14188,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14195,"src":"56094:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14187,"name":"uint256","nodeType":"ElementaryTypeName","src":"56094:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14190,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","scope":14195,"src":"56109:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14189,"name":"uint256","nodeType":"ElementaryTypeName","src":"56109:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14192,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":14195,"src":"56127:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14191,"name":"string","nodeType":"ElementaryTypeName","src":"56127:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56079:70:15"},"returnParameters":{"id":14194,"nodeType":"ParameterList","parameters":[],"src":"56163:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14205,"nodeType":"FunctionDefinition","src":"56312:84:15","nodes":[],"documentation":{"id":14196,"nodeType":"StructuredDocumentation","src":"56170:137:15","text":"Compares two `int256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message."},"functionSelector":"78611f0e","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","parameters":{"id":14203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14198,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14205,"src":"56337:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14197,"name":"int256","nodeType":"ElementaryTypeName","src":"56337:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14200,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14205,"src":"56350:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14199,"name":"int256","nodeType":"ElementaryTypeName","src":"56350:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14202,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","scope":14205,"src":"56364:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14201,"name":"uint256","nodeType":"ElementaryTypeName","src":"56364:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"56336:45:15"},"returnParameters":{"id":14204,"nodeType":"ParameterList","parameters":[],"src":"56395:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14217,"nodeType":"FunctionDefinition","src":"56598:107:15","nodes":[],"documentation":{"id":14206,"nodeType":"StructuredDocumentation","src":"56402:191:15","text":"Compares two `int256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"04a5c7ab","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","parameters":{"id":14215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14208,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14217,"src":"56623:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14207,"name":"int256","nodeType":"ElementaryTypeName","src":"56623:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14210,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14217,"src":"56636:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14209,"name":"int256","nodeType":"ElementaryTypeName","src":"56636:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14212,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","scope":14217,"src":"56650:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14211,"name":"uint256","nodeType":"ElementaryTypeName","src":"56650:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14214,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":14217,"src":"56668:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14213,"name":"string","nodeType":"ElementaryTypeName","src":"56668:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56622:68:15"},"returnParameters":{"id":14216,"nodeType":"ParameterList","parameters":[],"src":"56704:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14225,"nodeType":"FunctionDefinition","src":"56797:61:15","nodes":[],"documentation":{"id":14218,"nodeType":"StructuredDocumentation","src":"56711:81:15","text":"Compares two `uint256` values. Expects first value to be greater than second."},"functionSelector":"db07fcd2","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","parameters":{"id":14223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14220,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14225,"src":"56815:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14219,"name":"uint256","nodeType":"ElementaryTypeName","src":"56815:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14222,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14225,"src":"56829:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14221,"name":"uint256","nodeType":"ElementaryTypeName","src":"56829:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"56814:29:15"},"returnParameters":{"id":14224,"nodeType":"ParameterList","parameters":[],"src":"56857:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14235,"nodeType":"FunctionDefinition","src":"57012:84:15","nodes":[],"documentation":{"id":14226,"nodeType":"StructuredDocumentation","src":"56864:143:15","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Includes error message into revert string on failure."},"functionSelector":"d9a3c4d2","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","parameters":{"id":14233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14228,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14235,"src":"57030:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14227,"name":"uint256","nodeType":"ElementaryTypeName","src":"57030:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14230,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14235,"src":"57044:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14229,"name":"uint256","nodeType":"ElementaryTypeName","src":"57044:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14232,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":14235,"src":"57059:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14231,"name":"string","nodeType":"ElementaryTypeName","src":"57059:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57029:52:15"},"returnParameters":{"id":14234,"nodeType":"ParameterList","parameters":[],"src":"57095:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14243,"nodeType":"FunctionDefinition","src":"57187:59:15","nodes":[],"documentation":{"id":14236,"nodeType":"StructuredDocumentation","src":"57102:80:15","text":"Compares two `int256` values. Expects first value to be greater than second."},"functionSelector":"5a362d45","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","parameters":{"id":14241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14238,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14243,"src":"57205:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14237,"name":"int256","nodeType":"ElementaryTypeName","src":"57205:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14240,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14243,"src":"57218:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14239,"name":"int256","nodeType":"ElementaryTypeName","src":"57218:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"57204:27:15"},"returnParameters":{"id":14242,"nodeType":"ParameterList","parameters":[],"src":"57245:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14253,"nodeType":"FunctionDefinition","src":"57399:82:15","nodes":[],"documentation":{"id":14244,"nodeType":"StructuredDocumentation","src":"57252:142:15","text":"Compares two `int256` values. Expects first value to be greater than second.\n Includes error message into revert string on failure."},"functionSelector":"f8d33b9b","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","parameters":{"id":14251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14246,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14253,"src":"57417:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14245,"name":"int256","nodeType":"ElementaryTypeName","src":"57417:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14248,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14253,"src":"57430:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14247,"name":"int256","nodeType":"ElementaryTypeName","src":"57430:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14250,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":14253,"src":"57444:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14249,"name":"string","nodeType":"ElementaryTypeName","src":"57444:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57416:50:15"},"returnParameters":{"id":14252,"nodeType":"ParameterList","parameters":[],"src":"57480:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14263,"nodeType":"FunctionDefinition","src":"57639:86:15","nodes":[],"documentation":{"id":14254,"nodeType":"StructuredDocumentation","src":"57487:147:15","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"c304aab7","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","parameters":{"id":14261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14256,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14263,"src":"57664:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14255,"name":"uint256","nodeType":"ElementaryTypeName","src":"57664:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14258,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14263,"src":"57678:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14257,"name":"uint256","nodeType":"ElementaryTypeName","src":"57678:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14260,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","scope":14263,"src":"57693:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14259,"name":"uint256","nodeType":"ElementaryTypeName","src":"57693:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"57663:47:15"},"returnParameters":{"id":14262,"nodeType":"ParameterList","parameters":[],"src":"57724:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14275,"nodeType":"FunctionDefinition","src":"57937:109:15","nodes":[],"documentation":{"id":14264,"nodeType":"StructuredDocumentation","src":"57731:201:15","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"7fefbbe0","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","parameters":{"id":14273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14266,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14275,"src":"57962:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14265,"name":"uint256","nodeType":"ElementaryTypeName","src":"57962:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14268,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14275,"src":"57976:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14267,"name":"uint256","nodeType":"ElementaryTypeName","src":"57976:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14270,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","scope":14275,"src":"57991:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14269,"name":"uint256","nodeType":"ElementaryTypeName","src":"57991:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14272,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":14275,"src":"58009:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14271,"name":"string","nodeType":"ElementaryTypeName","src":"58009:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57961:70:15"},"returnParameters":{"id":14274,"nodeType":"ParameterList","parameters":[],"src":"58045:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14285,"nodeType":"FunctionDefinition","src":"58203:84:15","nodes":[],"documentation":{"id":14276,"nodeType":"StructuredDocumentation","src":"58052:146:15","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"11d1364a","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","parameters":{"id":14283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14278,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14285,"src":"58228:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14277,"name":"int256","nodeType":"ElementaryTypeName","src":"58228:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14280,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14285,"src":"58241:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14279,"name":"int256","nodeType":"ElementaryTypeName","src":"58241:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14282,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","scope":14285,"src":"58255:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14281,"name":"uint256","nodeType":"ElementaryTypeName","src":"58255:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"58227:45:15"},"returnParameters":{"id":14284,"nodeType":"ParameterList","parameters":[],"src":"58286:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14297,"nodeType":"FunctionDefinition","src":"58498:107:15","nodes":[],"documentation":{"id":14286,"nodeType":"StructuredDocumentation","src":"58293:200:15","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"aa5cf788","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","parameters":{"id":14295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14288,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14297,"src":"58523:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14287,"name":"int256","nodeType":"ElementaryTypeName","src":"58523:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14290,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14297,"src":"58536:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14289,"name":"int256","nodeType":"ElementaryTypeName","src":"58536:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14292,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","scope":14297,"src":"58550:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14291,"name":"uint256","nodeType":"ElementaryTypeName","src":"58550:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14294,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":14297,"src":"58568:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14293,"name":"string","nodeType":"ElementaryTypeName","src":"58568:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58522:68:15"},"returnParameters":{"id":14296,"nodeType":"ParameterList","parameters":[],"src":"58604:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14305,"nodeType":"FunctionDefinition","src":"58706:61:15","nodes":[],"documentation":{"id":14298,"nodeType":"StructuredDocumentation","src":"58611:90:15","text":"Compares two `uint256` values. Expects first value to be less than or equal to second."},"functionSelector":"8466f415","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","parameters":{"id":14303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14300,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14305,"src":"58724:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14299,"name":"uint256","nodeType":"ElementaryTypeName","src":"58724:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14302,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14305,"src":"58738:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14301,"name":"uint256","nodeType":"ElementaryTypeName","src":"58738:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"58723:29:15"},"returnParameters":{"id":14304,"nodeType":"ParameterList","parameters":[],"src":"58766:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14315,"nodeType":"FunctionDefinition","src":"58930:84:15","nodes":[],"documentation":{"id":14306,"nodeType":"StructuredDocumentation","src":"58773:152:15","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"d17d4b0d","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","parameters":{"id":14313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14308,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14315,"src":"58948:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14307,"name":"uint256","nodeType":"ElementaryTypeName","src":"58948:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14310,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14315,"src":"58962:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14309,"name":"uint256","nodeType":"ElementaryTypeName","src":"58962:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14312,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":14315,"src":"58977:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14311,"name":"string","nodeType":"ElementaryTypeName","src":"58977:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58947:52:15"},"returnParameters":{"id":14314,"nodeType":"ParameterList","parameters":[],"src":"59013:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14323,"nodeType":"FunctionDefinition","src":"59114:59:15","nodes":[],"documentation":{"id":14316,"nodeType":"StructuredDocumentation","src":"59020:89:15","text":"Compares two `int256` values. Expects first value to be less than or equal to second."},"functionSelector":"95fd154e","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","parameters":{"id":14321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14318,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14323,"src":"59132:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14317,"name":"int256","nodeType":"ElementaryTypeName","src":"59132:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14320,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14323,"src":"59145:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14319,"name":"int256","nodeType":"ElementaryTypeName","src":"59145:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"59131:27:15"},"returnParameters":{"id":14322,"nodeType":"ParameterList","parameters":[],"src":"59172:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14333,"nodeType":"FunctionDefinition","src":"59335:82:15","nodes":[],"documentation":{"id":14324,"nodeType":"StructuredDocumentation","src":"59179:151:15","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"4dfe692c","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","parameters":{"id":14331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14326,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14333,"src":"59353:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14325,"name":"int256","nodeType":"ElementaryTypeName","src":"59353:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14328,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14333,"src":"59366:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14327,"name":"int256","nodeType":"ElementaryTypeName","src":"59366:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14330,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":14333,"src":"59380:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14329,"name":"string","nodeType":"ElementaryTypeName","src":"59380:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59352:50:15"},"returnParameters":{"id":14332,"nodeType":"ParameterList","parameters":[],"src":"59416:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14343,"nodeType":"FunctionDefinition","src":"59563:86:15","nodes":[],"documentation":{"id":14334,"nodeType":"StructuredDocumentation","src":"59423:135:15","text":"Compares two `uint256` values. Expects first value to be less than second.\n Formats values with decimals in failure message."},"functionSelector":"2077337e","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","parameters":{"id":14341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14336,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14343,"src":"59588:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14335,"name":"uint256","nodeType":"ElementaryTypeName","src":"59588:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14338,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14343,"src":"59602:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14337,"name":"uint256","nodeType":"ElementaryTypeName","src":"59602:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14340,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","scope":14343,"src":"59617:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14339,"name":"uint256","nodeType":"ElementaryTypeName","src":"59617:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"59587:47:15"},"returnParameters":{"id":14342,"nodeType":"ParameterList","parameters":[],"src":"59648:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14355,"nodeType":"FunctionDefinition","src":"59849:109:15","nodes":[],"documentation":{"id":14344,"nodeType":"StructuredDocumentation","src":"59655:189:15","text":"Compares two `uint256` values. Expects first value to be less than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"a972d037","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","parameters":{"id":14353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14346,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14355,"src":"59874:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14345,"name":"uint256","nodeType":"ElementaryTypeName","src":"59874:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14348,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14355,"src":"59888:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14347,"name":"uint256","nodeType":"ElementaryTypeName","src":"59888:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14350,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","scope":14355,"src":"59903:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14349,"name":"uint256","nodeType":"ElementaryTypeName","src":"59903:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14352,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":14355,"src":"59921:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14351,"name":"string","nodeType":"ElementaryTypeName","src":"59921:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59873:70:15"},"returnParameters":{"id":14354,"nodeType":"ParameterList","parameters":[],"src":"59957:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14365,"nodeType":"FunctionDefinition","src":"60103:84:15","nodes":[],"documentation":{"id":14356,"nodeType":"StructuredDocumentation","src":"59964:134:15","text":"Compares two `int256` values. Expects first value to be less than second.\n Formats values with decimals in failure message."},"functionSelector":"dbe8d88b","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","parameters":{"id":14363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14358,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14365,"src":"60128:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14357,"name":"int256","nodeType":"ElementaryTypeName","src":"60128:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14360,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14365,"src":"60141:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14359,"name":"int256","nodeType":"ElementaryTypeName","src":"60141:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14362,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","scope":14365,"src":"60155:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14361,"name":"uint256","nodeType":"ElementaryTypeName","src":"60155:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"60127:45:15"},"returnParameters":{"id":14364,"nodeType":"ParameterList","parameters":[],"src":"60186:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14377,"nodeType":"FunctionDefinition","src":"60386:107:15","nodes":[],"documentation":{"id":14366,"nodeType":"StructuredDocumentation","src":"60193:188:15","text":"Compares two `int256` values. Expects first value to be less than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"40f0b4e0","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","parameters":{"id":14375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14368,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14377,"src":"60411:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14367,"name":"int256","nodeType":"ElementaryTypeName","src":"60411:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14370,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14377,"src":"60424:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14369,"name":"int256","nodeType":"ElementaryTypeName","src":"60424:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14372,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","scope":14377,"src":"60438:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14371,"name":"uint256","nodeType":"ElementaryTypeName","src":"60438:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14374,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":14377,"src":"60456:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14373,"name":"string","nodeType":"ElementaryTypeName","src":"60456:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60410:68:15"},"returnParameters":{"id":14376,"nodeType":"ParameterList","parameters":[],"src":"60492:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14385,"nodeType":"FunctionDefinition","src":"60582:61:15","nodes":[],"documentation":{"id":14378,"nodeType":"StructuredDocumentation","src":"60499:78:15","text":"Compares two `uint256` values. Expects first value to be less than second."},"functionSelector":"b12fc005","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","parameters":{"id":14383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14380,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14385,"src":"60600:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14379,"name":"uint256","nodeType":"ElementaryTypeName","src":"60600:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14382,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14385,"src":"60614:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14381,"name":"uint256","nodeType":"ElementaryTypeName","src":"60614:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"60599:29:15"},"returnParameters":{"id":14384,"nodeType":"ParameterList","parameters":[],"src":"60642:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14395,"nodeType":"FunctionDefinition","src":"60794:84:15","nodes":[],"documentation":{"id":14386,"nodeType":"StructuredDocumentation","src":"60649:140:15","text":"Compares two `uint256` values. Expects first value to be less than second.\n Includes error message into revert string on failure."},"functionSelector":"65d5c135","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","parameters":{"id":14393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14388,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14395,"src":"60812:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14387,"name":"uint256","nodeType":"ElementaryTypeName","src":"60812:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14390,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14395,"src":"60826:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14389,"name":"uint256","nodeType":"ElementaryTypeName","src":"60826:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14392,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":14395,"src":"60841:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14391,"name":"string","nodeType":"ElementaryTypeName","src":"60841:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60811:52:15"},"returnParameters":{"id":14394,"nodeType":"ParameterList","parameters":[],"src":"60877:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14403,"nodeType":"FunctionDefinition","src":"60966:59:15","nodes":[],"documentation":{"id":14396,"nodeType":"StructuredDocumentation","src":"60884:77:15","text":"Compares two `int256` values. Expects first value to be less than second."},"functionSelector":"3e914080","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","parameters":{"id":14401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14398,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14403,"src":"60984:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14397,"name":"int256","nodeType":"ElementaryTypeName","src":"60984:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14400,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14403,"src":"60997:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14399,"name":"int256","nodeType":"ElementaryTypeName","src":"60997:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"60983:27:15"},"returnParameters":{"id":14402,"nodeType":"ParameterList","parameters":[],"src":"61024:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14413,"nodeType":"FunctionDefinition","src":"61175:82:15","nodes":[],"documentation":{"id":14404,"nodeType":"StructuredDocumentation","src":"61031:139:15","text":"Compares two `int256` values. Expects first value to be less than second.\n Includes error message into revert string on failure."},"functionSelector":"9ff531e3","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","parameters":{"id":14411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14406,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14413,"src":"61193:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14405,"name":"int256","nodeType":"ElementaryTypeName","src":"61193:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14408,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14413,"src":"61206:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14407,"name":"int256","nodeType":"ElementaryTypeName","src":"61206:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14410,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":14413,"src":"61220:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14409,"name":"string","nodeType":"ElementaryTypeName","src":"61220:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61192:50:15"},"returnParameters":{"id":14412,"nodeType":"ParameterList","parameters":[],"src":"61256:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14423,"nodeType":"FunctionDefinition","src":"61370:89:15","nodes":[],"documentation":{"id":14414,"nodeType":"StructuredDocumentation","src":"61263:102:15","text":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message."},"functionSelector":"669efca7","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","parameters":{"id":14421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14416,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14423,"src":"61398:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14415,"name":"uint256","nodeType":"ElementaryTypeName","src":"61398:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14418,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14423,"src":"61412:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14417,"name":"uint256","nodeType":"ElementaryTypeName","src":"61412:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14420,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","scope":14423,"src":"61427:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14419,"name":"uint256","nodeType":"ElementaryTypeName","src":"61427:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"61397:47:15"},"returnParameters":{"id":14422,"nodeType":"ParameterList","parameters":[],"src":"61458:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14435,"nodeType":"FunctionDefinition","src":"61634:112:15","nodes":[],"documentation":{"id":14424,"nodeType":"StructuredDocumentation","src":"61465:164:15","text":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"f5a55558","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","parameters":{"id":14433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14426,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14435,"src":"61662:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14425,"name":"uint256","nodeType":"ElementaryTypeName","src":"61662:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14428,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14435,"src":"61676:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14427,"name":"uint256","nodeType":"ElementaryTypeName","src":"61676:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14430,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","scope":14435,"src":"61691:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14429,"name":"uint256","nodeType":"ElementaryTypeName","src":"61691:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14432,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":14435,"src":"61709:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14431,"name":"string","nodeType":"ElementaryTypeName","src":"61709:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61661:70:15"},"returnParameters":{"id":14434,"nodeType":"ParameterList","parameters":[],"src":"61745:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14445,"nodeType":"FunctionDefinition","src":"61858:87:15","nodes":[],"documentation":{"id":14436,"nodeType":"StructuredDocumentation","src":"61752:101:15","text":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message."},"functionSelector":"14e75680","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","parameters":{"id":14443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14438,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14445,"src":"61886:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14437,"name":"int256","nodeType":"ElementaryTypeName","src":"61886:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14440,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14445,"src":"61899:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14439,"name":"int256","nodeType":"ElementaryTypeName","src":"61899:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14442,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","scope":14445,"src":"61913:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14441,"name":"uint256","nodeType":"ElementaryTypeName","src":"61913:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"61885:45:15"},"returnParameters":{"id":14444,"nodeType":"ParameterList","parameters":[],"src":"61944:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14457,"nodeType":"FunctionDefinition","src":"62119:110:15","nodes":[],"documentation":{"id":14446,"nodeType":"StructuredDocumentation","src":"61951:163:15","text":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"33949f0b","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","parameters":{"id":14455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14448,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14457,"src":"62147:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14447,"name":"int256","nodeType":"ElementaryTypeName","src":"62147:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14450,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14457,"src":"62160:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14449,"name":"int256","nodeType":"ElementaryTypeName","src":"62160:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14452,"mutability":"mutable","name":"decimals","nodeType":"VariableDeclaration","scope":14457,"src":"62174:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14451,"name":"uint256","nodeType":"ElementaryTypeName","src":"62174:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14454,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":14457,"src":"62192:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14453,"name":"string","nodeType":"ElementaryTypeName","src":"62192:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62146:68:15"},"returnParameters":{"id":14456,"nodeType":"ParameterList","parameters":[],"src":"62228:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14465,"nodeType":"FunctionDefinition","src":"62289:58:15","nodes":[],"documentation":{"id":14458,"nodeType":"StructuredDocumentation","src":"62235:49:15","text":"Asserts that two `bool` values are not equal."},"functionSelector":"236e4d66","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","parameters":{"id":14463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14460,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14465,"src":"62310:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14459,"name":"bool","nodeType":"ElementaryTypeName","src":"62310:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14462,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14465,"src":"62321:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14461,"name":"bool","nodeType":"ElementaryTypeName","src":"62321:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"62309:23:15"},"returnParameters":{"id":14464,"nodeType":"ParameterList","parameters":[],"src":"62346:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14475,"nodeType":"FunctionDefinition","src":"62464:81:15","nodes":[],"documentation":{"id":14466,"nodeType":"StructuredDocumentation","src":"62353:106:15","text":"Asserts that two `bool` values are not equal and includes error message into revert string on failure."},"functionSelector":"1091a261","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","parameters":{"id":14473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14468,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14475,"src":"62485:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14467,"name":"bool","nodeType":"ElementaryTypeName","src":"62485:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14470,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14475,"src":"62496:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14469,"name":"bool","nodeType":"ElementaryTypeName","src":"62496:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14472,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":14475,"src":"62508:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14471,"name":"string","nodeType":"ElementaryTypeName","src":"62508:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62484:46:15"},"returnParameters":{"id":14474,"nodeType":"ParameterList","parameters":[],"src":"62544:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14483,"nodeType":"FunctionDefinition","src":"62607:80:15","nodes":[],"documentation":{"id":14476,"nodeType":"StructuredDocumentation","src":"62551:51:15","text":"Asserts that two `string` values are not equal."},"functionSelector":"6a8237b3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","parameters":{"id":14481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14478,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14483,"src":"62628:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14477,"name":"string","nodeType":"ElementaryTypeName","src":"62628:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14480,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14483,"src":"62650:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14479,"name":"string","nodeType":"ElementaryTypeName","src":"62650:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62627:45:15"},"returnParameters":{"id":14482,"nodeType":"ParameterList","parameters":[],"src":"62686:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14493,"nodeType":"FunctionDefinition","src":"62806:103:15","nodes":[],"documentation":{"id":14484,"nodeType":"StructuredDocumentation","src":"62693:108:15","text":"Asserts that two `string` values are not equal and includes error message into revert string on failure."},"functionSelector":"78bdcea7","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","parameters":{"id":14491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14486,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14493,"src":"62827:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14485,"name":"string","nodeType":"ElementaryTypeName","src":"62827:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14488,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14493,"src":"62849:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14487,"name":"string","nodeType":"ElementaryTypeName","src":"62849:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14490,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":14493,"src":"62872:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14489,"name":"string","nodeType":"ElementaryTypeName","src":"62872:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62826:68:15"},"returnParameters":{"id":14492,"nodeType":"ParameterList","parameters":[],"src":"62908:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14501,"nodeType":"FunctionDefinition","src":"62970:78:15","nodes":[],"documentation":{"id":14494,"nodeType":"StructuredDocumentation","src":"62915:50:15","text":"Asserts that two `bytes` values are not equal."},"functionSelector":"3cf78e28","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","parameters":{"id":14499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14496,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14501,"src":"62991:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14495,"name":"bytes","nodeType":"ElementaryTypeName","src":"62991:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":14498,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14501,"src":"63012:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14497,"name":"bytes","nodeType":"ElementaryTypeName","src":"63012:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"62990:43:15"},"returnParameters":{"id":14500,"nodeType":"ParameterList","parameters":[],"src":"63047:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14511,"nodeType":"FunctionDefinition","src":"63166:101:15","nodes":[],"documentation":{"id":14502,"nodeType":"StructuredDocumentation","src":"63054:107:15","text":"Asserts that two `bytes` values are not equal and includes error message into revert string on failure."},"functionSelector":"9507540e","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","parameters":{"id":14509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14504,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14511,"src":"63187:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14503,"name":"bytes","nodeType":"ElementaryTypeName","src":"63187:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":14506,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14511,"src":"63208:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14505,"name":"bytes","nodeType":"ElementaryTypeName","src":"63208:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":14508,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":14511,"src":"63230:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14507,"name":"string","nodeType":"ElementaryTypeName","src":"63230:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63186:66:15"},"returnParameters":{"id":14510,"nodeType":"ParameterList","parameters":[],"src":"63266:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14521,"nodeType":"FunctionDefinition","src":"63337:80:15","nodes":[],"documentation":{"id":14512,"nodeType":"StructuredDocumentation","src":"63273:59:15","text":"Asserts that two arrays of `bool` values are not equal."},"functionSelector":"286fafea","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","parameters":{"id":14519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14515,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14521,"src":"63358:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14513,"name":"bool","nodeType":"ElementaryTypeName","src":"63358:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14514,"nodeType":"ArrayTypeName","src":"63358:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":14518,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14521,"src":"63380:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14516,"name":"bool","nodeType":"ElementaryTypeName","src":"63380:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14517,"nodeType":"ArrayTypeName","src":"63380:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"63357:45:15"},"returnParameters":{"id":14520,"nodeType":"ParameterList","parameters":[],"src":"63416:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14533,"nodeType":"FunctionDefinition","src":"63544:103:15","nodes":[],"documentation":{"id":14522,"nodeType":"StructuredDocumentation","src":"63423:116:15","text":"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure."},"functionSelector":"62c6f9fb","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","parameters":{"id":14531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14525,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14533,"src":"63565:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14523,"name":"bool","nodeType":"ElementaryTypeName","src":"63565:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14524,"nodeType":"ArrayTypeName","src":"63565:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":14528,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14533,"src":"63587:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14526,"name":"bool","nodeType":"ElementaryTypeName","src":"63587:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14527,"nodeType":"ArrayTypeName","src":"63587:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":14530,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":14533,"src":"63610:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14529,"name":"string","nodeType":"ElementaryTypeName","src":"63610:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63564:68:15"},"returnParameters":{"id":14532,"nodeType":"ParameterList","parameters":[],"src":"63646:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14543,"nodeType":"FunctionDefinition","src":"63720:86:15","nodes":[],"documentation":{"id":14534,"nodeType":"StructuredDocumentation","src":"63653:62:15","text":"Asserts that two arrays of `uint256` values are not equal."},"functionSelector":"56f29cba","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","parameters":{"id":14541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14537,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14543,"src":"63741:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14535,"name":"uint256","nodeType":"ElementaryTypeName","src":"63741:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14536,"nodeType":"ArrayTypeName","src":"63741:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":14540,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14543,"src":"63766:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14538,"name":"uint256","nodeType":"ElementaryTypeName","src":"63766:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14539,"nodeType":"ArrayTypeName","src":"63766:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"63740:51:15"},"returnParameters":{"id":14542,"nodeType":"ParameterList","parameters":[],"src":"63805:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14555,"nodeType":"FunctionDefinition","src":"63936:109:15","nodes":[],"documentation":{"id":14544,"nodeType":"StructuredDocumentation","src":"63812:119:15","text":"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure."},"functionSelector":"9a7fbd8f","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","parameters":{"id":14553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14547,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14555,"src":"63957:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14545,"name":"uint256","nodeType":"ElementaryTypeName","src":"63957:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14546,"nodeType":"ArrayTypeName","src":"63957:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":14550,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14555,"src":"63982:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14548,"name":"uint256","nodeType":"ElementaryTypeName","src":"63982:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14549,"nodeType":"ArrayTypeName","src":"63982:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":14552,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":14555,"src":"64008:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14551,"name":"string","nodeType":"ElementaryTypeName","src":"64008:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63956:74:15"},"returnParameters":{"id":14554,"nodeType":"ParameterList","parameters":[],"src":"64044:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14565,"nodeType":"FunctionDefinition","src":"64117:84:15","nodes":[],"documentation":{"id":14556,"nodeType":"StructuredDocumentation","src":"64051:61:15","text":"Asserts that two arrays of `int256` values are not equal."},"functionSelector":"0b72f4ef","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","parameters":{"id":14563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14559,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14565,"src":"64138:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":14557,"name":"int256","nodeType":"ElementaryTypeName","src":"64138:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":14558,"nodeType":"ArrayTypeName","src":"64138:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":14562,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14565,"src":"64162:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":14560,"name":"int256","nodeType":"ElementaryTypeName","src":"64162:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":14561,"nodeType":"ArrayTypeName","src":"64162:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"64137:49:15"},"returnParameters":{"id":14564,"nodeType":"ParameterList","parameters":[],"src":"64200:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14577,"nodeType":"FunctionDefinition","src":"64330:107:15","nodes":[],"documentation":{"id":14566,"nodeType":"StructuredDocumentation","src":"64207:118:15","text":"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure."},"functionSelector":"d3977322","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","parameters":{"id":14575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14569,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14577,"src":"64351:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":14567,"name":"int256","nodeType":"ElementaryTypeName","src":"64351:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":14568,"nodeType":"ArrayTypeName","src":"64351:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":14572,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14577,"src":"64375:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":14570,"name":"int256","nodeType":"ElementaryTypeName","src":"64375:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":14571,"nodeType":"ArrayTypeName","src":"64375:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":14574,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":14577,"src":"64400:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14573,"name":"string","nodeType":"ElementaryTypeName","src":"64400:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64350:72:15"},"returnParameters":{"id":14576,"nodeType":"ParameterList","parameters":[],"src":"64436:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14585,"nodeType":"FunctionDefinition","src":"64500:64:15","nodes":[],"documentation":{"id":14578,"nodeType":"StructuredDocumentation","src":"64443:52:15","text":"Asserts that two `uint256` values are not equal."},"functionSelector":"b7909320","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","parameters":{"id":14583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14580,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14585,"src":"64521:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14579,"name":"uint256","nodeType":"ElementaryTypeName","src":"64521:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14582,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14585,"src":"64535:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14581,"name":"uint256","nodeType":"ElementaryTypeName","src":"64535:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"64520:29:15"},"returnParameters":{"id":14584,"nodeType":"ParameterList","parameters":[],"src":"64563:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14595,"nodeType":"FunctionDefinition","src":"64637:86:15","nodes":[],"documentation":{"id":14586,"nodeType":"StructuredDocumentation","src":"64570:62:15","text":"Asserts that two arrays of `address` values are not equal."},"functionSelector":"46d0b252","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","parameters":{"id":14593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14589,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14595,"src":"64658:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14587,"name":"address","nodeType":"ElementaryTypeName","src":"64658:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14588,"nodeType":"ArrayTypeName","src":"64658:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":14592,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14595,"src":"64683:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14590,"name":"address","nodeType":"ElementaryTypeName","src":"64683:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14591,"nodeType":"ArrayTypeName","src":"64683:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"64657:51:15"},"returnParameters":{"id":14594,"nodeType":"ParameterList","parameters":[],"src":"64722:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14607,"nodeType":"FunctionDefinition","src":"64853:109:15","nodes":[],"documentation":{"id":14596,"nodeType":"StructuredDocumentation","src":"64729:119:15","text":"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure."},"functionSelector":"72c7e0b5","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","parameters":{"id":14605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14599,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14607,"src":"64874:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14597,"name":"address","nodeType":"ElementaryTypeName","src":"64874:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14598,"nodeType":"ArrayTypeName","src":"64874:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":14602,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14607,"src":"64899:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14600,"name":"address","nodeType":"ElementaryTypeName","src":"64899:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14601,"nodeType":"ArrayTypeName","src":"64899:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":14604,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":14607,"src":"64925:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14603,"name":"string","nodeType":"ElementaryTypeName","src":"64925:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64873:74:15"},"returnParameters":{"id":14606,"nodeType":"ParameterList","parameters":[],"src":"64961:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14617,"nodeType":"FunctionDefinition","src":"65035:86:15","nodes":[],"documentation":{"id":14608,"nodeType":"StructuredDocumentation","src":"64968:62:15","text":"Asserts that two arrays of `bytes32` values are not equal."},"functionSelector":"0603ea68","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","parameters":{"id":14615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14611,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14617,"src":"65056:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14609,"name":"bytes32","nodeType":"ElementaryTypeName","src":"65056:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14610,"nodeType":"ArrayTypeName","src":"65056:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":14614,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14617,"src":"65081:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14612,"name":"bytes32","nodeType":"ElementaryTypeName","src":"65081:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14613,"nodeType":"ArrayTypeName","src":"65081:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"65055:51:15"},"returnParameters":{"id":14616,"nodeType":"ParameterList","parameters":[],"src":"65120:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14629,"nodeType":"FunctionDefinition","src":"65251:109:15","nodes":[],"documentation":{"id":14618,"nodeType":"StructuredDocumentation","src":"65127:119:15","text":"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure."},"functionSelector":"b873634c","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","parameters":{"id":14627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14621,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14629,"src":"65272:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14619,"name":"bytes32","nodeType":"ElementaryTypeName","src":"65272:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14620,"nodeType":"ArrayTypeName","src":"65272:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":14624,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14629,"src":"65297:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14622,"name":"bytes32","nodeType":"ElementaryTypeName","src":"65297:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14623,"nodeType":"ArrayTypeName","src":"65297:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":14626,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":14629,"src":"65323:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14625,"name":"string","nodeType":"ElementaryTypeName","src":"65323:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65271:74:15"},"returnParameters":{"id":14628,"nodeType":"ParameterList","parameters":[],"src":"65359:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14639,"nodeType":"FunctionDefinition","src":"65432:84:15","nodes":[],"documentation":{"id":14630,"nodeType":"StructuredDocumentation","src":"65366:61:15","text":"Asserts that two arrays of `string` values are not equal."},"functionSelector":"bdfacbe8","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","parameters":{"id":14637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14633,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14639,"src":"65453:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14631,"name":"string","nodeType":"ElementaryTypeName","src":"65453:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14632,"nodeType":"ArrayTypeName","src":"65453:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":14636,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14639,"src":"65477:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14634,"name":"string","nodeType":"ElementaryTypeName","src":"65477:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14635,"nodeType":"ArrayTypeName","src":"65477:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"65452:49:15"},"returnParameters":{"id":14638,"nodeType":"ParameterList","parameters":[],"src":"65515:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14651,"nodeType":"FunctionDefinition","src":"65645:107:15","nodes":[],"documentation":{"id":14640,"nodeType":"StructuredDocumentation","src":"65522:118:15","text":"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure."},"functionSelector":"b67187f3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","parameters":{"id":14649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14643,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14651,"src":"65666:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14641,"name":"string","nodeType":"ElementaryTypeName","src":"65666:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14642,"nodeType":"ArrayTypeName","src":"65666:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":14646,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14651,"src":"65690:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14644,"name":"string","nodeType":"ElementaryTypeName","src":"65690:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14645,"nodeType":"ArrayTypeName","src":"65690:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":14648,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":14651,"src":"65715:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14647,"name":"string","nodeType":"ElementaryTypeName","src":"65715:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65665:72:15"},"returnParameters":{"id":14650,"nodeType":"ParameterList","parameters":[],"src":"65751:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14661,"nodeType":"FunctionDefinition","src":"65823:82:15","nodes":[],"documentation":{"id":14652,"nodeType":"StructuredDocumentation","src":"65758:60:15","text":"Asserts that two arrays of `bytes` values are not equal."},"functionSelector":"edecd035","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","parameters":{"id":14659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14655,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14661,"src":"65844:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":14653,"name":"bytes","nodeType":"ElementaryTypeName","src":"65844:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":14654,"nodeType":"ArrayTypeName","src":"65844:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":14658,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14661,"src":"65867:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":14656,"name":"bytes","nodeType":"ElementaryTypeName","src":"65867:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":14657,"nodeType":"ArrayTypeName","src":"65867:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"65843:47:15"},"returnParameters":{"id":14660,"nodeType":"ParameterList","parameters":[],"src":"65904:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14673,"nodeType":"FunctionDefinition","src":"66033:105:15","nodes":[],"documentation":{"id":14662,"nodeType":"StructuredDocumentation","src":"65911:117:15","text":"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure."},"functionSelector":"1dcd1f68","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","parameters":{"id":14671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14665,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14673,"src":"66054:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":14663,"name":"bytes","nodeType":"ElementaryTypeName","src":"66054:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":14664,"nodeType":"ArrayTypeName","src":"66054:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":14668,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14673,"src":"66077:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":14666,"name":"bytes","nodeType":"ElementaryTypeName","src":"66077:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":14667,"nodeType":"ArrayTypeName","src":"66077:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":14670,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":14673,"src":"66101:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14669,"name":"string","nodeType":"ElementaryTypeName","src":"66101:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66053:70:15"},"returnParameters":{"id":14672,"nodeType":"ParameterList","parameters":[],"src":"66137:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14683,"nodeType":"FunctionDefinition","src":"66258:87:15","nodes":[],"documentation":{"id":14674,"nodeType":"StructuredDocumentation","src":"66144:109:15","text":"Asserts that two `uint256` values are not equal and includes error message into revert string on failure."},"functionSelector":"98f9bdbd","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","parameters":{"id":14681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14676,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14683,"src":"66279:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14675,"name":"uint256","nodeType":"ElementaryTypeName","src":"66279:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14678,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14683,"src":"66293:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14677,"name":"uint256","nodeType":"ElementaryTypeName","src":"66293:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14680,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":14683,"src":"66308:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14679,"name":"string","nodeType":"ElementaryTypeName","src":"66308:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66278:52:15"},"returnParameters":{"id":14682,"nodeType":"ParameterList","parameters":[],"src":"66344:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14691,"nodeType":"FunctionDefinition","src":"66407:62:15","nodes":[],"documentation":{"id":14684,"nodeType":"StructuredDocumentation","src":"66351:51:15","text":"Asserts that two `int256` values are not equal."},"functionSelector":"f4c004e3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","parameters":{"id":14689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14686,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14691,"src":"66428:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14685,"name":"int256","nodeType":"ElementaryTypeName","src":"66428:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14688,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14691,"src":"66441:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14687,"name":"int256","nodeType":"ElementaryTypeName","src":"66441:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"66427:27:15"},"returnParameters":{"id":14690,"nodeType":"ParameterList","parameters":[],"src":"66468:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14701,"nodeType":"FunctionDefinition","src":"66588:85:15","nodes":[],"documentation":{"id":14692,"nodeType":"StructuredDocumentation","src":"66475:108:15","text":"Asserts that two `int256` values are not equal and includes error message into revert string on failure."},"functionSelector":"4724c5b9","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","parameters":{"id":14699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14694,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14701,"src":"66609:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14693,"name":"int256","nodeType":"ElementaryTypeName","src":"66609:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14696,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14701,"src":"66622:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14695,"name":"int256","nodeType":"ElementaryTypeName","src":"66622:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14698,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":14701,"src":"66636:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14697,"name":"string","nodeType":"ElementaryTypeName","src":"66636:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66608:50:15"},"returnParameters":{"id":14700,"nodeType":"ParameterList","parameters":[],"src":"66672:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14709,"nodeType":"FunctionDefinition","src":"66736:64:15","nodes":[],"documentation":{"id":14702,"nodeType":"StructuredDocumentation","src":"66679:52:15","text":"Asserts that two `address` values are not equal."},"functionSelector":"b12e1694","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","parameters":{"id":14707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14704,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14709,"src":"66757:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14703,"name":"address","nodeType":"ElementaryTypeName","src":"66757:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14706,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14709,"src":"66771:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14705,"name":"address","nodeType":"ElementaryTypeName","src":"66771:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"66756:29:15"},"returnParameters":{"id":14708,"nodeType":"ParameterList","parameters":[],"src":"66799:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14719,"nodeType":"FunctionDefinition","src":"66920:87:15","nodes":[],"documentation":{"id":14710,"nodeType":"StructuredDocumentation","src":"66806:109:15","text":"Asserts that two `address` values are not equal and includes error message into revert string on failure."},"functionSelector":"8775a591","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","parameters":{"id":14717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14712,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14719,"src":"66941:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14711,"name":"address","nodeType":"ElementaryTypeName","src":"66941:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14714,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14719,"src":"66955:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14713,"name":"address","nodeType":"ElementaryTypeName","src":"66955:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14716,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":14719,"src":"66970:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14715,"name":"string","nodeType":"ElementaryTypeName","src":"66970:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66940:52:15"},"returnParameters":{"id":14718,"nodeType":"ParameterList","parameters":[],"src":"67006:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14727,"nodeType":"FunctionDefinition","src":"67070:64:15","nodes":[],"documentation":{"id":14720,"nodeType":"StructuredDocumentation","src":"67013:52:15","text":"Asserts that two `bytes32` values are not equal."},"functionSelector":"898e83fc","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","parameters":{"id":14725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14722,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14727,"src":"67091:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14721,"name":"bytes32","nodeType":"ElementaryTypeName","src":"67091:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":14724,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14727,"src":"67105:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14723,"name":"bytes32","nodeType":"ElementaryTypeName","src":"67105:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"67090:29:15"},"returnParameters":{"id":14726,"nodeType":"ParameterList","parameters":[],"src":"67133:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14737,"nodeType":"FunctionDefinition","src":"67254:87:15","nodes":[],"documentation":{"id":14728,"nodeType":"StructuredDocumentation","src":"67140:109:15","text":"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure."},"functionSelector":"b2332f51","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","parameters":{"id":14735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14730,"mutability":"mutable","name":"left","nodeType":"VariableDeclaration","scope":14737,"src":"67275:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14729,"name":"bytes32","nodeType":"ElementaryTypeName","src":"67275:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":14732,"mutability":"mutable","name":"right","nodeType":"VariableDeclaration","scope":14737,"src":"67289:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14731,"name":"bytes32","nodeType":"ElementaryTypeName","src":"67289:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":14734,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":14737,"src":"67304:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14733,"name":"string","nodeType":"ElementaryTypeName","src":"67304:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67274:52:15"},"returnParameters":{"id":14736,"nodeType":"ParameterList","parameters":[],"src":"67340:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14743,"nodeType":"FunctionDefinition","src":"67397:50:15","nodes":[],"documentation":{"id":14738,"nodeType":"StructuredDocumentation","src":"67347:45:15","text":"Asserts that the given condition is true."},"functionSelector":"0c9fd581","implemented":false,"kind":"function","modifiers":[],"name":"assertTrue","parameters":{"id":14741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14740,"mutability":"mutable","name":"condition","nodeType":"VariableDeclaration","scope":14743,"src":"67417:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14739,"name":"bool","nodeType":"ElementaryTypeName","src":"67417:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"67416:16:15"},"returnParameters":{"id":14742,"nodeType":"ParameterList","parameters":[],"src":"67446:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14751,"nodeType":"FunctionDefinition","src":"67560:73:15","nodes":[],"documentation":{"id":14744,"nodeType":"StructuredDocumentation","src":"67453:102:15","text":"Asserts that the given condition is true and includes error message into revert string on failure."},"functionSelector":"a34edc03","implemented":false,"kind":"function","modifiers":[],"name":"assertTrue","parameters":{"id":14749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14746,"mutability":"mutable","name":"condition","nodeType":"VariableDeclaration","scope":14751,"src":"67580:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14745,"name":"bool","nodeType":"ElementaryTypeName","src":"67580:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14748,"mutability":"mutable","name":"error","nodeType":"VariableDeclaration","scope":14751,"src":"67596:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14747,"name":"string","nodeType":"ElementaryTypeName","src":"67596:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67579:39:15"},"returnParameters":{"id":14750,"nodeType":"ParameterList","parameters":[],"src":"67632:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14757,"nodeType":"FunctionDefinition","src":"67728:46:15","nodes":[],"documentation":{"id":14752,"nodeType":"StructuredDocumentation","src":"67639:84:15","text":"If the condition is false, discard this run's fuzz inputs and generate new ones."},"functionSelector":"4c63e562","implemented":false,"kind":"function","modifiers":[],"name":"assume","parameters":{"id":14755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14754,"mutability":"mutable","name":"condition","nodeType":"VariableDeclaration","scope":14757,"src":"67744:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14753,"name":"bool","nodeType":"ElementaryTypeName","src":"67744:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"67743:16:15"},"returnParameters":{"id":14756,"nodeType":"ParameterList","parameters":[],"src":"67773:0:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14763,"nodeType":"FunctionDefinition","src":"67836:51:15","nodes":[],"documentation":{"id":14758,"nodeType":"StructuredDocumentation","src":"67780:51:15","text":"Writes a breakpoint to jump to in the debugger."},"functionSelector":"f0259e92","implemented":false,"kind":"function","modifiers":[],"name":"breakpoint","parameters":{"id":14761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14760,"mutability":"mutable","name":"char","nodeType":"VariableDeclaration","scope":14763,"src":"67856:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14759,"name":"string","nodeType":"ElementaryTypeName","src":"67856:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67855:22:15"},"returnParameters":{"id":14762,"nodeType":"ParameterList","parameters":[],"src":"67886:0:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14771,"nodeType":"FunctionDefinition","src":"67961:63:15","nodes":[],"documentation":{"id":14764,"nodeType":"StructuredDocumentation","src":"67893:63:15","text":"Writes a conditional breakpoint to jump to in the debugger."},"functionSelector":"f7d39a8d","implemented":false,"kind":"function","modifiers":[],"name":"breakpoint","parameters":{"id":14769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14766,"mutability":"mutable","name":"char","nodeType":"VariableDeclaration","scope":14771,"src":"67981:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14765,"name":"string","nodeType":"ElementaryTypeName","src":"67981:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14768,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":14771,"src":"68003:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14767,"name":"bool","nodeType":"ElementaryTypeName","src":"68003:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"67980:34:15"},"returnParameters":{"id":14770,"nodeType":"ParameterList","parameters":[],"src":"68023:0:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14779,"nodeType":"FunctionDefinition","src":"68079:85:15","nodes":[],"documentation":{"id":14772,"nodeType":"StructuredDocumentation","src":"68030:44:15","text":"Returns the RPC url for the given alias."},"functionSelector":"975a6ce9","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrl","parameters":{"id":14775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14774,"mutability":"mutable","name":"rpcAlias","nodeType":"VariableDeclaration","scope":14779,"src":"68095:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14773,"name":"string","nodeType":"ElementaryTypeName","src":"68095:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68094:26:15"},"returnParameters":{"id":14778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14777,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","scope":14779,"src":"68144:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14776,"name":"string","nodeType":"ElementaryTypeName","src":"68144:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68143:20:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14786,"nodeType":"FunctionDefinition","src":"68229:67:15","nodes":[],"documentation":{"id":14780,"nodeType":"StructuredDocumentation","src":"68170:54:15","text":"Returns all rpc urls and their aliases as structs."},"functionSelector":"9d2ad72a","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrlStructs","parameters":{"id":14781,"nodeType":"ParameterList","parameters":[],"src":"68251:2:15"},"returnParameters":{"id":14785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14784,"mutability":"mutable","name":"urls","nodeType":"VariableDeclaration","scope":14786,"src":"68277:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Rpc_$12064_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.Rpc[]"},"typeName":{"baseType":{"id":14782,"name":"Rpc","nodeType":"UserDefinedTypeName","referencedDeclaration":12064,"src":"68277:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Rpc_$12064_storage_ptr","typeString":"struct VmSafe.Rpc"}},"id":14783,"nodeType":"ArrayTypeName","src":"68277:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Rpc_$12064_storage_$dyn_storage_ptr","typeString":"struct VmSafe.Rpc[]"}},"visibility":"internal"}],"src":"68276:19:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14795,"nodeType":"FunctionDefinition","src":"68367:67:15","nodes":[],"documentation":{"id":14787,"nodeType":"StructuredDocumentation","src":"68302:60:15","text":"Returns all rpc urls and their aliases `[alias, url][]`."},"functionSelector":"a85a8418","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrls","parameters":{"id":14788,"nodeType":"ParameterList","parameters":[],"src":"68383:2:15"},"returnParameters":{"id":14794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14793,"mutability":"mutable","name":"urls","nodeType":"VariableDeclaration","scope":14795,"src":"68409:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_memory_ptr_$2_memory_ptr_$dyn_memory_ptr","typeString":"string[2][]"},"typeName":{"baseType":{"baseType":{"id":14789,"name":"string","nodeType":"ElementaryTypeName","src":"68409:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14791,"length":{"hexValue":"32","id":14790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"68416:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"68409:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$2_storage_ptr","typeString":"string[2]"}},"id":14792,"nodeType":"ArrayTypeName","src":"68409:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_storage_$2_storage_$dyn_storage_ptr","typeString":"string[2][]"}},"visibility":"internal"}],"src":"68408:25:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14801,"nodeType":"FunctionDefinition","src":"68515:42:15","nodes":[],"documentation":{"id":14796,"nodeType":"StructuredDocumentation","src":"68440:70:15","text":"Suspends execution of the main thread for `duration` milliseconds."},"functionSelector":"fa9d8713","implemented":false,"kind":"function","modifiers":[],"name":"sleep","parameters":{"id":14799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14798,"mutability":"mutable","name":"duration","nodeType":"VariableDeclaration","scope":14801,"src":"68530:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14797,"name":"uint256","nodeType":"ElementaryTypeName","src":"68530:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"68529:18:15"},"returnParameters":{"id":14800,"nodeType":"ParameterList","parameters":[],"src":"68556:0:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14811,"nodeType":"FunctionDefinition","src":"68642:95:15","nodes":[],"documentation":{"id":14802,"nodeType":"StructuredDocumentation","src":"68594:43:15","text":"Checks if `key` exists in a TOML table."},"functionSelector":"600903ad","implemented":false,"kind":"function","modifiers":[],"name":"keyExistsToml","parameters":{"id":14807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14804,"mutability":"mutable","name":"toml","nodeType":"VariableDeclaration","scope":14811,"src":"68665:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14803,"name":"string","nodeType":"ElementaryTypeName","src":"68665:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14806,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":14811,"src":"68687:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14805,"name":"string","nodeType":"ElementaryTypeName","src":"68687:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68664:43:15"},"returnParameters":{"id":14810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14809,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":14811,"src":"68731:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14808,"name":"bool","nodeType":"ElementaryTypeName","src":"68731:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"68730:6:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14821,"nodeType":"FunctionDefinition","src":"68818:101:15","nodes":[],"documentation":{"id":14812,"nodeType":"StructuredDocumentation","src":"68743:70:15","text":"Parses a string of TOML data at `key` and coerces it to `address`."},"functionSelector":"65e7c844","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlAddress","parameters":{"id":14817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14814,"mutability":"mutable","name":"toml","nodeType":"VariableDeclaration","scope":14821,"src":"68844:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14813,"name":"string","nodeType":"ElementaryTypeName","src":"68844:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14816,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":14821,"src":"68866:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14815,"name":"string","nodeType":"ElementaryTypeName","src":"68866:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68843:43:15"},"returnParameters":{"id":14820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14819,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":14821,"src":"68910:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14818,"name":"address","nodeType":"ElementaryTypeName","src":"68910:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"68909:9:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14832,"nodeType":"FunctionDefinition","src":"69002:139:15","nodes":[],"documentation":{"id":14822,"nodeType":"StructuredDocumentation","src":"68925:72:15","text":"Parses a string of TOML data at `key` and coerces it to `address[]`."},"functionSelector":"65c428e7","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlAddressArray","parameters":{"id":14827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14824,"mutability":"mutable","name":"toml","nodeType":"VariableDeclaration","scope":14832,"src":"69033:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14823,"name":"string","nodeType":"ElementaryTypeName","src":"69033:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14826,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":14832,"src":"69055:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14825,"name":"string","nodeType":"ElementaryTypeName","src":"69055:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69032:43:15"},"returnParameters":{"id":14831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14830,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":14832,"src":"69123:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14828,"name":"address","nodeType":"ElementaryTypeName","src":"69123:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14829,"nodeType":"ArrayTypeName","src":"69123:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"69122:18:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14842,"nodeType":"FunctionDefinition","src":"69219:95:15","nodes":[],"documentation":{"id":14833,"nodeType":"StructuredDocumentation","src":"69147:67:15","text":"Parses a string of TOML data at `key` and coerces it to `bool`."},"functionSelector":"d30dced6","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBool","parameters":{"id":14838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14835,"mutability":"mutable","name":"toml","nodeType":"VariableDeclaration","scope":14842,"src":"69242:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14834,"name":"string","nodeType":"ElementaryTypeName","src":"69242:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14837,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":14842,"src":"69264:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14836,"name":"string","nodeType":"ElementaryTypeName","src":"69264:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69241:43:15"},"returnParameters":{"id":14841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14840,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":14842,"src":"69308:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14839,"name":"bool","nodeType":"ElementaryTypeName","src":"69308:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"69307:6:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14853,"nodeType":"FunctionDefinition","src":"69394:109:15","nodes":[],"documentation":{"id":14843,"nodeType":"StructuredDocumentation","src":"69320:69:15","text":"Parses a string of TOML data at `key` and coerces it to `bool[]`."},"functionSelector":"127cfe9a","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBoolArray","parameters":{"id":14848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14845,"mutability":"mutable","name":"toml","nodeType":"VariableDeclaration","scope":14853,"src":"69422:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14844,"name":"string","nodeType":"ElementaryTypeName","src":"69422:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14847,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":14853,"src":"69444:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14846,"name":"string","nodeType":"ElementaryTypeName","src":"69444:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69421:43:15"},"returnParameters":{"id":14852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14851,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":14853,"src":"69488:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14849,"name":"bool","nodeType":"ElementaryTypeName","src":"69488:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14850,"nodeType":"ArrayTypeName","src":"69488:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"69487:15:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14863,"nodeType":"FunctionDefinition","src":"69582:104:15","nodes":[],"documentation":{"id":14854,"nodeType":"StructuredDocumentation","src":"69509:68:15","text":"Parses a string of TOML data at `key` and coerces it to `bytes`."},"functionSelector":"d77bfdb9","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes","parameters":{"id":14859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14856,"mutability":"mutable","name":"toml","nodeType":"VariableDeclaration","scope":14863,"src":"69606:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14855,"name":"string","nodeType":"ElementaryTypeName","src":"69606:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14858,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":14863,"src":"69628:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14857,"name":"string","nodeType":"ElementaryTypeName","src":"69628:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69605:43:15"},"returnParameters":{"id":14862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14861,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":14863,"src":"69672:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14860,"name":"bytes","nodeType":"ElementaryTypeName","src":"69672:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"69671:14:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14873,"nodeType":"FunctionDefinition","src":"69767:101:15","nodes":[],"documentation":{"id":14864,"nodeType":"StructuredDocumentation","src":"69692:70:15","text":"Parses a string of TOML data at `key` and coerces it to `bytes32`."},"functionSelector":"8e214810","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes32","parameters":{"id":14869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14866,"mutability":"mutable","name":"toml","nodeType":"VariableDeclaration","scope":14873,"src":"69793:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14865,"name":"string","nodeType":"ElementaryTypeName","src":"69793:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14868,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":14873,"src":"69815:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14867,"name":"string","nodeType":"ElementaryTypeName","src":"69815:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69792:43:15"},"returnParameters":{"id":14872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14871,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":14873,"src":"69859:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14870,"name":"bytes32","nodeType":"ElementaryTypeName","src":"69859:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"69858:9:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14884,"nodeType":"FunctionDefinition","src":"69951:139:15","nodes":[],"documentation":{"id":14874,"nodeType":"StructuredDocumentation","src":"69874:72:15","text":"Parses a string of TOML data at `key` and coerces it to `bytes32[]`."},"functionSelector":"3e716f81","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes32Array","parameters":{"id":14879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14876,"mutability":"mutable","name":"toml","nodeType":"VariableDeclaration","scope":14884,"src":"69982:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14875,"name":"string","nodeType":"ElementaryTypeName","src":"69982:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14878,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":14884,"src":"70004:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14877,"name":"string","nodeType":"ElementaryTypeName","src":"70004:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69981:43:15"},"returnParameters":{"id":14883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14882,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":14884,"src":"70072:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14880,"name":"bytes32","nodeType":"ElementaryTypeName","src":"70072:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14881,"nodeType":"ArrayTypeName","src":"70072:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"70071:18:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14895,"nodeType":"FunctionDefinition","src":"70171:111:15","nodes":[],"documentation":{"id":14885,"nodeType":"StructuredDocumentation","src":"70096:70:15","text":"Parses a string of TOML data at `key` and coerces it to `bytes[]`."},"functionSelector":"b197c247","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytesArray","parameters":{"id":14890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14887,"mutability":"mutable","name":"toml","nodeType":"VariableDeclaration","scope":14895,"src":"70200:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14886,"name":"string","nodeType":"ElementaryTypeName","src":"70200:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14889,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":14895,"src":"70222:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14888,"name":"string","nodeType":"ElementaryTypeName","src":"70222:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70199:43:15"},"returnParameters":{"id":14894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14893,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":14895,"src":"70266:14:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":14891,"name":"bytes","nodeType":"ElementaryTypeName","src":"70266:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":14892,"nodeType":"ArrayTypeName","src":"70266:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"70265:16:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14905,"nodeType":"FunctionDefinition","src":"70362:96:15","nodes":[],"documentation":{"id":14896,"nodeType":"StructuredDocumentation","src":"70288:69:15","text":"Parses a string of TOML data at `key` and coerces it to `int256`."},"functionSelector":"c1350739","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlInt","parameters":{"id":14901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14898,"mutability":"mutable","name":"toml","nodeType":"VariableDeclaration","scope":14905,"src":"70384:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14897,"name":"string","nodeType":"ElementaryTypeName","src":"70384:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14900,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":14905,"src":"70406:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14899,"name":"string","nodeType":"ElementaryTypeName","src":"70406:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70383:43:15"},"returnParameters":{"id":14904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14903,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":14905,"src":"70450:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14902,"name":"int256","nodeType":"ElementaryTypeName","src":"70450:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"70449:8:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14916,"nodeType":"FunctionDefinition","src":"70540:110:15","nodes":[],"documentation":{"id":14906,"nodeType":"StructuredDocumentation","src":"70464:71:15","text":"Parses a string of TOML data at `key` and coerces it to `int256[]`."},"functionSelector":"d3522ae6","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlIntArray","parameters":{"id":14911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14908,"mutability":"mutable","name":"toml","nodeType":"VariableDeclaration","scope":14916,"src":"70567:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14907,"name":"string","nodeType":"ElementaryTypeName","src":"70567:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14910,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":14916,"src":"70589:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14909,"name":"string","nodeType":"ElementaryTypeName","src":"70589:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70566:43:15"},"returnParameters":{"id":14915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14914,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":14916,"src":"70633:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":14912,"name":"int256","nodeType":"ElementaryTypeName","src":"70633:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":14913,"nodeType":"ArrayTypeName","src":"70633:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"70632:17:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14927,"nodeType":"FunctionDefinition","src":"70714:111:15","nodes":[],"documentation":{"id":14917,"nodeType":"StructuredDocumentation","src":"70656:53:15","text":"Returns an array of all the keys in a TOML table."},"functionSelector":"812a44b2","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlKeys","parameters":{"id":14922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14919,"mutability":"mutable","name":"toml","nodeType":"VariableDeclaration","scope":14927,"src":"70737:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14918,"name":"string","nodeType":"ElementaryTypeName","src":"70737:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14921,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":14927,"src":"70759:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14920,"name":"string","nodeType":"ElementaryTypeName","src":"70759:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70736:43:15"},"returnParameters":{"id":14926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14925,"mutability":"mutable","name":"keys","nodeType":"VariableDeclaration","scope":14927,"src":"70803:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14923,"name":"string","nodeType":"ElementaryTypeName","src":"70803:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14924,"nodeType":"ArrayTypeName","src":"70803:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"70802:22:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14937,"nodeType":"FunctionDefinition","src":"70905:106:15","nodes":[],"documentation":{"id":14928,"nodeType":"StructuredDocumentation","src":"70831:69:15","text":"Parses a string of TOML data at `key` and coerces it to `string`."},"functionSelector":"8bb8dd43","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlString","parameters":{"id":14933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14930,"mutability":"mutable","name":"toml","nodeType":"VariableDeclaration","scope":14937,"src":"70930:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14929,"name":"string","nodeType":"ElementaryTypeName","src":"70930:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14932,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":14937,"src":"70952:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14931,"name":"string","nodeType":"ElementaryTypeName","src":"70952:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70929:43:15"},"returnParameters":{"id":14936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14935,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":14937,"src":"70996:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14934,"name":"string","nodeType":"ElementaryTypeName","src":"70996:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70995:15:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14948,"nodeType":"FunctionDefinition","src":"71093:113:15","nodes":[],"documentation":{"id":14938,"nodeType":"StructuredDocumentation","src":"71017:71:15","text":"Parses a string of TOML data at `key` and coerces it to `string[]`."},"functionSelector":"9f629281","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlStringArray","parameters":{"id":14943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14940,"mutability":"mutable","name":"toml","nodeType":"VariableDeclaration","scope":14948,"src":"71123:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14939,"name":"string","nodeType":"ElementaryTypeName","src":"71123:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14942,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":14948,"src":"71145:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14941,"name":"string","nodeType":"ElementaryTypeName","src":"71145:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71122:43:15"},"returnParameters":{"id":14947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14946,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":14948,"src":"71189:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14944,"name":"string","nodeType":"ElementaryTypeName","src":"71189:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14945,"nodeType":"ArrayTypeName","src":"71189:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"71188:17:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14958,"nodeType":"FunctionDefinition","src":"71287:98:15","nodes":[],"documentation":{"id":14949,"nodeType":"StructuredDocumentation","src":"71212:70:15","text":"Parses a string of TOML data at `key` and coerces it to `uint256`."},"functionSelector":"cc7b0487","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlUint","parameters":{"id":14954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14951,"mutability":"mutable","name":"toml","nodeType":"VariableDeclaration","scope":14958,"src":"71310:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14950,"name":"string","nodeType":"ElementaryTypeName","src":"71310:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14953,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":14958,"src":"71332:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14952,"name":"string","nodeType":"ElementaryTypeName","src":"71332:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71309:43:15"},"returnParameters":{"id":14957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14956,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":14958,"src":"71376:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14955,"name":"uint256","nodeType":"ElementaryTypeName","src":"71376:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"71375:9:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14969,"nodeType":"FunctionDefinition","src":"71468:112:15","nodes":[],"documentation":{"id":14959,"nodeType":"StructuredDocumentation","src":"71391:72:15","text":"Parses a string of TOML data at `key` and coerces it to `uint256[]`."},"functionSelector":"b5df27c8","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlUintArray","parameters":{"id":14964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14961,"mutability":"mutable","name":"toml","nodeType":"VariableDeclaration","scope":14969,"src":"71496:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14960,"name":"string","nodeType":"ElementaryTypeName","src":"71496:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14963,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":14969,"src":"71518:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14962,"name":"string","nodeType":"ElementaryTypeName","src":"71518:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71495:43:15"},"returnParameters":{"id":14968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14967,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":14969,"src":"71562:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14965,"name":"uint256","nodeType":"ElementaryTypeName","src":"71562:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14966,"nodeType":"ArrayTypeName","src":"71562:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"71561:18:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14977,"nodeType":"FunctionDefinition","src":"71620:93:15","nodes":[],"documentation":{"id":14970,"nodeType":"StructuredDocumentation","src":"71586:29:15","text":"ABI-encodes a TOML table."},"functionSelector":"592151f0","implemented":false,"kind":"function","modifiers":[],"name":"parseToml","parameters":{"id":14973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14972,"mutability":"mutable","name":"toml","nodeType":"VariableDeclaration","scope":14977,"src":"71639:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14971,"name":"string","nodeType":"ElementaryTypeName","src":"71639:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71638:22:15"},"returnParameters":{"id":14976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14975,"mutability":"mutable","name":"abiEncodedData","nodeType":"VariableDeclaration","scope":14977,"src":"71684:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14974,"name":"bytes","nodeType":"ElementaryTypeName","src":"71684:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"71683:29:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14987,"nodeType":"FunctionDefinition","src":"71762:114:15","nodes":[],"documentation":{"id":14978,"nodeType":"StructuredDocumentation","src":"71719:38:15","text":"ABI-encodes a TOML table at `key`."},"functionSelector":"37736e08","implemented":false,"kind":"function","modifiers":[],"name":"parseToml","parameters":{"id":14983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14980,"mutability":"mutable","name":"toml","nodeType":"VariableDeclaration","scope":14987,"src":"71781:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14979,"name":"string","nodeType":"ElementaryTypeName","src":"71781:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14982,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":14987,"src":"71803:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14981,"name":"string","nodeType":"ElementaryTypeName","src":"71803:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71780:43:15"},"returnParameters":{"id":14986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14985,"mutability":"mutable","name":"abiEncodedData","nodeType":"VariableDeclaration","scope":14987,"src":"71847:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14984,"name":"bytes","nodeType":"ElementaryTypeName","src":"71847:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"71846:29:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14995,"nodeType":"FunctionDefinition","src":"71969:72:15","nodes":[],"documentation":{"id":14988,"nodeType":"StructuredDocumentation","src":"71882:82:15","text":"Takes serialized JSON, converts to TOML and write a serialized TOML to a file."},"functionSelector":"c0865ba7","implemented":false,"kind":"function","modifiers":[],"name":"writeToml","parameters":{"id":14993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14990,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","scope":14995,"src":"71988:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14989,"name":"string","nodeType":"ElementaryTypeName","src":"71988:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14992,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","scope":14995,"src":"72010:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14991,"name":"string","nodeType":"ElementaryTypeName","src":"72010:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71987:44:15"},"returnParameters":{"id":14994,"nodeType":"ParameterList","parameters":[],"src":"72040:0:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15005,"nodeType":"FunctionDefinition","src":"72310:98:15","nodes":[],"documentation":{"id":14996,"nodeType":"StructuredDocumentation","src":"72047:258:15","text":"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.>\n This is useful to replace a specific value of a TOML file, without having to parse the entire thing."},"functionSelector":"51ac6a33","implemented":false,"kind":"function","modifiers":[],"name":"writeToml","parameters":{"id":15003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14998,"mutability":"mutable","name":"json","nodeType":"VariableDeclaration","scope":15005,"src":"72329:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14997,"name":"string","nodeType":"ElementaryTypeName","src":"72329:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15000,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","scope":15005,"src":"72351:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14999,"name":"string","nodeType":"ElementaryTypeName","src":"72351:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15002,"mutability":"mutable","name":"valueKey","nodeType":"VariableDeclaration","scope":15005,"src":"72373:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15001,"name":"string","nodeType":"ElementaryTypeName","src":"72373:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72328:70:15"},"returnParameters":{"id":15004,"nodeType":"ParameterList","parameters":[],"src":"72407:0:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15017,"nodeType":"FunctionDefinition","src":"72547:141:15","nodes":[],"documentation":{"id":15006,"nodeType":"StructuredDocumentation","src":"72450:92:15","text":"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer."},"functionSelector":"d323826a","implemented":false,"kind":"function","modifiers":[],"name":"computeCreate2Address","parameters":{"id":15013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15008,"mutability":"mutable","name":"salt","nodeType":"VariableDeclaration","scope":15017,"src":"72578:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15007,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72578:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15010,"mutability":"mutable","name":"initCodeHash","nodeType":"VariableDeclaration","scope":15017,"src":"72592:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15009,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72592:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15012,"mutability":"mutable","name":"deployer","nodeType":"VariableDeclaration","scope":15017,"src":"72614:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15011,"name":"address","nodeType":"ElementaryTypeName","src":"72614:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"72577:54:15"},"returnParameters":{"id":15016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15015,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":15017,"src":"72679:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15014,"name":"address","nodeType":"ElementaryTypeName","src":"72679:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"72678:9:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15027,"nodeType":"FunctionDefinition","src":"72793:99:15","nodes":[],"documentation":{"id":15018,"nodeType":"StructuredDocumentation","src":"72694:94:15","text":"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer."},"functionSelector":"890c283b","implemented":false,"kind":"function","modifiers":[],"name":"computeCreate2Address","parameters":{"id":15023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15020,"mutability":"mutable","name":"salt","nodeType":"VariableDeclaration","scope":15027,"src":"72824:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15019,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72824:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15022,"mutability":"mutable","name":"initCodeHash","nodeType":"VariableDeclaration","scope":15027,"src":"72838:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15021,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72838:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"72823:36:15"},"returnParameters":{"id":15026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15025,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":15027,"src":"72883:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15024,"name":"address","nodeType":"ElementaryTypeName","src":"72883:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"72882:9:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15037,"nodeType":"FunctionDefinition","src":"72997:95:15","nodes":[],"documentation":{"id":15028,"nodeType":"StructuredDocumentation","src":"72898:94:15","text":"Compute the address a contract will be deployed at for a given deployer address and nonce."},"functionSelector":"74637a7a","implemented":false,"kind":"function","modifiers":[],"name":"computeCreateAddress","parameters":{"id":15033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15030,"mutability":"mutable","name":"deployer","nodeType":"VariableDeclaration","scope":15037,"src":"73027:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15029,"name":"address","nodeType":"ElementaryTypeName","src":"73027:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15032,"mutability":"mutable","name":"nonce","nodeType":"VariableDeclaration","scope":15037,"src":"73045:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15031,"name":"uint256","nodeType":"ElementaryTypeName","src":"73045:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"73026:33:15"},"returnParameters":{"id":15036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15035,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":15037,"src":"73083:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15034,"name":"address","nodeType":"ElementaryTypeName","src":"73083:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"73082:9:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15045,"nodeType":"FunctionDefinition","src":"73202:91:15","nodes":[],"documentation":{"id":15038,"nodeType":"StructuredDocumentation","src":"73098:99:15","text":"Derives a private key from the name, labels the account with that name, and returns the wallet."},"functionSelector":"7404f1d2","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","parameters":{"id":15041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15040,"mutability":"mutable","name":"walletLabel","nodeType":"VariableDeclaration","scope":15045,"src":"73224:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15039,"name":"string","nodeType":"ElementaryTypeName","src":"73224:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73223:29:15"},"returnParameters":{"id":15044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15043,"mutability":"mutable","name":"wallet","nodeType":"VariableDeclaration","scope":15045,"src":"73271:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12119_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":15042,"name":"Wallet","nodeType":"UserDefinedTypeName","referencedDeclaration":12119,"src":"73271:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12119_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"73270:22:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15053,"nodeType":"FunctionDefinition","src":"73371:82:15","nodes":[],"documentation":{"id":15046,"nodeType":"StructuredDocumentation","src":"73299:67:15","text":"Generates a wallet from the private key and returns the wallet."},"functionSelector":"7a675bb6","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","parameters":{"id":15049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15048,"mutability":"mutable","name":"privateKey","nodeType":"VariableDeclaration","scope":15053,"src":"73393:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15047,"name":"uint256","nodeType":"ElementaryTypeName","src":"73393:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"73392:20:15"},"returnParameters":{"id":15052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15051,"mutability":"mutable","name":"wallet","nodeType":"VariableDeclaration","scope":15053,"src":"73431:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12119_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":15050,"name":"Wallet","nodeType":"UserDefinedTypeName","referencedDeclaration":12119,"src":"73431:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12119_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"73430:22:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15063,"nodeType":"FunctionDefinition","src":"73567:111:15","nodes":[],"documentation":{"id":15054,"nodeType":"StructuredDocumentation","src":"73459:103:15","text":"Generates a wallet from the private key, labels the account with that name, and returns the wallet."},"functionSelector":"ed7c5462","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","parameters":{"id":15059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15056,"mutability":"mutable","name":"privateKey","nodeType":"VariableDeclaration","scope":15063,"src":"73589:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15055,"name":"uint256","nodeType":"ElementaryTypeName","src":"73589:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15058,"mutability":"mutable","name":"walletLabel","nodeType":"VariableDeclaration","scope":15063,"src":"73609:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15057,"name":"string","nodeType":"ElementaryTypeName","src":"73609:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73588:49:15"},"returnParameters":{"id":15062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15061,"mutability":"mutable","name":"wallet","nodeType":"VariableDeclaration","scope":15063,"src":"73656:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12119_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":15060,"name":"Wallet","nodeType":"UserDefinedTypeName","referencedDeclaration":12119,"src":"73656:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12119_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"73655:22:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15073,"nodeType":"FunctionDefinition","src":"73826:102:15","nodes":[],"documentation":{"id":15064,"nodeType":"StructuredDocumentation","src":"73684:137:15","text":"Derive a private key from a provided mnenomic string (or mnenomic file path)\n at the derivation path `m/44'/60'/0'/0/{index}`."},"functionSelector":"6229498b","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","parameters":{"id":15069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15066,"mutability":"mutable","name":"mnemonic","nodeType":"VariableDeclaration","scope":15073,"src":"73845:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15065,"name":"string","nodeType":"ElementaryTypeName","src":"73845:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15068,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":15073,"src":"73871:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":15067,"name":"uint32","nodeType":"ElementaryTypeName","src":"73871:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"73844:40:15"},"returnParameters":{"id":15072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15071,"mutability":"mutable","name":"privateKey","nodeType":"VariableDeclaration","scope":15073,"src":"73908:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15070,"name":"uint256","nodeType":"ElementaryTypeName","src":"73908:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"73907:20:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15085,"nodeType":"FunctionDefinition","src":"74057:158:15","nodes":[],"documentation":{"id":15074,"nodeType":"StructuredDocumentation","src":"73934:118:15","text":"Derive a private key from a provided mnenomic string (or mnenomic file path)\n at `{derivationPath}{index}`."},"functionSelector":"6bcb2c1b","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","parameters":{"id":15081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15076,"mutability":"mutable","name":"mnemonic","nodeType":"VariableDeclaration","scope":15085,"src":"74076:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15075,"name":"string","nodeType":"ElementaryTypeName","src":"74076:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15078,"mutability":"mutable","name":"derivationPath","nodeType":"VariableDeclaration","scope":15085,"src":"74102:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15077,"name":"string","nodeType":"ElementaryTypeName","src":"74102:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15080,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":15085,"src":"74134:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":15079,"name":"uint32","nodeType":"ElementaryTypeName","src":"74134:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"74075:72:15"},"returnParameters":{"id":15084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15083,"mutability":"mutable","name":"privateKey","nodeType":"VariableDeclaration","scope":15085,"src":"74195:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15082,"name":"uint256","nodeType":"ElementaryTypeName","src":"74195:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"74194:20:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15097,"nodeType":"FunctionDefinition","src":"74389:152:15","nodes":[],"documentation":{"id":15086,"nodeType":"StructuredDocumentation","src":"74221:163:15","text":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language\n at the derivation path `m/44'/60'/0'/0/{index}`."},"functionSelector":"32c8176d","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","parameters":{"id":15093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15088,"mutability":"mutable","name":"mnemonic","nodeType":"VariableDeclaration","scope":15097,"src":"74408:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15087,"name":"string","nodeType":"ElementaryTypeName","src":"74408:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15090,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":15097,"src":"74434:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":15089,"name":"uint32","nodeType":"ElementaryTypeName","src":"74434:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":15092,"mutability":"mutable","name":"language","nodeType":"VariableDeclaration","scope":15097,"src":"74448:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15091,"name":"string","nodeType":"ElementaryTypeName","src":"74448:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74407:66:15"},"returnParameters":{"id":15096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15095,"mutability":"mutable","name":"privateKey","nodeType":"VariableDeclaration","scope":15097,"src":"74521:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15094,"name":"uint256","nodeType":"ElementaryTypeName","src":"74521:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"74520:20:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15111,"nodeType":"FunctionDefinition","src":"74696:184:15","nodes":[],"documentation":{"id":15098,"nodeType":"StructuredDocumentation","src":"74547:144:15","text":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language\n at `{derivationPath}{index}`."},"functionSelector":"29233b1f","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","parameters":{"id":15107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15100,"mutability":"mutable","name":"mnemonic","nodeType":"VariableDeclaration","scope":15111,"src":"74715:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15099,"name":"string","nodeType":"ElementaryTypeName","src":"74715:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15102,"mutability":"mutable","name":"derivationPath","nodeType":"VariableDeclaration","scope":15111,"src":"74741:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15101,"name":"string","nodeType":"ElementaryTypeName","src":"74741:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15104,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":15111,"src":"74773:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":15103,"name":"uint32","nodeType":"ElementaryTypeName","src":"74773:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":15106,"mutability":"mutable","name":"language","nodeType":"VariableDeclaration","scope":15111,"src":"74787:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15105,"name":"string","nodeType":"ElementaryTypeName","src":"74787:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74714:98:15"},"returnParameters":{"id":15110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15109,"mutability":"mutable","name":"privateKey","nodeType":"VariableDeclaration","scope":15111,"src":"74860:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15108,"name":"uint256","nodeType":"ElementaryTypeName","src":"74860:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"74859:20:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15119,"nodeType":"FunctionDefinition","src":"74936:75:15","nodes":[],"documentation":{"id":15112,"nodeType":"StructuredDocumentation","src":"74886:45:15","text":"Returns ENS namehash for provided string."},"functionSelector":"8c374c65","implemented":false,"kind":"function","modifiers":[],"name":"ensNamehash","parameters":{"id":15115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15114,"mutability":"mutable","name":"name","nodeType":"VariableDeclaration","scope":15119,"src":"74957:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15113,"name":"string","nodeType":"ElementaryTypeName","src":"74957:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74956:22:15"},"returnParameters":{"id":15118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15117,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":15119,"src":"75002:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15116,"name":"bytes32","nodeType":"ElementaryTypeName","src":"75002:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"75001:9:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15127,"nodeType":"FunctionDefinition","src":"75067:86:15","nodes":[],"documentation":{"id":15120,"nodeType":"StructuredDocumentation","src":"75017:45:15","text":"Gets the label for the specified address."},"functionSelector":"28a249b0","implemented":false,"kind":"function","modifiers":[],"name":"getLabel","parameters":{"id":15123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15122,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":15127,"src":"75085:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15121,"name":"address","nodeType":"ElementaryTypeName","src":"75085:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"75084:17:15"},"returnParameters":{"id":15126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15125,"mutability":"mutable","name":"currentLabel","nodeType":"VariableDeclaration","scope":15127,"src":"75125:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15124,"name":"string","nodeType":"ElementaryTypeName","src":"75125:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75124:28:15"},"scope":15198,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15135,"nodeType":"FunctionDefinition","src":"75191:74:15","nodes":[],"documentation":{"id":15128,"nodeType":"StructuredDocumentation","src":"75159:27:15","text":"Get a `Wallet`'s nonce."},"functionSelector":"a5748aad","implemented":false,"kind":"function","modifiers":[],"name":"getNonce","parameters":{"id":15131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15130,"mutability":"mutable","name":"wallet","nodeType":"VariableDeclaration","scope":15135,"src":"75209:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12119_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":15129,"name":"Wallet","nodeType":"UserDefinedTypeName","referencedDeclaration":12119,"src":"75209:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12119_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"75208:24:15"},"returnParameters":{"id":15134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15133,"mutability":"mutable","name":"nonce","nodeType":"VariableDeclaration","scope":15135,"src":"75251:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15132,"name":"uint64","nodeType":"ElementaryTypeName","src":"75251:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"75250:14:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15143,"nodeType":"FunctionDefinition","src":"75313:67:15","nodes":[],"documentation":{"id":15136,"nodeType":"StructuredDocumentation","src":"75271:37:15","text":"Labels an address in call traces."},"functionSelector":"c657c718","implemented":false,"kind":"function","modifiers":[],"name":"label","parameters":{"id":15141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15138,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":15143,"src":"75328:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15137,"name":"address","nodeType":"ElementaryTypeName","src":"75328:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15140,"mutability":"mutable","name":"newLabel","nodeType":"VariableDeclaration","scope":15143,"src":"75345:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15139,"name":"string","nodeType":"ElementaryTypeName","src":"75345:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75327:43:15"},"returnParameters":{"id":15142,"nodeType":"ParameterList","parameters":[],"src":"75379:0:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15151,"nodeType":"FunctionDefinition","src":"75464:76:15","nodes":[],"documentation":{"id":15144,"nodeType":"StructuredDocumentation","src":"75386:73:15","text":"Adds a private key to the local forge wallet and returns the address."},"functionSelector":"22100064","implemented":false,"kind":"function","modifiers":[],"name":"rememberKey","parameters":{"id":15147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15146,"mutability":"mutable","name":"privateKey","nodeType":"VariableDeclaration","scope":15151,"src":"75485:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15145,"name":"uint256","nodeType":"ElementaryTypeName","src":"75485:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"75484:20:15"},"returnParameters":{"id":15150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15149,"mutability":"mutable","name":"keyAddr","nodeType":"VariableDeclaration","scope":15151,"src":"75523:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15148,"name":"address","nodeType":"ElementaryTypeName","src":"75523:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"75522:17:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15165,"nodeType":"FunctionDefinition","src":"75582:103:15","nodes":[],"documentation":{"id":15152,"nodeType":"StructuredDocumentation","src":"75546:31:15","text":"Signs data with a `Wallet`."},"functionSelector":"b25c5a25","implemented":false,"kind":"function","modifiers":[],"name":"sign","parameters":{"id":15157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15154,"mutability":"mutable","name":"wallet","nodeType":"VariableDeclaration","scope":15165,"src":"75596:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12119_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":15153,"name":"Wallet","nodeType":"UserDefinedTypeName","referencedDeclaration":12119,"src":"75596:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12119_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"},{"constant":false,"id":15156,"mutability":"mutable","name":"digest","nodeType":"VariableDeclaration","scope":15165,"src":"75620:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15155,"name":"bytes32","nodeType":"ElementaryTypeName","src":"75620:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"75595:40:15"},"returnParameters":{"id":15164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15159,"mutability":"mutable","name":"v","nodeType":"VariableDeclaration","scope":15165,"src":"75654:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":15158,"name":"uint8","nodeType":"ElementaryTypeName","src":"75654:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":15161,"mutability":"mutable","name":"r","nodeType":"VariableDeclaration","scope":15165,"src":"75663:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15160,"name":"bytes32","nodeType":"ElementaryTypeName","src":"75663:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15163,"mutability":"mutable","name":"s","nodeType":"VariableDeclaration","scope":15165,"src":"75674:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15162,"name":"bytes32","nodeType":"ElementaryTypeName","src":"75674:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"75653:31:15"},"scope":15198,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15173,"nodeType":"FunctionDefinition","src":"75746:80:15","nodes":[],"documentation":{"id":15166,"nodeType":"StructuredDocumentation","src":"75691:50:15","text":"Encodes a `bytes` value to a base64url string."},"functionSelector":"c8bd0e4a","implemented":false,"kind":"function","modifiers":[],"name":"toBase64URL","parameters":{"id":15169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15168,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":15173,"src":"75767:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15167,"name":"bytes","nodeType":"ElementaryTypeName","src":"75767:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"75766:21:15"},"returnParameters":{"id":15172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15171,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":15173,"src":"75811:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15170,"name":"string","nodeType":"ElementaryTypeName","src":"75811:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75810:15:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15181,"nodeType":"FunctionDefinition","src":"75888:81:15","nodes":[],"documentation":{"id":15174,"nodeType":"StructuredDocumentation","src":"75832:51:15","text":"Encodes a `string` value to a base64url string."},"functionSelector":"ae3165b3","implemented":false,"kind":"function","modifiers":[],"name":"toBase64URL","parameters":{"id":15177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15176,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":15181,"src":"75909:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15175,"name":"string","nodeType":"ElementaryTypeName","src":"75909:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75908:22:15"},"returnParameters":{"id":15180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15179,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":15181,"src":"75954:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15178,"name":"string","nodeType":"ElementaryTypeName","src":"75954:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75953:15:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15189,"nodeType":"FunctionDefinition","src":"76027:77:15","nodes":[],"documentation":{"id":15182,"nodeType":"StructuredDocumentation","src":"75975:47:15","text":"Encodes a `bytes` value to a base64 string."},"functionSelector":"a5cbfe65","implemented":false,"kind":"function","modifiers":[],"name":"toBase64","parameters":{"id":15185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15184,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":15189,"src":"76045:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15183,"name":"bytes","nodeType":"ElementaryTypeName","src":"76045:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"76044:21:15"},"returnParameters":{"id":15188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15187,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":15189,"src":"76089:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15186,"name":"string","nodeType":"ElementaryTypeName","src":"76089:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76088:15:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15197,"nodeType":"FunctionDefinition","src":"76163:78:15","nodes":[],"documentation":{"id":15190,"nodeType":"StructuredDocumentation","src":"76110:48:15","text":"Encodes a `string` value to a base64 string."},"functionSelector":"3f8be2c8","implemented":false,"kind":"function","modifiers":[],"name":"toBase64","parameters":{"id":15193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15192,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":15197,"src":"76181:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15191,"name":"string","nodeType":"ElementaryTypeName","src":"76181:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76180:22:15"},"returnParameters":{"id":15196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15195,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":15197,"src":"76226:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15194,"name":"string","nodeType":"ElementaryTypeName","src":"76226:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76225:15:15"},"scope":15198,"stateMutability":"pure","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":12023,"nodeType":"StructuredDocumentation","src":"184:225:15","text":"The `VmSafe` interface does not allow manipulation of the EVM state or other actions that may\n result in Script simulations differing from on-chain execution. It is recommended to only use\n these cheats in scripts."},"fullyImplemented":false,"linearizedBaseContracts":[15198],"name":"VmSafe","scope":15799},{"id":15798,"nodeType":"ContractDefinition","src":"76416:14386:15","nodes":[{"id":15207,"nodeType":"FunctionDefinition","src":"76576:61:15","nodes":[],"documentation":{"id":15202,"nodeType":"StructuredDocumentation","src":"76475:96:15","text":"Returns the identifier of the currently active fork. Reverts if no fork is currently active."},"functionSelector":"2f103f22","implemented":false,"kind":"function","modifiers":[],"name":"activeFork","parameters":{"id":15203,"nodeType":"ParameterList","parameters":[],"src":"76595:2:15"},"returnParameters":{"id":15206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15205,"mutability":"mutable","name":"forkId","nodeType":"VariableDeclaration","scope":15207,"src":"76621:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15204,"name":"uint256","nodeType":"ElementaryTypeName","src":"76621:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"76620:16:15"},"scope":15798,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15213,"nodeType":"FunctionDefinition","src":"76721:51:15","nodes":[],"documentation":{"id":15208,"nodeType":"StructuredDocumentation","src":"76643:73:15","text":"In forking mode, explicitly grant the given address cheatcode access."},"functionSelector":"ea060291","implemented":false,"kind":"function","modifiers":[],"name":"allowCheatcodes","parameters":{"id":15211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15210,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":15213,"src":"76746:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15209,"name":"address","nodeType":"ElementaryTypeName","src":"76746:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"76745:17:15"},"returnParameters":{"id":15212,"nodeType":"ParameterList","parameters":[],"src":"76771:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15219,"nodeType":"FunctionDefinition","src":"76811:54:15","nodes":[],"documentation":{"id":15214,"nodeType":"StructuredDocumentation","src":"76778:28:15","text":"Sets `block.blobbasefee`"},"functionSelector":"6d315d7e","implemented":false,"kind":"function","modifiers":[],"name":"blobBaseFee","parameters":{"id":15217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15216,"mutability":"mutable","name":"newBlobBaseFee","nodeType":"VariableDeclaration","scope":15219,"src":"76832:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15215,"name":"uint256","nodeType":"ElementaryTypeName","src":"76832:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"76831:24:15"},"returnParameters":{"id":15218,"nodeType":"ParameterList","parameters":[],"src":"76864:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15226,"nodeType":"FunctionDefinition","src":"77032:56:15","nodes":[],"documentation":{"id":15220,"nodeType":"StructuredDocumentation","src":"76871:156:15","text":"Sets the blobhashes in the transaction.\n Not available on EVM versions before Cancun.\n If used on unsupported EVM versions it will revert."},"functionSelector":"129de7eb","implemented":false,"kind":"function","modifiers":[],"name":"blobhashes","parameters":{"id":15224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15223,"mutability":"mutable","name":"hashes","nodeType":"VariableDeclaration","scope":15226,"src":"77052:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15221,"name":"bytes32","nodeType":"ElementaryTypeName","src":"77052:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15222,"nodeType":"ArrayTypeName","src":"77052:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"77051:27:15"},"returnParameters":{"id":15225,"nodeType":"ParameterList","parameters":[],"src":"77087:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15232,"nodeType":"FunctionDefinition","src":"77124:46:15","nodes":[],"documentation":{"id":15227,"nodeType":"StructuredDocumentation","src":"77094:25:15","text":"Sets `block.chainid`."},"functionSelector":"4049ddd2","implemented":false,"kind":"function","modifiers":[],"name":"chainId","parameters":{"id":15230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15229,"mutability":"mutable","name":"newChainId","nodeType":"VariableDeclaration","scope":15232,"src":"77141:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15228,"name":"uint256","nodeType":"ElementaryTypeName","src":"77141:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"77140:20:15"},"returnParameters":{"id":15231,"nodeType":"ParameterList","parameters":[],"src":"77169:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15236,"nodeType":"FunctionDefinition","src":"77209:37:15","nodes":[],"documentation":{"id":15233,"nodeType":"StructuredDocumentation","src":"77176:28:15","text":"Clears all mocked calls."},"functionSelector":"3fdf4e15","implemented":false,"kind":"function","modifiers":[],"name":"clearMockedCalls","parameters":{"id":15234,"nodeType":"ParameterList","parameters":[],"src":"77234:2:15"},"returnParameters":{"id":15235,"nodeType":"ParameterList","parameters":[],"src":"77245:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15242,"nodeType":"FunctionDefinition","src":"77283:48:15","nodes":[],"documentation":{"id":15237,"nodeType":"StructuredDocumentation","src":"77252:26:15","text":"Sets `block.coinbase`."},"functionSelector":"ff483c54","implemented":false,"kind":"function","modifiers":[],"name":"coinbase","parameters":{"id":15240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15239,"mutability":"mutable","name":"newCoinbase","nodeType":"VariableDeclaration","scope":15242,"src":"77301:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15238,"name":"address","nodeType":"ElementaryTypeName","src":"77301:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"77300:21:15"},"returnParameters":{"id":15241,"nodeType":"ParameterList","parameters":[],"src":"77330:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15250,"nodeType":"FunctionDefinition","src":"77451:82:15","nodes":[],"documentation":{"id":15243,"nodeType":"StructuredDocumentation","src":"77337:109:15","text":"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork."},"functionSelector":"31ba3498","implemented":false,"kind":"function","modifiers":[],"name":"createFork","parameters":{"id":15246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15245,"mutability":"mutable","name":"urlOrAlias","nodeType":"VariableDeclaration","scope":15250,"src":"77471:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15244,"name":"string","nodeType":"ElementaryTypeName","src":"77471:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77470:28:15"},"returnParameters":{"id":15249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15248,"mutability":"mutable","name":"forkId","nodeType":"VariableDeclaration","scope":15250,"src":"77517:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15247,"name":"uint256","nodeType":"ElementaryTypeName","src":"77517:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"77516:16:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15260,"nodeType":"FunctionDefinition","src":"77640:103:15","nodes":[],"documentation":{"id":15251,"nodeType":"StructuredDocumentation","src":"77539:96:15","text":"Creates a new fork with the given endpoint and block and returns the identifier of the fork."},"functionSelector":"6ba3ba2b","implemented":false,"kind":"function","modifiers":[],"name":"createFork","parameters":{"id":15256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15253,"mutability":"mutable","name":"urlOrAlias","nodeType":"VariableDeclaration","scope":15260,"src":"77660:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15252,"name":"string","nodeType":"ElementaryTypeName","src":"77660:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15255,"mutability":"mutable","name":"blockNumber","nodeType":"VariableDeclaration","scope":15260,"src":"77688:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15254,"name":"uint256","nodeType":"ElementaryTypeName","src":"77688:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"77659:49:15"},"returnParameters":{"id":15259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15258,"mutability":"mutable","name":"forkId","nodeType":"VariableDeclaration","scope":15260,"src":"77727:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15257,"name":"uint256","nodeType":"ElementaryTypeName","src":"77727:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"77726:16:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15270,"nodeType":"FunctionDefinition","src":"77968:98:15","nodes":[],"documentation":{"id":15261,"nodeType":"StructuredDocumentation","src":"77749:214:15","text":"Creates a new fork with the given endpoint and at the block the given transaction was mined in,\n replays all transaction mined in the block before the transaction, and returns the identifier of the fork."},"functionSelector":"7ca29682","implemented":false,"kind":"function","modifiers":[],"name":"createFork","parameters":{"id":15266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15263,"mutability":"mutable","name":"urlOrAlias","nodeType":"VariableDeclaration","scope":15270,"src":"77988:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15262,"name":"string","nodeType":"ElementaryTypeName","src":"77988:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15265,"mutability":"mutable","name":"txHash","nodeType":"VariableDeclaration","scope":15270,"src":"78016:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15264,"name":"bytes32","nodeType":"ElementaryTypeName","src":"78016:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"77987:44:15"},"returnParameters":{"id":15269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15268,"mutability":"mutable","name":"forkId","nodeType":"VariableDeclaration","scope":15270,"src":"78050:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15267,"name":"uint256","nodeType":"ElementaryTypeName","src":"78050:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78049:16:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15278,"nodeType":"FunctionDefinition","src":"78201:88:15","nodes":[],"documentation":{"id":15271,"nodeType":"StructuredDocumentation","src":"78072:124:15","text":"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork."},"functionSelector":"98680034","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","parameters":{"id":15274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15273,"mutability":"mutable","name":"urlOrAlias","nodeType":"VariableDeclaration","scope":15278,"src":"78227:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15272,"name":"string","nodeType":"ElementaryTypeName","src":"78227:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78226:28:15"},"returnParameters":{"id":15277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15276,"mutability":"mutable","name":"forkId","nodeType":"VariableDeclaration","scope":15278,"src":"78273:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15275,"name":"uint256","nodeType":"ElementaryTypeName","src":"78273:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78272:16:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15288,"nodeType":"FunctionDefinition","src":"78413:109:15","nodes":[],"documentation":{"id":15279,"nodeType":"StructuredDocumentation","src":"78295:113:15","text":"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork."},"functionSelector":"71ee464d","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","parameters":{"id":15284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15281,"mutability":"mutable","name":"urlOrAlias","nodeType":"VariableDeclaration","scope":15288,"src":"78439:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15280,"name":"string","nodeType":"ElementaryTypeName","src":"78439:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15283,"mutability":"mutable","name":"blockNumber","nodeType":"VariableDeclaration","scope":15288,"src":"78467:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15282,"name":"uint256","nodeType":"ElementaryTypeName","src":"78467:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78438:49:15"},"returnParameters":{"id":15287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15286,"mutability":"mutable","name":"forkId","nodeType":"VariableDeclaration","scope":15288,"src":"78506:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15285,"name":"uint256","nodeType":"ElementaryTypeName","src":"78506:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78505:16:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15298,"nodeType":"FunctionDefinition","src":"78758:104:15","nodes":[],"documentation":{"id":15289,"nodeType":"StructuredDocumentation","src":"78528:225:15","text":"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in,\n replays all transaction mined in the block before the transaction, returns the identifier of the fork."},"functionSelector":"84d52b7a","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","parameters":{"id":15294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15291,"mutability":"mutable","name":"urlOrAlias","nodeType":"VariableDeclaration","scope":15298,"src":"78784:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15290,"name":"string","nodeType":"ElementaryTypeName","src":"78784:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15293,"mutability":"mutable","name":"txHash","nodeType":"VariableDeclaration","scope":15298,"src":"78812:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15292,"name":"bytes32","nodeType":"ElementaryTypeName","src":"78812:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"78783:44:15"},"returnParameters":{"id":15297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15296,"mutability":"mutable","name":"forkId","nodeType":"VariableDeclaration","scope":15298,"src":"78846:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15295,"name":"uint256","nodeType":"ElementaryTypeName","src":"78846:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78845:16:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15306,"nodeType":"FunctionDefinition","src":"78902:60:15","nodes":[],"documentation":{"id":15299,"nodeType":"StructuredDocumentation","src":"78868:29:15","text":"Sets an address' balance."},"functionSelector":"c88a5e6d","implemented":false,"kind":"function","modifiers":[],"name":"deal","parameters":{"id":15304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15301,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":15306,"src":"78916:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15300,"name":"address","nodeType":"ElementaryTypeName","src":"78916:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15303,"mutability":"mutable","name":"newBalance","nodeType":"VariableDeclaration","scope":15306,"src":"78933:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15302,"name":"uint256","nodeType":"ElementaryTypeName","src":"78933:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78915:37:15"},"returnParameters":{"id":15305,"nodeType":"ParameterList","parameters":[],"src":"78961:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15314,"nodeType":"FunctionDefinition","src":"79200:76:15","nodes":[],"documentation":{"id":15307,"nodeType":"StructuredDocumentation","src":"78968:227:15","text":"Removes the snapshot with the given ID created by `snapshot`.\n Takes the snapshot ID to delete.\n Returns `true` if the snapshot was successfully deleted.\n Returns `false` if the snapshot does not exist."},"functionSelector":"a6368557","implemented":false,"kind":"function","modifiers":[],"name":"deleteSnapshot","parameters":{"id":15310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15309,"mutability":"mutable","name":"snapshotId","nodeType":"VariableDeclaration","scope":15314,"src":"79224:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15308,"name":"uint256","nodeType":"ElementaryTypeName","src":"79224:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"79223:20:15"},"returnParameters":{"id":15313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15312,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":15314,"src":"79262:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15311,"name":"bool","nodeType":"ElementaryTypeName","src":"79262:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"79261:14:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15318,"nodeType":"FunctionDefinition","src":"79348:36:15","nodes":[],"documentation":{"id":15315,"nodeType":"StructuredDocumentation","src":"79282:61:15","text":"Removes _all_ snapshots previously created by `snapshot`."},"functionSelector":"421ae469","implemented":false,"kind":"function","modifiers":[],"name":"deleteSnapshots","parameters":{"id":15316,"nodeType":"ParameterList","parameters":[],"src":"79372:2:15"},"returnParameters":{"id":15317,"nodeType":"ParameterList","parameters":[],"src":"79383:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15324,"nodeType":"FunctionDefinition","src":"79560:52:15","nodes":[],"documentation":{"id":15319,"nodeType":"StructuredDocumentation","src":"79390:165:15","text":"Sets `block.difficulty`.\n Not available on EVM versions from Paris onwards. Use `prevrandao` instead.\n Reverts if used on unsupported EVM versions."},"functionSelector":"46cc92d9","implemented":false,"kind":"function","modifiers":[],"name":"difficulty","parameters":{"id":15322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15321,"mutability":"mutable","name":"newDifficulty","nodeType":"VariableDeclaration","scope":15324,"src":"79580:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15320,"name":"uint256","nodeType":"ElementaryTypeName","src":"79580:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"79579:23:15"},"returnParameters":{"id":15323,"nodeType":"ParameterList","parameters":[],"src":"79611:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15330,"nodeType":"FunctionDefinition","src":"79671:61:15","nodes":[],"documentation":{"id":15325,"nodeType":"StructuredDocumentation","src":"79618:48:15","text":"Dump a genesis JSON file's `allocs` to disk."},"functionSelector":"709ecd3f","implemented":false,"kind":"function","modifiers":[],"name":"dumpState","parameters":{"id":15328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15327,"mutability":"mutable","name":"pathToStateJson","nodeType":"VariableDeclaration","scope":15330,"src":"79690:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15326,"name":"string","nodeType":"ElementaryTypeName","src":"79690:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79689:33:15"},"returnParameters":{"id":15329,"nodeType":"ParameterList","parameters":[],"src":"79731:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15338,"nodeType":"FunctionDefinition","src":"79769:74:15","nodes":[],"documentation":{"id":15331,"nodeType":"StructuredDocumentation","src":"79738:26:15","text":"Sets an address' code."},"functionSelector":"b4d6c782","implemented":false,"kind":"function","modifiers":[],"name":"etch","parameters":{"id":15336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15333,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":15338,"src":"79783:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15332,"name":"address","nodeType":"ElementaryTypeName","src":"79783:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15335,"mutability":"mutable","name":"newRuntimeBytecode","nodeType":"VariableDeclaration","scope":15338,"src":"79799:33:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15334,"name":"bytes","nodeType":"ElementaryTypeName","src":"79799:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"79782:51:15"},"returnParameters":{"id":15337,"nodeType":"ParameterList","parameters":[],"src":"79842:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15344,"nodeType":"FunctionDefinition","src":"79879:42:15","nodes":[],"documentation":{"id":15339,"nodeType":"StructuredDocumentation","src":"79849:25:15","text":"Sets `block.basefee`."},"functionSelector":"39b37ab0","implemented":false,"kind":"function","modifiers":[],"name":"fee","parameters":{"id":15342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15341,"mutability":"mutable","name":"newBasefee","nodeType":"VariableDeclaration","scope":15344,"src":"79892:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15340,"name":"uint256","nodeType":"ElementaryTypeName","src":"79892:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"79891:20:15"},"returnParameters":{"id":15343,"nodeType":"ParameterList","parameters":[],"src":"79920:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15351,"nodeType":"FunctionDefinition","src":"80099:73:15","nodes":[],"documentation":{"id":15345,"nodeType":"StructuredDocumentation","src":"79927:167:15","text":"Gets the blockhashes from the current transaction.\n Not available on EVM versions before Cancun.\n If used on unsupported EVM versions it will revert."},"functionSelector":"f56ff18b","implemented":false,"kind":"function","modifiers":[],"name":"getBlobhashes","parameters":{"id":15346,"nodeType":"ParameterList","parameters":[],"src":"80121:2:15"},"returnParameters":{"id":15350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15349,"mutability":"mutable","name":"hashes","nodeType":"VariableDeclaration","scope":15351,"src":"80147:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"80147:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15348,"nodeType":"ArrayTypeName","src":"80147:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"80146:25:15"},"scope":15798,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15359,"nodeType":"FunctionDefinition","src":"80239:79:15","nodes":[],"documentation":{"id":15352,"nodeType":"StructuredDocumentation","src":"80178:56:15","text":"Returns true if the account is marked as persistent."},"functionSelector":"d92d8efd","implemented":false,"kind":"function","modifiers":[],"name":"isPersistent","parameters":{"id":15355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15354,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":15359,"src":"80261:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15353,"name":"address","nodeType":"ElementaryTypeName","src":"80261:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"80260:17:15"},"returnParameters":{"id":15358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15357,"mutability":"mutable","name":"persistent","nodeType":"VariableDeclaration","scope":15359,"src":"80301:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15356,"name":"bool","nodeType":"ElementaryTypeName","src":"80301:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"80300:17:15"},"scope":15798,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15365,"nodeType":"FunctionDefinition","src":"80399:63:15","nodes":[],"documentation":{"id":15360,"nodeType":"StructuredDocumentation","src":"80324:70:15","text":"Load a genesis JSON file's `allocs` into the in-memory revm state."},"functionSelector":"b3a056d7","implemented":false,"kind":"function","modifiers":[],"name":"loadAllocs","parameters":{"id":15363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15362,"mutability":"mutable","name":"pathToAllocsJson","nodeType":"VariableDeclaration","scope":15365,"src":"80419:32:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15361,"name":"string","nodeType":"ElementaryTypeName","src":"80419:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"80418:34:15"},"returnParameters":{"id":15364,"nodeType":"ParameterList","parameters":[],"src":"80461:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15371,"nodeType":"FunctionDefinition","src":"80665:50:15","nodes":[],"documentation":{"id":15366,"nodeType":"StructuredDocumentation","src":"80468:192:15","text":"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup\n Meaning, changes made to the state of this account will be kept when switching forks."},"functionSelector":"57e22dde","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","parameters":{"id":15369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15368,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":15371,"src":"80689:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15367,"name":"address","nodeType":"ElementaryTypeName","src":"80689:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"80688:17:15"},"returnParameters":{"id":15370,"nodeType":"ParameterList","parameters":[],"src":"80714:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15379,"nodeType":"FunctionDefinition","src":"80760:69:15","nodes":[],"documentation":{"id":15372,"nodeType":"StructuredDocumentation","src":"80721:34:15","text":"See `makePersistent(address)`."},"functionSelector":"4074e0a8","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","parameters":{"id":15377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15374,"mutability":"mutable","name":"account0","nodeType":"VariableDeclaration","scope":15379,"src":"80784:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15373,"name":"address","nodeType":"ElementaryTypeName","src":"80784:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15376,"mutability":"mutable","name":"account1","nodeType":"VariableDeclaration","scope":15379,"src":"80802:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15375,"name":"address","nodeType":"ElementaryTypeName","src":"80802:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"80783:36:15"},"returnParameters":{"id":15378,"nodeType":"ParameterList","parameters":[],"src":"80828:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15389,"nodeType":"FunctionDefinition","src":"80874:87:15","nodes":[],"documentation":{"id":15380,"nodeType":"StructuredDocumentation","src":"80835:34:15","text":"See `makePersistent(address)`."},"functionSelector":"efb77a75","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","parameters":{"id":15387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15382,"mutability":"mutable","name":"account0","nodeType":"VariableDeclaration","scope":15389,"src":"80898:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15381,"name":"address","nodeType":"ElementaryTypeName","src":"80898:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15384,"mutability":"mutable","name":"account1","nodeType":"VariableDeclaration","scope":15389,"src":"80916:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15383,"name":"address","nodeType":"ElementaryTypeName","src":"80916:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15386,"mutability":"mutable","name":"account2","nodeType":"VariableDeclaration","scope":15389,"src":"80934:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15385,"name":"address","nodeType":"ElementaryTypeName","src":"80934:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"80897:54:15"},"returnParameters":{"id":15388,"nodeType":"ParameterList","parameters":[],"src":"80960:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15396,"nodeType":"FunctionDefinition","src":"81006:62:15","nodes":[],"documentation":{"id":15390,"nodeType":"StructuredDocumentation","src":"80967:34:15","text":"See `makePersistent(address)`."},"functionSelector":"1d9e269e","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","parameters":{"id":15394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15393,"mutability":"mutable","name":"accounts","nodeType":"VariableDeclaration","scope":15396,"src":"81030:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15391,"name":"address","nodeType":"ElementaryTypeName","src":"81030:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15392,"nodeType":"ArrayTypeName","src":"81030:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"81029:29:15"},"returnParameters":{"id":15395,"nodeType":"ParameterList","parameters":[],"src":"81067:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15406,"nodeType":"FunctionDefinition","src":"81139:97:15","nodes":[],"documentation":{"id":15397,"nodeType":"StructuredDocumentation","src":"81074:60:15","text":"Reverts a call to an address with specified revert data."},"functionSelector":"dbaad147","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","parameters":{"id":15404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15399,"mutability":"mutable","name":"callee","nodeType":"VariableDeclaration","scope":15406,"src":"81163:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15398,"name":"address","nodeType":"ElementaryTypeName","src":"81163:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15401,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":15406,"src":"81179:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15400,"name":"bytes","nodeType":"ElementaryTypeName","src":"81179:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15403,"mutability":"mutable","name":"revertData","nodeType":"VariableDeclaration","scope":15406,"src":"81200:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15402,"name":"bytes","nodeType":"ElementaryTypeName","src":"81200:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"81162:64:15"},"returnParameters":{"id":15405,"nodeType":"ParameterList","parameters":[],"src":"81235:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15418,"nodeType":"FunctionDefinition","src":"81336:123:15","nodes":[],"documentation":{"id":15407,"nodeType":"StructuredDocumentation","src":"81242:89:15","text":"Reverts a call to an address with a specific `msg.value`, with specified revert data."},"functionSelector":"d23cd037","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","parameters":{"id":15416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15409,"mutability":"mutable","name":"callee","nodeType":"VariableDeclaration","scope":15418,"src":"81360:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15408,"name":"address","nodeType":"ElementaryTypeName","src":"81360:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15411,"mutability":"mutable","name":"msgValue","nodeType":"VariableDeclaration","scope":15418,"src":"81376:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15410,"name":"uint256","nodeType":"ElementaryTypeName","src":"81376:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15413,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":15418,"src":"81394:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15412,"name":"bytes","nodeType":"ElementaryTypeName","src":"81394:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15415,"mutability":"mutable","name":"revertData","nodeType":"VariableDeclaration","scope":15418,"src":"81415:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15414,"name":"bytes","nodeType":"ElementaryTypeName","src":"81415:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"81359:82:15"},"returnParameters":{"id":15417,"nodeType":"ParameterList","parameters":[],"src":"81458:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15428,"nodeType":"FunctionDefinition","src":"81719:91:15","nodes":[],"documentation":{"id":15419,"nodeType":"StructuredDocumentation","src":"81465:249:15","text":"Mocks a call to an address, returning specified data.\n Calldata can either be strict or a partial match, e.g. if you only\n pass a Solidity selector to the expected calldata, then the entire Solidity\n function will be mocked."},"functionSelector":"b96213e4","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","parameters":{"id":15426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15421,"mutability":"mutable","name":"callee","nodeType":"VariableDeclaration","scope":15428,"src":"81737:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15420,"name":"address","nodeType":"ElementaryTypeName","src":"81737:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15423,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":15428,"src":"81753:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15422,"name":"bytes","nodeType":"ElementaryTypeName","src":"81753:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15425,"mutability":"mutable","name":"returnData","nodeType":"VariableDeclaration","scope":15428,"src":"81774:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15424,"name":"bytes","nodeType":"ElementaryTypeName","src":"81774:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"81736:64:15"},"returnParameters":{"id":15427,"nodeType":"ParameterList","parameters":[],"src":"81809:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15440,"nodeType":"FunctionDefinition","src":"81985:109:15","nodes":[],"documentation":{"id":15429,"nodeType":"StructuredDocumentation","src":"81816:164:15","text":"Mocks a call to an address with a specific `msg.value`, returning specified data.\n Calldata match takes precedence over `msg.value` in case of ambiguity."},"functionSelector":"81409b91","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","parameters":{"id":15438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15431,"mutability":"mutable","name":"callee","nodeType":"VariableDeclaration","scope":15440,"src":"82003:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15430,"name":"address","nodeType":"ElementaryTypeName","src":"82003:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15433,"mutability":"mutable","name":"msgValue","nodeType":"VariableDeclaration","scope":15440,"src":"82019:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15432,"name":"uint256","nodeType":"ElementaryTypeName","src":"82019:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15435,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":15440,"src":"82037:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15434,"name":"bytes","nodeType":"ElementaryTypeName","src":"82037:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15437,"mutability":"mutable","name":"returnData","nodeType":"VariableDeclaration","scope":15440,"src":"82058:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15436,"name":"bytes","nodeType":"ElementaryTypeName","src":"82058:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"82002:82:15"},"returnParameters":{"id":15439,"nodeType":"ParameterList","parameters":[],"src":"82093:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15446,"nodeType":"FunctionDefinition","src":"82169:43:15","nodes":[],"documentation":{"id":15441,"nodeType":"StructuredDocumentation","src":"82100:64:15","text":"Sets the *next* call's `msg.sender` to be the input address."},"functionSelector":"ca669fa7","implemented":false,"kind":"function","modifiers":[],"name":"prank","parameters":{"id":15444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15443,"mutability":"mutable","name":"msgSender","nodeType":"VariableDeclaration","scope":15446,"src":"82184:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15442,"name":"address","nodeType":"ElementaryTypeName","src":"82184:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"82183:19:15"},"returnParameters":{"id":15445,"nodeType":"ParameterList","parameters":[],"src":"82211:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15454,"nodeType":"FunctionDefinition","src":"82331:61:15","nodes":[],"documentation":{"id":15447,"nodeType":"StructuredDocumentation","src":"82218:108:15","text":"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"functionSelector":"47e50cce","implemented":false,"kind":"function","modifiers":[],"name":"prank","parameters":{"id":15452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15449,"mutability":"mutable","name":"msgSender","nodeType":"VariableDeclaration","scope":15454,"src":"82346:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15448,"name":"address","nodeType":"ElementaryTypeName","src":"82346:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15451,"mutability":"mutable","name":"txOrigin","nodeType":"VariableDeclaration","scope":15454,"src":"82365:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15450,"name":"address","nodeType":"ElementaryTypeName","src":"82365:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"82345:37:15"},"returnParameters":{"id":15453,"nodeType":"ParameterList","parameters":[],"src":"82391:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15460,"nodeType":"FunctionDefinition","src":"82569:52:15","nodes":[],"documentation":{"id":15455,"nodeType":"StructuredDocumentation","src":"82398:166:15","text":"Sets `block.prevrandao`.\n Not available on EVM versions before Paris. Use `difficulty` instead.\n If used on unsupported EVM versions it will revert."},"functionSelector":"3b925549","implemented":false,"kind":"function","modifiers":[],"name":"prevrandao","parameters":{"id":15458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15457,"mutability":"mutable","name":"newPrevrandao","nodeType":"VariableDeclaration","scope":15460,"src":"82589:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15456,"name":"bytes32","nodeType":"ElementaryTypeName","src":"82589:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"82588:23:15"},"returnParameters":{"id":15459,"nodeType":"ParameterList","parameters":[],"src":"82620:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15466,"nodeType":"FunctionDefinition","src":"82798:52:15","nodes":[],"documentation":{"id":15461,"nodeType":"StructuredDocumentation","src":"82627:166:15","text":"Sets `block.prevrandao`.\n Not available on EVM versions before Paris. Use `difficulty` instead.\n If used on unsupported EVM versions it will revert."},"functionSelector":"9cb1c0d4","implemented":false,"kind":"function","modifiers":[],"name":"prevrandao","parameters":{"id":15464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15463,"mutability":"mutable","name":"newPrevrandao","nodeType":"VariableDeclaration","scope":15466,"src":"82818:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15462,"name":"uint256","nodeType":"ElementaryTypeName","src":"82818:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"82817:23:15"},"returnParameters":{"id":15465,"nodeType":"ParameterList","parameters":[],"src":"82849:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15476,"nodeType":"FunctionDefinition","src":"82978:101:15","nodes":[],"documentation":{"id":15467,"nodeType":"StructuredDocumentation","src":"82856:117:15","text":"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification."},"functionSelector":"4ad0bac9","implemented":false,"kind":"function","modifiers":[],"name":"readCallers","parameters":{"id":15468,"nodeType":"ParameterList","parameters":[],"src":"82998:2:15"},"returnParameters":{"id":15475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15470,"mutability":"mutable","name":"callerMode","nodeType":"VariableDeclaration","scope":15476,"src":"83019:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_CallerMode_$12029","typeString":"enum VmSafe.CallerMode"},"typeName":{"id":15469,"name":"CallerMode","nodeType":"UserDefinedTypeName","referencedDeclaration":12029,"src":"83019:10:15","typeDescriptions":{"typeIdentifier":"t_enum$_CallerMode_$12029","typeString":"enum VmSafe.CallerMode"}},"visibility":"internal"},{"constant":false,"id":15472,"mutability":"mutable","name":"msgSender","nodeType":"VariableDeclaration","scope":15476,"src":"83042:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15471,"name":"address","nodeType":"ElementaryTypeName","src":"83042:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15474,"mutability":"mutable","name":"txOrigin","nodeType":"VariableDeclaration","scope":15476,"src":"83061:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15473,"name":"address","nodeType":"ElementaryTypeName","src":"83061:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"83018:60:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15482,"nodeType":"FunctionDefinition","src":"83167:46:15","nodes":[],"documentation":{"id":15477,"nodeType":"StructuredDocumentation","src":"83085:77:15","text":"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts."},"functionSelector":"1c72346d","implemented":false,"kind":"function","modifiers":[],"name":"resetNonce","parameters":{"id":15480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15479,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":15482,"src":"83187:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15478,"name":"address","nodeType":"ElementaryTypeName","src":"83187:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"83186:17:15"},"returnParameters":{"id":15481,"nodeType":"ParameterList","parameters":[],"src":"83212:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15490,"nodeType":"FunctionDefinition","src":"83556:70:15","nodes":[],"documentation":{"id":15483,"nodeType":"StructuredDocumentation","src":"83219:332:15","text":"Revert the state of the EVM to a previous snapshot\n Takes the snapshot ID to revert to.\n Returns `true` if the snapshot was successfully reverted.\n Returns `false` if the snapshot does not exist.\n **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteSnapshot`."},"functionSelector":"44d7f0a4","implemented":false,"kind":"function","modifiers":[],"name":"revertTo","parameters":{"id":15486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15485,"mutability":"mutable","name":"snapshotId","nodeType":"VariableDeclaration","scope":15490,"src":"83574:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15484,"name":"uint256","nodeType":"ElementaryTypeName","src":"83574:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"83573:20:15"},"returnParameters":{"id":15489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15488,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":15490,"src":"83612:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15487,"name":"bool","nodeType":"ElementaryTypeName","src":"83612:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"83611:14:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15498,"nodeType":"FunctionDefinition","src":"83909:79:15","nodes":[],"documentation":{"id":15491,"nodeType":"StructuredDocumentation","src":"83632:272:15","text":"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots\n Takes the snapshot ID to revert to.\n Returns `true` if the snapshot was successfully reverted and deleted.\n Returns `false` if the snapshot does not exist."},"functionSelector":"03e0aca9","implemented":false,"kind":"function","modifiers":[],"name":"revertToAndDelete","parameters":{"id":15494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15493,"mutability":"mutable","name":"snapshotId","nodeType":"VariableDeclaration","scope":15498,"src":"83936:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15492,"name":"uint256","nodeType":"ElementaryTypeName","src":"83936:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"83935:20:15"},"returnParameters":{"id":15497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15496,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":15498,"src":"83974:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15495,"name":"bool","nodeType":"ElementaryTypeName","src":"83974:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"83973:14:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15504,"nodeType":"FunctionDefinition","src":"84085:52:15","nodes":[],"documentation":{"id":15499,"nodeType":"StructuredDocumentation","src":"83994:86:15","text":"Revokes persistent status from the address, previously added via `makePersistent`."},"functionSelector":"997a0222","implemented":false,"kind":"function","modifiers":[],"name":"revokePersistent","parameters":{"id":15502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15501,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":15504,"src":"84111:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15500,"name":"address","nodeType":"ElementaryTypeName","src":"84111:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"84110:17:15"},"returnParameters":{"id":15503,"nodeType":"ParameterList","parameters":[],"src":"84136:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15511,"nodeType":"FunctionDefinition","src":"84184:64:15","nodes":[],"documentation":{"id":15505,"nodeType":"StructuredDocumentation","src":"84143:36:15","text":"See `revokePersistent(address)`."},"functionSelector":"3ce969e6","implemented":false,"kind":"function","modifiers":[],"name":"revokePersistent","parameters":{"id":15509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15508,"mutability":"mutable","name":"accounts","nodeType":"VariableDeclaration","scope":15511,"src":"84210:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15506,"name":"address","nodeType":"ElementaryTypeName","src":"84210:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15507,"nodeType":"ArrayTypeName","src":"84210:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"84209:29:15"},"returnParameters":{"id":15510,"nodeType":"ParameterList","parameters":[],"src":"84247:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15517,"nodeType":"FunctionDefinition","src":"84283:42:15","nodes":[],"documentation":{"id":15512,"nodeType":"StructuredDocumentation","src":"84254:24:15","text":"Sets `block.height`."},"functionSelector":"1f7b4f30","implemented":false,"kind":"function","modifiers":[],"name":"roll","parameters":{"id":15515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15514,"mutability":"mutable","name":"newHeight","nodeType":"VariableDeclaration","scope":15517,"src":"84297:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15513,"name":"uint256","nodeType":"ElementaryTypeName","src":"84297:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"84296:19:15"},"returnParameters":{"id":15516,"nodeType":"ParameterList","parameters":[],"src":"84324:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15523,"nodeType":"FunctionDefinition","src":"84464:48:15","nodes":[],"documentation":{"id":15518,"nodeType":"StructuredDocumentation","src":"84331:128:15","text":"Updates the currently active fork to given block number\n This is similar to `roll` but for the currently active fork."},"functionSelector":"d9bbf3a1","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","parameters":{"id":15521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15520,"mutability":"mutable","name":"blockNumber","nodeType":"VariableDeclaration","scope":15523,"src":"84482:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15519,"name":"uint256","nodeType":"ElementaryTypeName","src":"84482:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"84481:21:15"},"returnParameters":{"id":15522,"nodeType":"ParameterList","parameters":[],"src":"84511:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15529,"nodeType":"FunctionDefinition","src":"84727:43:15","nodes":[],"documentation":{"id":15524,"nodeType":"StructuredDocumentation","src":"84518:204:15","text":"Updates the currently active fork to given transaction. This will `rollFork` with the number\n of the block the transaction was mined in and replays all transaction mined before it in the block."},"functionSelector":"0f29772b","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","parameters":{"id":15527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15526,"mutability":"mutable","name":"txHash","nodeType":"VariableDeclaration","scope":15529,"src":"84745:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15525,"name":"bytes32","nodeType":"ElementaryTypeName","src":"84745:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"84744:16:15"},"returnParameters":{"id":15528,"nodeType":"ParameterList","parameters":[],"src":"84769:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15537,"nodeType":"FunctionDefinition","src":"84830:64:15","nodes":[],"documentation":{"id":15530,"nodeType":"StructuredDocumentation","src":"84776:49:15","text":"Updates the given fork to given block number."},"functionSelector":"d74c83a4","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","parameters":{"id":15535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15532,"mutability":"mutable","name":"forkId","nodeType":"VariableDeclaration","scope":15537,"src":"84848:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15531,"name":"uint256","nodeType":"ElementaryTypeName","src":"84848:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15534,"mutability":"mutable","name":"blockNumber","nodeType":"VariableDeclaration","scope":15537,"src":"84864:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15533,"name":"uint256","nodeType":"ElementaryTypeName","src":"84864:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"84847:37:15"},"returnParameters":{"id":15536,"nodeType":"ParameterList","parameters":[],"src":"84893:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15545,"nodeType":"FunctionDefinition","src":"85030:59:15","nodes":[],"documentation":{"id":15538,"nodeType":"StructuredDocumentation","src":"84900:125:15","text":"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block."},"functionSelector":"f2830f7b","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","parameters":{"id":15543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15540,"mutability":"mutable","name":"forkId","nodeType":"VariableDeclaration","scope":15545,"src":"85048:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15539,"name":"uint256","nodeType":"ElementaryTypeName","src":"85048:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15542,"mutability":"mutable","name":"txHash","nodeType":"VariableDeclaration","scope":15545,"src":"85064:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15541,"name":"bytes32","nodeType":"ElementaryTypeName","src":"85064:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"85047:32:15"},"returnParameters":{"id":15544,"nodeType":"ParameterList","parameters":[],"src":"85088:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15551,"nodeType":"FunctionDefinition","src":"85202:45:15","nodes":[],"documentation":{"id":15546,"nodeType":"StructuredDocumentation","src":"85095:102:15","text":"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active."},"functionSelector":"9ebf6827","implemented":false,"kind":"function","modifiers":[],"name":"selectFork","parameters":{"id":15549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15548,"mutability":"mutable","name":"forkId","nodeType":"VariableDeclaration","scope":15551,"src":"85222:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15547,"name":"uint256","nodeType":"ElementaryTypeName","src":"85222:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"85221:16:15"},"returnParameters":{"id":15550,"nodeType":"ParameterList","parameters":[],"src":"85246:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15559,"nodeType":"FunctionDefinition","src":"85345:61:15","nodes":[],"documentation":{"id":15552,"nodeType":"StructuredDocumentation","src":"85253:87:15","text":"Sets the nonce of an account. Must be higher than the current nonce of the account."},"functionSelector":"f8e18b57","implemented":false,"kind":"function","modifiers":[],"name":"setNonce","parameters":{"id":15557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15554,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":15559,"src":"85363:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15553,"name":"address","nodeType":"ElementaryTypeName","src":"85363:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15556,"mutability":"mutable","name":"newNonce","nodeType":"VariableDeclaration","scope":15559,"src":"85380:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15555,"name":"uint64","nodeType":"ElementaryTypeName","src":"85380:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"85362:34:15"},"returnParameters":{"id":15558,"nodeType":"ParameterList","parameters":[],"src":"85405:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15567,"nodeType":"FunctionDefinition","src":"85472:67:15","nodes":[],"documentation":{"id":15560,"nodeType":"StructuredDocumentation","src":"85412:55:15","text":"Sets the nonce of an account to an arbitrary value."},"functionSelector":"9b67b21c","implemented":false,"kind":"function","modifiers":[],"name":"setNonceUnsafe","parameters":{"id":15565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15562,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":15567,"src":"85496:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15561,"name":"address","nodeType":"ElementaryTypeName","src":"85496:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15564,"mutability":"mutable","name":"newNonce","nodeType":"VariableDeclaration","scope":15567,"src":"85513:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15563,"name":"uint64","nodeType":"ElementaryTypeName","src":"85513:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"85495:34:15"},"returnParameters":{"id":15566,"nodeType":"ParameterList","parameters":[],"src":"85538:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15573,"nodeType":"FunctionDefinition","src":"85694:58:15","nodes":[],"documentation":{"id":15568,"nodeType":"StructuredDocumentation","src":"85545:144:15","text":"Snapshot the current state of the evm.\n Returns the ID of the snapshot that was created.\n To revert a snapshot use `revertTo`."},"functionSelector":"9711715a","implemented":false,"kind":"function","modifiers":[],"name":"snapshot","parameters":{"id":15569,"nodeType":"ParameterList","parameters":[],"src":"85711:2:15"},"returnParameters":{"id":15572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15571,"mutability":"mutable","name":"snapshotId","nodeType":"VariableDeclaration","scope":15573,"src":"85732:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15570,"name":"uint256","nodeType":"ElementaryTypeName","src":"85732:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"85731:20:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15579,"nodeType":"FunctionDefinition","src":"85859:48:15","nodes":[],"documentation":{"id":15574,"nodeType":"StructuredDocumentation","src":"85758:96:15","text":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called."},"functionSelector":"06447d56","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","parameters":{"id":15577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15576,"mutability":"mutable","name":"msgSender","nodeType":"VariableDeclaration","scope":15579,"src":"85879:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15575,"name":"address","nodeType":"ElementaryTypeName","src":"85879:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"85878:19:15"},"returnParameters":{"id":15578,"nodeType":"ParameterList","parameters":[],"src":"85906:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15587,"nodeType":"FunctionDefinition","src":"86058:66:15","nodes":[],"documentation":{"id":15580,"nodeType":"StructuredDocumentation","src":"85913:140:15","text":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"functionSelector":"45b56078","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","parameters":{"id":15585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15582,"mutability":"mutable","name":"msgSender","nodeType":"VariableDeclaration","scope":15587,"src":"86078:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15581,"name":"address","nodeType":"ElementaryTypeName","src":"86078:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15584,"mutability":"mutable","name":"txOrigin","nodeType":"VariableDeclaration","scope":15587,"src":"86097:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15583,"name":"address","nodeType":"ElementaryTypeName","src":"86097:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"86077:37:15"},"returnParameters":{"id":15586,"nodeType":"ParameterList","parameters":[],"src":"86123:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15591,"nodeType":"FunctionDefinition","src":"86199:30:15","nodes":[],"documentation":{"id":15588,"nodeType":"StructuredDocumentation","src":"86130:64:15","text":"Resets subsequent calls' `msg.sender` to be `address(this)`."},"functionSelector":"90c5013b","implemented":false,"kind":"function","modifiers":[],"name":"stopPrank","parameters":{"id":15589,"nodeType":"ParameterList","parameters":[],"src":"86217:2:15"},"returnParameters":{"id":15590,"nodeType":"ParameterList","parameters":[],"src":"86228:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15601,"nodeType":"FunctionDefinition","src":"86287:69:15","nodes":[],"documentation":{"id":15592,"nodeType":"StructuredDocumentation","src":"86235:47:15","text":"Stores a value to an address' storage slot."},"functionSelector":"70ca10bb","implemented":false,"kind":"function","modifiers":[],"name":"store","parameters":{"id":15599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15594,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":15601,"src":"86302:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15593,"name":"address","nodeType":"ElementaryTypeName","src":"86302:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15596,"mutability":"mutable","name":"slot","nodeType":"VariableDeclaration","scope":15601,"src":"86318:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15595,"name":"bytes32","nodeType":"ElementaryTypeName","src":"86318:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15598,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":15601,"src":"86332:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15597,"name":"bytes32","nodeType":"ElementaryTypeName","src":"86332:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"86301:45:15"},"returnParameters":{"id":15600,"nodeType":"ParameterList","parameters":[],"src":"86355:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15607,"nodeType":"FunctionDefinition","src":"86459:43:15","nodes":[],"documentation":{"id":15602,"nodeType":"StructuredDocumentation","src":"86362:92:15","text":"Fetches the given transaction from the active fork and executes it on the current state."},"functionSelector":"be646da1","implemented":false,"kind":"function","modifiers":[],"name":"transact","parameters":{"id":15605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15604,"mutability":"mutable","name":"txHash","nodeType":"VariableDeclaration","scope":15607,"src":"86477:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15603,"name":"bytes32","nodeType":"ElementaryTypeName","src":"86477:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"86476:16:15"},"returnParameters":{"id":15606,"nodeType":"ParameterList","parameters":[],"src":"86501:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15615,"nodeType":"FunctionDefinition","src":"86604:59:15","nodes":[],"documentation":{"id":15608,"nodeType":"StructuredDocumentation","src":"86508:91:15","text":"Fetches the given transaction from the given fork and executes it on the current state."},"functionSelector":"4d8abc4b","implemented":false,"kind":"function","modifiers":[],"name":"transact","parameters":{"id":15613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15610,"mutability":"mutable","name":"forkId","nodeType":"VariableDeclaration","scope":15615,"src":"86622:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15609,"name":"uint256","nodeType":"ElementaryTypeName","src":"86622:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15612,"mutability":"mutable","name":"txHash","nodeType":"VariableDeclaration","scope":15615,"src":"86638:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15611,"name":"bytes32","nodeType":"ElementaryTypeName","src":"86638:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"86621:32:15"},"returnParameters":{"id":15614,"nodeType":"ParameterList","parameters":[],"src":"86662:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15621,"nodeType":"FunctionDefinition","src":"86697:50:15","nodes":[],"documentation":{"id":15616,"nodeType":"StructuredDocumentation","src":"86669:23:15","text":"Sets `tx.gasprice`."},"functionSelector":"48f50c0f","implemented":false,"kind":"function","modifiers":[],"name":"txGasPrice","parameters":{"id":15619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15618,"mutability":"mutable","name":"newGasPrice","nodeType":"VariableDeclaration","scope":15621,"src":"86717:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15617,"name":"uint256","nodeType":"ElementaryTypeName","src":"86717:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"86716:21:15"},"returnParameters":{"id":15620,"nodeType":"ParameterList","parameters":[],"src":"86746:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15627,"nodeType":"FunctionDefinition","src":"86785:45:15","nodes":[],"documentation":{"id":15622,"nodeType":"StructuredDocumentation","src":"86753:27:15","text":"Sets `block.timestamp`."},"functionSelector":"e5d6bf02","implemented":false,"kind":"function","modifiers":[],"name":"warp","parameters":{"id":15625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15624,"mutability":"mutable","name":"newTimestamp","nodeType":"VariableDeclaration","scope":15627,"src":"86799:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15623,"name":"uint256","nodeType":"ElementaryTypeName","src":"86799:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"86798:22:15"},"returnParameters":{"id":15626,"nodeType":"ParameterList","parameters":[],"src":"86829:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15639,"nodeType":"FunctionDefinition","src":"86982:105:15","nodes":[],"documentation":{"id":15628,"nodeType":"StructuredDocumentation","src":"86870:107:15","text":"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"functionSelector":"08e4e116","implemented":false,"kind":"function","modifiers":[],"name":"expectCallMinGas","parameters":{"id":15637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15630,"mutability":"mutable","name":"callee","nodeType":"VariableDeclaration","scope":15639,"src":"87008:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15629,"name":"address","nodeType":"ElementaryTypeName","src":"87008:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15632,"mutability":"mutable","name":"msgValue","nodeType":"VariableDeclaration","scope":15639,"src":"87024:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15631,"name":"uint256","nodeType":"ElementaryTypeName","src":"87024:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15634,"mutability":"mutable","name":"minGas","nodeType":"VariableDeclaration","scope":15639,"src":"87042:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15633,"name":"uint64","nodeType":"ElementaryTypeName","src":"87042:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":15636,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":15639,"src":"87057:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15635,"name":"bytes","nodeType":"ElementaryTypeName","src":"87057:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"87007:70:15"},"returnParameters":{"id":15638,"nodeType":"ParameterList","parameters":[],"src":"87086:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15653,"nodeType":"FunctionDefinition","src":"87220:127:15","nodes":[],"documentation":{"id":15640,"nodeType":"StructuredDocumentation","src":"87093:122:15","text":"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"functionSelector":"e13a1834","implemented":false,"kind":"function","modifiers":[],"name":"expectCallMinGas","parameters":{"id":15651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15642,"mutability":"mutable","name":"callee","nodeType":"VariableDeclaration","scope":15653,"src":"87246:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15641,"name":"address","nodeType":"ElementaryTypeName","src":"87246:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15644,"mutability":"mutable","name":"msgValue","nodeType":"VariableDeclaration","scope":15653,"src":"87262:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15643,"name":"uint256","nodeType":"ElementaryTypeName","src":"87262:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15646,"mutability":"mutable","name":"minGas","nodeType":"VariableDeclaration","scope":15653,"src":"87280:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15645,"name":"uint64","nodeType":"ElementaryTypeName","src":"87280:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":15648,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":15653,"src":"87295:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15647,"name":"bytes","nodeType":"ElementaryTypeName","src":"87295:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15650,"mutability":"mutable","name":"count","nodeType":"VariableDeclaration","scope":15653,"src":"87316:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15649,"name":"uint64","nodeType":"ElementaryTypeName","src":"87316:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"87245:84:15"},"returnParameters":{"id":15652,"nodeType":"ParameterList","parameters":[],"src":"87346:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15661,"nodeType":"FunctionDefinition","src":"87479:66:15","nodes":[],"documentation":{"id":15654,"nodeType":"StructuredDocumentation","src":"87353:121:15","text":"Expects a call to an address with the specified calldata.\n Calldata can either be a strict or a partial match."},"functionSelector":"bd6af434","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","parameters":{"id":15659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15656,"mutability":"mutable","name":"callee","nodeType":"VariableDeclaration","scope":15661,"src":"87499:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15655,"name":"address","nodeType":"ElementaryTypeName","src":"87499:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15658,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":15661,"src":"87515:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15657,"name":"bytes","nodeType":"ElementaryTypeName","src":"87515:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"87498:37:15"},"returnParameters":{"id":15660,"nodeType":"ParameterList","parameters":[],"src":"87544:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15671,"nodeType":"FunctionDefinition","src":"87632:80:15","nodes":[],"documentation":{"id":15662,"nodeType":"StructuredDocumentation","src":"87551:76:15","text":"Expects given number of calls to an address with the specified calldata."},"functionSelector":"c1adbbff","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","parameters":{"id":15669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15664,"mutability":"mutable","name":"callee","nodeType":"VariableDeclaration","scope":15671,"src":"87652:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15663,"name":"address","nodeType":"ElementaryTypeName","src":"87652:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15666,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":15671,"src":"87668:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15665,"name":"bytes","nodeType":"ElementaryTypeName","src":"87668:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15668,"mutability":"mutable","name":"count","nodeType":"VariableDeclaration","scope":15671,"src":"87689:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15667,"name":"uint64","nodeType":"ElementaryTypeName","src":"87689:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"87651:51:15"},"returnParameters":{"id":15670,"nodeType":"ParameterList","parameters":[],"src":"87711:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15681,"nodeType":"FunctionDefinition","src":"87800:84:15","nodes":[],"documentation":{"id":15672,"nodeType":"StructuredDocumentation","src":"87718:77:15","text":"Expects a call to an address with the specified `msg.value` and calldata."},"functionSelector":"f30c7ba3","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","parameters":{"id":15679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15674,"mutability":"mutable","name":"callee","nodeType":"VariableDeclaration","scope":15681,"src":"87820:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15673,"name":"address","nodeType":"ElementaryTypeName","src":"87820:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15676,"mutability":"mutable","name":"msgValue","nodeType":"VariableDeclaration","scope":15681,"src":"87836:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15675,"name":"uint256","nodeType":"ElementaryTypeName","src":"87836:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15678,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":15681,"src":"87854:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15677,"name":"bytes","nodeType":"ElementaryTypeName","src":"87854:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"87819:55:15"},"returnParameters":{"id":15680,"nodeType":"ParameterList","parameters":[],"src":"87883:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15693,"nodeType":"FunctionDefinition","src":"87987:98:15","nodes":[],"documentation":{"id":15682,"nodeType":"StructuredDocumentation","src":"87890:92:15","text":"Expects given number of calls to an address with the specified `msg.value` and calldata."},"functionSelector":"a2b1a1ae","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","parameters":{"id":15691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15684,"mutability":"mutable","name":"callee","nodeType":"VariableDeclaration","scope":15693,"src":"88007:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15683,"name":"address","nodeType":"ElementaryTypeName","src":"88007:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15686,"mutability":"mutable","name":"msgValue","nodeType":"VariableDeclaration","scope":15693,"src":"88023:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15685,"name":"uint256","nodeType":"ElementaryTypeName","src":"88023:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15688,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":15693,"src":"88041:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15687,"name":"bytes","nodeType":"ElementaryTypeName","src":"88041:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15690,"mutability":"mutable","name":"count","nodeType":"VariableDeclaration","scope":15693,"src":"88062:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15689,"name":"uint64","nodeType":"ElementaryTypeName","src":"88062:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"88006:69:15"},"returnParameters":{"id":15692,"nodeType":"ParameterList","parameters":[],"src":"88084:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15705,"nodeType":"FunctionDefinition","src":"88178:96:15","nodes":[],"documentation":{"id":15694,"nodeType":"StructuredDocumentation","src":"88091:82:15","text":"Expect a call to an address with the specified `msg.value`, gas, and calldata."},"functionSelector":"23361207","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","parameters":{"id":15703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15696,"mutability":"mutable","name":"callee","nodeType":"VariableDeclaration","scope":15705,"src":"88198:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15695,"name":"address","nodeType":"ElementaryTypeName","src":"88198:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15698,"mutability":"mutable","name":"msgValue","nodeType":"VariableDeclaration","scope":15705,"src":"88214:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15697,"name":"uint256","nodeType":"ElementaryTypeName","src":"88214:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15700,"mutability":"mutable","name":"gas","nodeType":"VariableDeclaration","scope":15705,"src":"88232:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15699,"name":"uint64","nodeType":"ElementaryTypeName","src":"88232:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":15702,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":15705,"src":"88244:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15701,"name":"bytes","nodeType":"ElementaryTypeName","src":"88244:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"88197:67:15"},"returnParameters":{"id":15704,"nodeType":"ParameterList","parameters":[],"src":"88273:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15719,"nodeType":"FunctionDefinition","src":"88383:110:15","nodes":[],"documentation":{"id":15706,"nodeType":"StructuredDocumentation","src":"88280:98:15","text":"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata."},"functionSelector":"65b7b7cc","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","parameters":{"id":15717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15708,"mutability":"mutable","name":"callee","nodeType":"VariableDeclaration","scope":15719,"src":"88403:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15707,"name":"address","nodeType":"ElementaryTypeName","src":"88403:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15710,"mutability":"mutable","name":"msgValue","nodeType":"VariableDeclaration","scope":15719,"src":"88419:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15709,"name":"uint256","nodeType":"ElementaryTypeName","src":"88419:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15712,"mutability":"mutable","name":"gas","nodeType":"VariableDeclaration","scope":15719,"src":"88437:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15711,"name":"uint64","nodeType":"ElementaryTypeName","src":"88437:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":15714,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":15719,"src":"88449:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15713,"name":"bytes","nodeType":"ElementaryTypeName","src":"88449:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15716,"mutability":"mutable","name":"count","nodeType":"VariableDeclaration","scope":15719,"src":"88470:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15715,"name":"uint64","nodeType":"ElementaryTypeName","src":"88470:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"88402:81:15"},"returnParameters":{"id":15718,"nodeType":"ParameterList","parameters":[],"src":"88492:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15731,"nodeType":"FunctionDefinition","src":"88832:99:15","nodes":[],"documentation":{"id":15720,"nodeType":"StructuredDocumentation","src":"88499:328:15","text":"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.).\n Call this function, then emit an event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"functionSelector":"491cc7c2","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","parameters":{"id":15729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15722,"mutability":"mutable","name":"checkTopic1","nodeType":"VariableDeclaration","scope":15731,"src":"88852:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15721,"name":"bool","nodeType":"ElementaryTypeName","src":"88852:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15724,"mutability":"mutable","name":"checkTopic2","nodeType":"VariableDeclaration","scope":15731,"src":"88870:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15723,"name":"bool","nodeType":"ElementaryTypeName","src":"88870:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15726,"mutability":"mutable","name":"checkTopic3","nodeType":"VariableDeclaration","scope":15731,"src":"88888:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15725,"name":"bool","nodeType":"ElementaryTypeName","src":"88888:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15728,"mutability":"mutable","name":"checkData","nodeType":"VariableDeclaration","scope":15731,"src":"88906:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15727,"name":"bool","nodeType":"ElementaryTypeName","src":"88906:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"88851:70:15"},"returnParameters":{"id":15730,"nodeType":"ParameterList","parameters":[],"src":"88930:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15745,"nodeType":"FunctionDefinition","src":"89034:124:15","nodes":[],"documentation":{"id":15732,"nodeType":"StructuredDocumentation","src":"88937:92:15","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"81bad6f3","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","parameters":{"id":15743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15734,"mutability":"mutable","name":"checkTopic1","nodeType":"VariableDeclaration","scope":15745,"src":"89054:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15733,"name":"bool","nodeType":"ElementaryTypeName","src":"89054:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15736,"mutability":"mutable","name":"checkTopic2","nodeType":"VariableDeclaration","scope":15745,"src":"89072:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15735,"name":"bool","nodeType":"ElementaryTypeName","src":"89072:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15738,"mutability":"mutable","name":"checkTopic3","nodeType":"VariableDeclaration","scope":15745,"src":"89090:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15737,"name":"bool","nodeType":"ElementaryTypeName","src":"89090:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15740,"mutability":"mutable","name":"checkData","nodeType":"VariableDeclaration","scope":15745,"src":"89108:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15739,"name":"bool","nodeType":"ElementaryTypeName","src":"89108:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15742,"mutability":"mutable","name":"emitter","nodeType":"VariableDeclaration","scope":15745,"src":"89124:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15741,"name":"address","nodeType":"ElementaryTypeName","src":"89124:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"89053:87:15"},"returnParameters":{"id":15744,"nodeType":"ParameterList","parameters":[],"src":"89157:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15749,"nodeType":"FunctionDefinition","src":"89428:31:15","nodes":[],"documentation":{"id":15746,"nodeType":"StructuredDocumentation","src":"89164:259:15","text":"Prepare an expected log with all topic and data checks enabled.\n Call this function, then emit an event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data."},"functionSelector":"440ed10d","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","parameters":{"id":15747,"nodeType":"ParameterList","parameters":[],"src":"89447:2:15"},"returnParameters":{"id":15748,"nodeType":"ParameterList","parameters":[],"src":"89458:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15755,"nodeType":"FunctionDefinition","src":"89562:46:15","nodes":[],"documentation":{"id":15750,"nodeType":"StructuredDocumentation","src":"89465:92:15","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"86b9620d","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","parameters":{"id":15753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15752,"mutability":"mutable","name":"emitter","nodeType":"VariableDeclaration","scope":15755,"src":"89582:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15751,"name":"address","nodeType":"ElementaryTypeName","src":"89582:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"89581:17:15"},"returnParameters":{"id":15754,"nodeType":"ParameterList","parameters":[],"src":"89607:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15759,"nodeType":"FunctionDefinition","src":"89674:33:15","nodes":[],"documentation":{"id":15756,"nodeType":"StructuredDocumentation","src":"89614:55:15","text":"Expects an error on next call with any revert data."},"functionSelector":"f4844814","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","parameters":{"id":15757,"nodeType":"ParameterList","parameters":[],"src":"89695:2:15"},"returnParameters":{"id":15758,"nodeType":"ParameterList","parameters":[],"src":"89706:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15765,"nodeType":"FunctionDefinition","src":"89785:50:15","nodes":[],"documentation":{"id":15760,"nodeType":"StructuredDocumentation","src":"89713:67:15","text":"Expects an error on next call that starts with the revert data."},"functionSelector":"c31eb0e0","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","parameters":{"id":15763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15762,"mutability":"mutable","name":"revertData","nodeType":"VariableDeclaration","scope":15765,"src":"89807:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":15761,"name":"bytes4","nodeType":"ElementaryTypeName","src":"89807:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"89806:19:15"},"returnParameters":{"id":15764,"nodeType":"ParameterList","parameters":[],"src":"89834:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15771,"nodeType":"FunctionDefinition","src":"89917:58:15","nodes":[],"documentation":{"id":15766,"nodeType":"StructuredDocumentation","src":"89841:71:15","text":"Expects an error on next call that exactly matches the revert data."},"functionSelector":"f28dceb3","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","parameters":{"id":15769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15768,"mutability":"mutable","name":"revertData","nodeType":"VariableDeclaration","scope":15771,"src":"89939:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15767,"name":"bytes","nodeType":"ElementaryTypeName","src":"89939:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"89938:27:15"},"returnParameters":{"id":15770,"nodeType":"ParameterList","parameters":[],"src":"89974:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15779,"nodeType":"FunctionDefinition","src":"90204:59:15","nodes":[],"documentation":{"id":15772,"nodeType":"StructuredDocumentation","src":"89981:218:15","text":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the current subcontext. If any other\n memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"functionSelector":"6d016688","implemented":false,"kind":"function","modifiers":[],"name":"expectSafeMemory","parameters":{"id":15777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15774,"mutability":"mutable","name":"min","nodeType":"VariableDeclaration","scope":15779,"src":"90230:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15773,"name":"uint64","nodeType":"ElementaryTypeName","src":"90230:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":15776,"mutability":"mutable","name":"max","nodeType":"VariableDeclaration","scope":15779,"src":"90242:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15775,"name":"uint64","nodeType":"ElementaryTypeName","src":"90242:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"90229:24:15"},"returnParameters":{"id":15778,"nodeType":"ParameterList","parameters":[],"src":"90262:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15787,"nodeType":"FunctionDefinition","src":"90505:63:15","nodes":[],"documentation":{"id":15780,"nodeType":"StructuredDocumentation","src":"90269:231:15","text":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the next created subcontext.\n If any other memory is written to, the test will fail. Can be called multiple times to add more ranges\n to the set."},"functionSelector":"05838bf4","implemented":false,"kind":"function","modifiers":[],"name":"expectSafeMemoryCall","parameters":{"id":15785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15782,"mutability":"mutable","name":"min","nodeType":"VariableDeclaration","scope":15787,"src":"90535:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15781,"name":"uint64","nodeType":"ElementaryTypeName","src":"90535:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":15784,"mutability":"mutable","name":"max","nodeType":"VariableDeclaration","scope":15787,"src":"90547:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15783,"name":"uint64","nodeType":"ElementaryTypeName","src":"90547:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"90534:24:15"},"returnParameters":{"id":15786,"nodeType":"ParameterList","parameters":[],"src":"90567:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15793,"nodeType":"FunctionDefinition","src":"90646:38:15","nodes":[],"documentation":{"id":15788,"nodeType":"StructuredDocumentation","src":"90574:67:15","text":"Marks a test as skipped. Must be called at the top of the test."},"functionSelector":"dd82d13e","implemented":false,"kind":"function","modifiers":[],"name":"skip","parameters":{"id":15791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15790,"mutability":"mutable","name":"skipTest","nodeType":"VariableDeclaration","scope":15793,"src":"90660:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15789,"name":"bool","nodeType":"ElementaryTypeName","src":"90660:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"90659:15:15"},"returnParameters":{"id":15792,"nodeType":"ParameterList","parameters":[],"src":"90683:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15797,"nodeType":"FunctionDefinition","src":"90759:41:15","nodes":[],"documentation":{"id":15794,"nodeType":"StructuredDocumentation","src":"90690:64:15","text":"Stops all safe memory expectation in the current subcontext."},"functionSelector":"0956441b","implemented":false,"kind":"function","modifiers":[],"name":"stopExpectSafeMemory","parameters":{"id":15795,"nodeType":"ParameterList","parameters":[],"src":"90788:2:15"},"returnParameters":{"id":15796,"nodeType":"ParameterList","parameters":[],"src":"90799:0:15"},"scope":15798,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":15200,"name":"VmSafe","nodeType":"UserDefinedTypeName","referencedDeclaration":15198,"src":"76432:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_VmSafe_$15198","typeString":"contract VmSafe"}},"id":15201,"nodeType":"InheritanceSpecifier","src":"76432:6:15"}],"contractDependencies":[15198],"contractKind":"interface","documentation":{"id":15199,"nodeType":"StructuredDocumentation","src":"76245:171:15","text":"The `Vm` interface does allow manipulation of the EVM state. These are all intended to be used\n in tests, but it is not recommended to use these cheats in scripts."},"fullyImplemented":false,"linearizedBaseContracts":[15798,15198],"name":"Vm","scope":15799}],"license":"MIT OR Apache-2.0"},"id":15}